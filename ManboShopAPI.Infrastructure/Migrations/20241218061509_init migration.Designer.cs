// <auto-generated />
using System;
using ManboShopAPI.Infrastructure.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ManboShopAPI.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20241218061509_init migration")]
    partial class initmigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ManboShopAPI.Domain.Entities.Address", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AreaOrColonyOrStreetOrSectorOrVillage")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("BuildingOrCompanyOrApartment")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("FlatOrHouse")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("PinCode")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Addresses");
                });

            modelBuilder.Entity("ManboShopAPI.Domain.Entities.Banner", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Banners");
                });

            modelBuilder.Entity("ManboShopAPI.Domain.Entities.BannerDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BannerId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("BannerId");

                    b.HasIndex("ProductId");

                    b.ToTable("BannerDetails");
                });

            modelBuilder.Entity("ManboShopAPI.Domain.Entities.Brand", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Brands");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2024, 12, 18, 6, 15, 9, 428, DateTimeKind.Utc).AddTicks(1668),
                            ImageUrl = "https://example.com/images/nike.jpg",
                            Name = "Nike"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2024, 12, 18, 6, 15, 9, 428, DateTimeKind.Utc).AddTicks(2043),
                            ImageUrl = "https://example.com/images/adidas.jpg",
                            Name = "Adidas"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2024, 12, 18, 6, 15, 9, 428, DateTimeKind.Utc).AddTicks(2044),
                            ImageUrl = "https://example.com/images/gucci.jpg",
                            Name = "Gucci"
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2024, 12, 18, 6, 15, 9, 428, DateTimeKind.Utc).AddTicks(2060),
                            ImageUrl = "https://example.com/images/louis-vuitton.jpg",
                            Name = "Louis Vuitton"
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2024, 12, 18, 6, 15, 9, 428, DateTimeKind.Utc).AddTicks(2061),
                            ImageUrl = "https://example.com/images/zara.jpg",
                            Name = "Zara"
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTime(2024, 12, 18, 6, 15, 9, 428, DateTimeKind.Utc).AddTicks(2069),
                            ImageUrl = "https://example.com/images/h&m.jpg",
                            Name = "H&M"
                        },
                        new
                        {
                            Id = 7,
                            CreatedAt = new DateTime(2024, 12, 18, 6, 15, 9, 428, DateTimeKind.Utc).AddTicks(2070),
                            ImageUrl = "https://example.com/images/chanel.jpg",
                            Name = "Chanel"
                        },
                        new
                        {
                            Id = 8,
                            CreatedAt = new DateTime(2024, 12, 18, 6, 15, 9, 428, DateTimeKind.Utc).AddTicks(2071),
                            ImageUrl = "https://example.com/images/prada.jpg",
                            Name = "Prada"
                        },
                        new
                        {
                            Id = 9,
                            CreatedAt = new DateTime(2024, 12, 18, 6, 15, 9, 428, DateTimeKind.Utc).AddTicks(2072),
                            ImageUrl = "https://example.com/images/versace.jpg",
                            Name = "Versace"
                        },
                        new
                        {
                            Id = 10,
                            CreatedAt = new DateTime(2024, 12, 18, 6, 15, 9, 428, DateTimeKind.Utc).AddTicks(2074),
                            ImageUrl = "https://example.com/images/burberry.jpg",
                            Name = "Burberry"
                        },
                        new
                        {
                            Id = 11,
                            CreatedAt = new DateTime(2024, 12, 18, 6, 15, 9, 428, DateTimeKind.Utc).AddTicks(2075),
                            ImageUrl = "https://example.com/images/dior.jpg",
                            Name = "Dior"
                        },
                        new
                        {
                            Id = 12,
                            CreatedAt = new DateTime(2024, 12, 18, 6, 15, 9, 428, DateTimeKind.Utc).AddTicks(2076),
                            ImageUrl = "https://example.com/images/calvin-klein.jpg",
                            Name = "Calvin Klein"
                        },
                        new
                        {
                            Id = 13,
                            CreatedAt = new DateTime(2024, 12, 18, 6, 15, 9, 428, DateTimeKind.Utc).AddTicks(2077),
                            ImageUrl = "https://example.com/images/tommy-hilfiger.jpg",
                            Name = "Tommy Hilfiger"
                        },
                        new
                        {
                            Id = 14,
                            CreatedAt = new DateTime(2024, 12, 18, 6, 15, 9, 428, DateTimeKind.Utc).AddTicks(2078),
                            ImageUrl = "https://example.com/images/levis.jpg",
                            Name = "Levi's"
                        },
                        new
                        {
                            Id = 15,
                            CreatedAt = new DateTime(2024, 12, 18, 6, 15, 9, 428, DateTimeKind.Utc).AddTicks(2078),
                            ImageUrl = "https://example.com/images/uniqlo.jpg",
                            Name = "Uniqlo"
                        },
                        new
                        {
                            Id = 16,
                            CreatedAt = new DateTime(2024, 12, 18, 6, 15, 9, 428, DateTimeKind.Utc).AddTicks(2079),
                            ImageUrl = "https://example.com/images/lacoste.jpg",
                            Name = "Lacoste"
                        },
                        new
                        {
                            Id = 17,
                            CreatedAt = new DateTime(2024, 12, 18, 6, 15, 9, 428, DateTimeKind.Utc).AddTicks(2080),
                            ImageUrl = "https://example.com/images/the-north-face.jpg",
                            Name = "The North Face"
                        },
                        new
                        {
                            Id = 18,
                            CreatedAt = new DateTime(2024, 12, 18, 6, 15, 9, 428, DateTimeKind.Utc).AddTicks(2082),
                            ImageUrl = "https://example.com/images/ralph-lauren.jpg",
                            Name = "Ralph Lauren"
                        },
                        new
                        {
                            Id = 19,
                            CreatedAt = new DateTime(2024, 12, 18, 6, 15, 9, 428, DateTimeKind.Utc).AddTicks(2083),
                            ImageUrl = "https://example.com/images/puma.jpg",
                            Name = "Puma"
                        },
                        new
                        {
                            Id = 20,
                            CreatedAt = new DateTime(2024, 12, 18, 6, 15, 9, 428, DateTimeKind.Utc).AddTicks(2084),
                            ImageUrl = "https://example.com/images/hugo-boss.jpg",
                            Name = "Hugo Boss"
                        },
                        new
                        {
                            Id = 21,
                            CreatedAt = new DateTime(2024, 12, 18, 6, 15, 9, 428, DateTimeKind.Utc).AddTicks(2085),
                            ImageUrl = "https://example.com/images/armani.jpg",
                            Name = "Armani"
                        },
                        new
                        {
                            Id = 22,
                            CreatedAt = new DateTime(2024, 12, 18, 6, 15, 9, 428, DateTimeKind.Utc).AddTicks(2086),
                            ImageUrl = "https://example.com/images/balenciaga.jpg",
                            Name = "Balenciaga"
                        },
                        new
                        {
                            Id = 23,
                            CreatedAt = new DateTime(2024, 12, 18, 6, 15, 9, 428, DateTimeKind.Utc).AddTicks(2087),
                            ImageUrl = "https://example.com/images/fendi.jpg",
                            Name = "Fendi"
                        },
                        new
                        {
                            Id = 24,
                            CreatedAt = new DateTime(2024, 12, 18, 6, 15, 9, 428, DateTimeKind.Utc).AddTicks(2100),
                            ImageUrl = "https://example.com/images/givenchy.jpg",
                            Name = "Givenchy"
                        },
                        new
                        {
                            Id = 25,
                            CreatedAt = new DateTime(2024, 12, 18, 6, 15, 9, 428, DateTimeKind.Utc).AddTicks(2101),
                            ImageUrl = "https://example.com/images/hermes.jpg",
                            Name = "Hermès"
                        },
                        new
                        {
                            Id = 26,
                            CreatedAt = new DateTime(2024, 12, 18, 6, 15, 9, 428, DateTimeKind.Utc).AddTicks(2102),
                            ImageUrl = "https://example.com/images/salvatore-ferragamo.jpg",
                            Name = "Salvatore Ferragamo"
                        },
                        new
                        {
                            Id = 27,
                            CreatedAt = new DateTime(2024, 12, 18, 6, 15, 9, 428, DateTimeKind.Utc).AddTicks(2103),
                            ImageUrl = "https://example.com/images/valentino.jpg",
                            Name = "Valentino"
                        },
                        new
                        {
                            Id = 28,
                            CreatedAt = new DateTime(2024, 12, 18, 6, 15, 9, 428, DateTimeKind.Utc).AddTicks(2109),
                            ImageUrl = "https://example.com/images/dolce-gabbana.jpg",
                            Name = "Dolce & Gabbana"
                        },
                        new
                        {
                            Id = 29,
                            CreatedAt = new DateTime(2024, 12, 18, 6, 15, 9, 428, DateTimeKind.Utc).AddTicks(2110),
                            ImageUrl = "https://example.com/images/gap.jpg",
                            Name = "Gap"
                        },
                        new
                        {
                            Id = 30,
                            CreatedAt = new DateTime(2024, 12, 18, 6, 15, 9, 428, DateTimeKind.Utc).AddTicks(2118),
                            ImageUrl = "https://example.com/images/forever21.jpg",
                            Name = "Forever 21"
                        },
                        new
                        {
                            Id = 31,
                            CreatedAt = new DateTime(2024, 12, 18, 6, 15, 9, 428, DateTimeKind.Utc).AddTicks(2119),
                            ImageUrl = "https://example.com/images/new-balance.jpg",
                            Name = "New Balance"
                        },
                        new
                        {
                            Id = 32,
                            CreatedAt = new DateTime(2024, 12, 18, 6, 15, 9, 428, DateTimeKind.Utc).AddTicks(2120),
                            ImageUrl = "https://example.com/images/vans.jpg",
                            Name = "Vans"
                        },
                        new
                        {
                            Id = 33,
                            CreatedAt = new DateTime(2024, 12, 18, 6, 15, 9, 428, DateTimeKind.Utc).AddTicks(2121),
                            ImageUrl = "https://example.com/images/converse.jpg",
                            Name = "Converse"
                        },
                        new
                        {
                            Id = 34,
                            CreatedAt = new DateTime(2024, 12, 18, 6, 15, 9, 428, DateTimeKind.Utc).AddTicks(2122),
                            ImageUrl = "https://example.com/images/under-armour.jpg",
                            Name = "Under Armour"
                        },
                        new
                        {
                            Id = 35,
                            CreatedAt = new DateTime(2024, 12, 18, 6, 15, 9, 428, DateTimeKind.Utc).AddTicks(2123),
                            ImageUrl = "https://example.com/images/reebok.jpg",
                            Name = "Reebok"
                        },
                        new
                        {
                            Id = 36,
                            CreatedAt = new DateTime(2024, 12, 18, 6, 15, 9, 428, DateTimeKind.Utc).AddTicks(2124),
                            ImageUrl = "https://example.com/images/coach.jpg",
                            Name = "Coach"
                        },
                        new
                        {
                            Id = 37,
                            CreatedAt = new DateTime(2024, 12, 18, 6, 15, 9, 428, DateTimeKind.Utc).AddTicks(2125),
                            ImageUrl = "https://example.com/images/kate-spade.jpg",
                            Name = "Kate Spade"
                        },
                        new
                        {
                            Id = 38,
                            CreatedAt = new DateTime(2024, 12, 18, 6, 15, 9, 428, DateTimeKind.Utc).AddTicks(2126),
                            ImageUrl = "https://example.com/images/michael-kors.jpg",
                            Name = "Michael Kors"
                        },
                        new
                        {
                            Id = 39,
                            CreatedAt = new DateTime(2024, 12, 18, 6, 15, 9, 428, DateTimeKind.Utc).AddTicks(2127),
                            ImageUrl = "https://example.com/images/bally.jpg",
                            Name = "Bally"
                        },
                        new
                        {
                            Id = 40,
                            CreatedAt = new DateTime(2024, 12, 18, 6, 15, 9, 428, DateTimeKind.Utc).AddTicks(2128),
                            ImageUrl = "https://example.com/images/guess.jpg",
                            Name = "Guess"
                        });
                });

            modelBuilder.Entity("ManboShopAPI.Domain.Entities.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2024, 12, 18, 6, 15, 7, 546, DateTimeKind.Utc).AddTicks(9059),
                            ImageUrl = "https://example.com/images/men-clothing.jpg",
                            Name = "Men's Clothing"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2024, 12, 18, 6, 15, 7, 546, DateTimeKind.Utc).AddTicks(9405),
                            ImageUrl = "https://example.com/images/women-clothing.jpg",
                            Name = "Women's Clothing"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2024, 12, 18, 6, 15, 7, 546, DateTimeKind.Utc).AddTicks(9407),
                            ImageUrl = "https://example.com/images/children-clothing.jpg",
                            Name = "Children's Clothing"
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2024, 12, 18, 6, 15, 7, 546, DateTimeKind.Utc).AddTicks(9408),
                            ImageUrl = "https://example.com/images/shoes.jpg",
                            Name = "Shoes"
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2024, 12, 18, 6, 15, 7, 546, DateTimeKind.Utc).AddTicks(9409),
                            ImageUrl = "https://example.com/images/bags.jpg",
                            Name = "Bags"
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTime(2024, 12, 18, 6, 15, 7, 546, DateTimeKind.Utc).AddTicks(9453),
                            ImageUrl = "https://example.com/images/accessories.jpg",
                            Name = "Accessories"
                        },
                        new
                        {
                            Id = 7,
                            CreatedAt = new DateTime(2024, 12, 18, 6, 15, 7, 546, DateTimeKind.Utc).AddTicks(9454),
                            ImageUrl = "https://example.com/images/watches.jpg",
                            Name = "Watches"
                        },
                        new
                        {
                            Id = 8,
                            CreatedAt = new DateTime(2024, 12, 18, 6, 15, 7, 546, DateTimeKind.Utc).AddTicks(9455),
                            ImageUrl = "https://example.com/images/sportswear.jpg",
                            Name = "Sportswear"
                        },
                        new
                        {
                            Id = 9,
                            CreatedAt = new DateTime(2024, 12, 18, 6, 15, 7, 546, DateTimeKind.Utc).AddTicks(9456),
                            ImageUrl = "https://example.com/images/swimwear.jpg",
                            Name = "Swimwear"
                        },
                        new
                        {
                            Id = 10,
                            CreatedAt = new DateTime(2024, 12, 18, 6, 15, 7, 546, DateTimeKind.Utc).AddTicks(9461),
                            ImageUrl = "https://example.com/images/formal-wear.jpg",
                            Name = "Formal Wear"
                        },
                        new
                        {
                            Id = 11,
                            CreatedAt = new DateTime(2024, 12, 18, 6, 15, 7, 546, DateTimeKind.Utc).AddTicks(9462),
                            ImageUrl = "https://example.com/images/casual-wear.jpg",
                            Name = "Casual Wear"
                        },
                        new
                        {
                            Id = 12,
                            CreatedAt = new DateTime(2024, 12, 18, 6, 15, 7, 546, DateTimeKind.Utc).AddTicks(9462),
                            ImageUrl = "https://example.com/images/t-shirts.jpg",
                            Name = "T-Shirts"
                        },
                        new
                        {
                            Id = 13,
                            CreatedAt = new DateTime(2024, 12, 18, 6, 15, 7, 546, DateTimeKind.Utc).AddTicks(9463),
                            ImageUrl = "https://example.com/images/jeans.jpg",
                            Name = "Jeans"
                        },
                        new
                        {
                            Id = 14,
                            CreatedAt = new DateTime(2024, 12, 18, 6, 15, 7, 546, DateTimeKind.Utc).AddTicks(9464),
                            ImageUrl = "https://example.com/images/jackets-coats.jpg",
                            Name = "Jackets & Coats"
                        },
                        new
                        {
                            Id = 15,
                            CreatedAt = new DateTime(2024, 12, 18, 6, 15, 7, 546, DateTimeKind.Utc).AddTicks(9465),
                            ImageUrl = "https://example.com/images/hats-caps.jpg",
                            Name = "Hats & Caps"
                        },
                        new
                        {
                            Id = 16,
                            CreatedAt = new DateTime(2024, 12, 18, 6, 15, 7, 546, DateTimeKind.Utc).AddTicks(9466),
                            ImageUrl = "https://example.com/images/scarves.jpg",
                            Name = "Scarves"
                        },
                        new
                        {
                            Id = 17,
                            CreatedAt = new DateTime(2024, 12, 18, 6, 15, 7, 546, DateTimeKind.Utc).AddTicks(9467),
                            ImageUrl = "https://example.com/images/sunglasses.jpg",
                            Name = "Sunglasses"
                        },
                        new
                        {
                            Id = 18,
                            CreatedAt = new DateTime(2024, 12, 18, 6, 15, 7, 546, DateTimeKind.Utc).AddTicks(9469),
                            ImageUrl = "https://example.com/images/belts.jpg",
                            Name = "Belts"
                        },
                        new
                        {
                            Id = 19,
                            CreatedAt = new DateTime(2024, 12, 18, 6, 15, 7, 546, DateTimeKind.Utc).AddTicks(9470),
                            ImageUrl = "https://example.com/images/undergarments.jpg",
                            Name = "Undergarments"
                        },
                        new
                        {
                            Id = 20,
                            CreatedAt = new DateTime(2024, 12, 18, 6, 15, 7, 546, DateTimeKind.Utc).AddTicks(9470),
                            ImageUrl = "https://example.com/images/sports-shoes.jpg",
                            Name = "Sports Shoes"
                        },
                        new
                        {
                            Id = 21,
                            CreatedAt = new DateTime(2024, 12, 18, 6, 15, 7, 546, DateTimeKind.Utc).AddTicks(9471),
                            ImageUrl = "https://example.com/images/boots.jpg",
                            Name = "Boots"
                        },
                        new
                        {
                            Id = 22,
                            CreatedAt = new DateTime(2024, 12, 18, 6, 15, 7, 546, DateTimeKind.Utc).AddTicks(9472),
                            ImageUrl = "https://example.com/images/high-heels.jpg",
                            Name = "High Heels"
                        },
                        new
                        {
                            Id = 23,
                            CreatedAt = new DateTime(2024, 12, 18, 6, 15, 7, 546, DateTimeKind.Utc).AddTicks(9475),
                            ImageUrl = "https://example.com/images/sneakers.jpg",
                            Name = "Sneakers"
                        },
                        new
                        {
                            Id = 24,
                            CreatedAt = new DateTime(2024, 12, 18, 6, 15, 7, 546, DateTimeKind.Utc).AddTicks(9476),
                            ImageUrl = "https://example.com/images/suits.jpg",
                            Name = "Suits"
                        },
                        new
                        {
                            Id = 25,
                            CreatedAt = new DateTime(2024, 12, 18, 6, 15, 7, 546, DateTimeKind.Utc).AddTicks(9477),
                            ImageUrl = "https://example.com/images/dresses.jpg",
                            Name = "Dresses"
                        },
                        new
                        {
                            Id = 26,
                            CreatedAt = new DateTime(2024, 12, 18, 6, 15, 7, 546, DateTimeKind.Utc).AddTicks(9478),
                            ImageUrl = "https://example.com/images/blouses.jpg",
                            Name = "Blouses"
                        },
                        new
                        {
                            Id = 27,
                            CreatedAt = new DateTime(2024, 12, 18, 6, 15, 7, 546, DateTimeKind.Utc).AddTicks(9479),
                            ImageUrl = "https://example.com/images/skirts.jpg",
                            Name = "Skirts"
                        },
                        new
                        {
                            Id = 28,
                            CreatedAt = new DateTime(2024, 12, 18, 6, 15, 7, 546, DateTimeKind.Utc).AddTicks(9480),
                            ImageUrl = "https://example.com/images/shorts.jpg",
                            Name = "Shorts"
                        },
                        new
                        {
                            Id = 29,
                            CreatedAt = new DateTime(2024, 12, 18, 6, 15, 7, 546, DateTimeKind.Utc).AddTicks(9481),
                            ImageUrl = "https://example.com/images/pajamas.jpg",
                            Name = "Pajamas"
                        },
                        new
                        {
                            Id = 30,
                            CreatedAt = new DateTime(2024, 12, 18, 6, 15, 7, 546, DateTimeKind.Utc).AddTicks(9482),
                            ImageUrl = "https://example.com/images/outerwear.jpg",
                            Name = "Outerwear"
                        },
                        new
                        {
                            Id = 31,
                            CreatedAt = new DateTime(2024, 12, 18, 6, 15, 7, 546, DateTimeKind.Utc).AddTicks(9482),
                            ImageUrl = "https://example.com/images/activewear.jpg",
                            Name = "Activewear"
                        },
                        new
                        {
                            Id = 32,
                            CreatedAt = new DateTime(2024, 12, 18, 6, 15, 7, 546, DateTimeKind.Utc).AddTicks(9483),
                            ImageUrl = "https://example.com/images/raincoats.jpg",
                            Name = "Raincoats"
                        },
                        new
                        {
                            Id = 33,
                            CreatedAt = new DateTime(2024, 12, 18, 6, 15, 7, 546, DateTimeKind.Utc).AddTicks(9484),
                            ImageUrl = "https://example.com/images/cardigans.jpg",
                            Name = "Cardigans"
                        },
                        new
                        {
                            Id = 34,
                            CreatedAt = new DateTime(2024, 12, 18, 6, 15, 7, 546, DateTimeKind.Utc).AddTicks(9485),
                            ImageUrl = "https://example.com/images/sweaters.jpg",
                            Name = "Sweaters"
                        },
                        new
                        {
                            Id = 35,
                            CreatedAt = new DateTime(2024, 12, 18, 6, 15, 7, 546, DateTimeKind.Utc).AddTicks(9486),
                            ImageUrl = "https://example.com/images/leggings.jpg",
                            Name = "Leggings"
                        },
                        new
                        {
                            Id = 36,
                            CreatedAt = new DateTime(2024, 12, 18, 6, 15, 7, 546, DateTimeKind.Utc).AddTicks(9487),
                            ImageUrl = "https://example.com/images/tracksuits.jpg",
                            Name = "Tracksuits"
                        },
                        new
                        {
                            Id = 37,
                            CreatedAt = new DateTime(2024, 12, 18, 6, 15, 7, 546, DateTimeKind.Utc).AddTicks(9488),
                            ImageUrl = "https://example.com/images/gloves.jpg",
                            Name = "Gloves"
                        },
                        new
                        {
                            Id = 38,
                            CreatedAt = new DateTime(2024, 12, 18, 6, 15, 7, 546, DateTimeKind.Utc).AddTicks(9489),
                            ImageUrl = "https://example.com/images/socks.jpg",
                            Name = "Socks"
                        },
                        new
                        {
                            Id = 39,
                            CreatedAt = new DateTime(2024, 12, 18, 6, 15, 7, 546, DateTimeKind.Utc).AddTicks(9490),
                            ImageUrl = "https://example.com/images/loungewear.jpg",
                            Name = "Loungewear"
                        },
                        new
                        {
                            Id = 40,
                            CreatedAt = new DateTime(2024, 12, 18, 6, 15, 7, 546, DateTimeKind.Utc).AddTicks(9491),
                            ImageUrl = "https://example.com/images/winter-wear.jpg",
                            Name = "Winter Wear"
                        });
                });

            modelBuilder.Entity("ManboShopAPI.Domain.Entities.Coupon", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("CurrentUsages")
                        .HasColumnType("int");

                    b.Property<DateTime>("ExpirationDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("MaxUsages")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Coupons");
                });

            modelBuilder.Entity("ManboShopAPI.Domain.Entities.CouponCondition", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Attribute")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("CouponId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("DiscountAmount")
                        .HasColumnType("int");

                    b.Property<string>("Operator")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Value")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("CouponId");

                    b.ToTable("CouponConditions");
                });

            modelBuilder.Entity("ManboShopAPI.Domain.Entities.Favorite", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.HasIndex("UserId");

                    b.ToTable("Favorites");
                });

            modelBuilder.Entity("ManboShopAPI.Domain.Entities.Feedback", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Star")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.HasIndex("UserId");

                    b.ToTable("Feedbacks");
                });

            modelBuilder.Entity("ManboShopAPI.Domain.Entities.News", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("News");
                });

            modelBuilder.Entity("ManboShopAPI.Domain.Entities.NewsDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("NewsId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("NewsId");

                    b.HasIndex("ProductId");

                    b.ToTable("NewsDetails");
                });

            modelBuilder.Entity("ManboShopAPI.Domain.Entities.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CouponId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Note")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CouponId");

                    b.HasIndex("UserId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("ManboShopAPI.Domain.Entities.OrderDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CouponId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CouponId");

                    b.HasIndex("OrderId");

                    b.ToTable("OrderDetails");
                });

            modelBuilder.Entity("ManboShopAPI.Domain.Entities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("BrandId")
                        .HasColumnType("int");

                    b.Property<int>("BuyTurn")
                        .HasColumnType("int");

                    b.Property<int?>("CategoryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("OldPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<string>("Specification")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("BrandId");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BrandId = 3,
                            BuyTurn = 128,
                            CategoryId = 4,
                            CreatedAt = new DateTime(2024, 12, 18, 6, 15, 7, 540, DateTimeKind.Utc).AddTicks(5862),
                            Description = "Sản phẩm được làm từ Cotton cao cấp. Thoáng mát. Phù hợp cho các dịp thể thao",
                            Name = "Uniqlo Áo Polo Thoải Mái",
                            OldPrice = 4317540.1677663763837148279184m,
                            Price = 3472532.087834561900000m,
                            Quantity = 383,
                            Specification = "Kích thước: XS, S, L. Màu sắc: Hồng, Đen"
                        },
                        new
                        {
                            Id = 2,
                            BrandId = 9,
                            BuyTurn = 63,
                            CategoryId = 2,
                            CreatedAt = new DateTime(2024, 12, 18, 6, 15, 7, 545, DateTimeKind.Utc).AddTicks(9491),
                            Description = "Sản phẩm được làm từ Vải Linen. Thiết kế hiện đại. Phù hợp cho các dịp tiệc tùng",
                            Name = "Chanel Blazer Sang Trọng",
                            OldPrice = 4249101.3941340976831914811617m,
                            Price = 3253746.988758479900000m,
                            Quantity = 317,
                            Specification = "Kích thước: XXL, M, L. Màu sắc: Đỏ, Xanh Navy"
                        },
                        new
                        {
                            Id = 3,
                            BrandId = 8,
                            BuyTurn = 122,
                            CategoryId = 3,
                            CreatedAt = new DateTime(2024, 12, 18, 6, 15, 7, 545, DateTimeKind.Utc).AddTicks(9758),
                            Description = "Sản phẩm được làm từ Sợi Bamboo. Kiểu dáng thanh lịch. Phù hợp cho các dịp văn phòng",
                            Name = "Louis Vuitton Váy Liền Trẻ Trung",
                            OldPrice = 1542972.8012491716865181121245m,
                            Price = 1235455.032252657650000m,
                            Quantity = 172,
                            Specification = "Kích thước: XXL, M, XS. Màu sắc: Hồng, Đen"
                        },
                        new
                        {
                            Id = 4,
                            BrandId = 2,
                            BuyTurn = 166,
                            CategoryId = 1,
                            CreatedAt = new DateTime(2024, 12, 18, 6, 15, 7, 545, DateTimeKind.Utc).AddTicks(9804),
                            Description = "Sản phẩm được làm từ Chất liệu Nhật Bản. Phù hợp nhiều dáng người. Phù hợp cho các dịp văn phòng",
                            Name = "Chanel Đầm Dạ Hội Thời Thượng",
                            OldPrice = 6268605.1326935572281826221395m,
                            Price = 4266169.712323220300000m,
                            Quantity = 366,
                            Specification = "Kích thước: XS, M, XXL. Màu sắc: Trắng, Xám"
                        },
                        new
                        {
                            Id = 5,
                            BrandId = 8,
                            BuyTurn = 174,
                            CategoryId = 5,
                            CreatedAt = new DateTime(2024, 12, 18, 6, 15, 7, 545, DateTimeKind.Utc).AddTicks(9884),
                            Description = "Sản phẩm được làm từ Chất liệu Nhật Bản. Thiết kế hiện đại. Phù hợp cho các dịp thể thao",
                            Name = "Zara Áo Sơ Mi Sang Trọng",
                            OldPrice = 1901457.8470746726750222208254m,
                            Price = 1449368.826112093100000m,
                            Quantity = 492,
                            Specification = "Kích thước: XL, XS, XXL. Màu sắc: Đen, Đỏ"
                        },
                        new
                        {
                            Id = 6,
                            BrandId = 2,
                            BuyTurn = 107,
                            CategoryId = 1,
                            CreatedAt = new DateTime(2024, 12, 18, 6, 15, 7, 545, DateTimeKind.Utc).AddTicks(9918),
                            Description = "Sản phẩm được làm từ Vải Organic. Thoáng mát. Phù hợp cho các dịp thể thao",
                            Name = "Louis Vuitton Áo Khoác Sang Trọng",
                            OldPrice = 4099751.8960911480454810607437m,
                            Price = 3372508.906288231550000m,
                            Quantity = 384,
                            Specification = "Kích thước: S, XL, L. Màu sắc: Xanh Navy, Đen"
                        },
                        new
                        {
                            Id = 7,
                            BrandId = 1,
                            BuyTurn = 175,
                            CategoryId = 3,
                            CreatedAt = new DateTime(2024, 12, 18, 6, 15, 7, 545, DateTimeKind.Utc).AddTicks(9952),
                            Description = "Sản phẩm được làm từ Vải Châu Âu. Co giãn tốt. Phù hợp cho các dịp dạo phố",
                            Name = "Zara Áo Len Trẻ Trung",
                            OldPrice = 4010737.3215647084024703344013m,
                            Price = 2870464.897388885450000m,
                            Quantity = 432,
                            Specification = "Kích thước: XL, M, L. Màu sắc: Xanh Navy, Xám"
                        },
                        new
                        {
                            Id = 8,
                            BrandId = 10,
                            BuyTurn = 199,
                            CategoryId = 5,
                            CreatedAt = new DateTime(2024, 12, 18, 6, 15, 7, 545, DateTimeKind.Utc).AddTicks(9997),
                            Description = "Sản phẩm được làm từ Vải Châu Âu. Kiểu dáng thanh lịch. Phù hợp cho các dịp tiệc tùng",
                            Name = "Uniqlo Áo Polo Cổ Điển",
                            OldPrice = 2992696.7649861321887641882635m,
                            Price = 2156402.528218709600000m,
                            Quantity = 446,
                            Specification = "Kích thước: XL, L, XXL. Màu sắc: Trắng, Đỏ"
                        },
                        new
                        {
                            Id = 9,
                            BrandId = 2,
                            BuyTurn = 27,
                            CategoryId = 3,
                            CreatedAt = new DateTime(2024, 12, 18, 6, 15, 7, 546, DateTimeKind.Utc).AddTicks(63),
                            Description = "Sản phẩm được làm từ Chất liệu Nhật Bản. Thoáng mát. Phù hợp cho các dịp dạo phố",
                            Name = "Uniqlo Áo Len Trẻ Trung",
                            OldPrice = 1092101.2306532788650299176707m,
                            Price = 803702.299636655600000m,
                            Quantity = 268,
                            Specification = "Kích thước: L, XS, XL. Màu sắc: Xám, Trắng"
                        },
                        new
                        {
                            Id = 10,
                            BrandId = 4,
                            BuyTurn = 44,
                            CategoryId = 2,
                            CreatedAt = new DateTime(2024, 12, 18, 6, 15, 7, 546, DateTimeKind.Utc).AddTicks(96),
                            Description = "Sản phẩm được làm từ Vải Linen. Thiết kế hiện đại. Phù hợp cho các dịp tiệc tùng",
                            Name = "H&M Váy Liền Năng Động",
                            OldPrice = 4943751.4424434200129421515757m,
                            Price = 3685982.617037586200000m,
                            Quantity = 440,
                            Specification = "Kích thước: XS, S, L. Màu sắc: Hồng, Đen"
                        },
                        new
                        {
                            Id = 11,
                            BrandId = 6,
                            BuyTurn = 172,
                            CategoryId = 2,
                            CreatedAt = new DateTime(2024, 12, 18, 6, 15, 7, 546, DateTimeKind.Utc).AddTicks(127),
                            Description = "Sản phẩm được làm từ Sợi Bamboo. Phù hợp nhiều dáng người. Phù hợp cho các dịp dạo phố",
                            Name = "Uniqlo Quần Jean Trẻ Trung",
                            OldPrice = 1068659.9139299684853544767365m,
                            Price = 761472.817347206750000m,
                            Quantity = 307,
                            Specification = "Kích thước: M, XL, XS. Màu sắc: Đỏ, Hồng"
                        },
                        new
                        {
                            Id = 12,
                            BrandId = 5,
                            BuyTurn = 1,
                            CategoryId = 3,
                            CreatedAt = new DateTime(2024, 12, 18, 6, 15, 7, 546, DateTimeKind.Utc).AddTicks(159),
                            Description = "Sản phẩm được làm từ Vải Organic. Thiết kế hiện đại. Phù hợp cho các dịp văn phòng",
                            Name = "Gucci Áo Len Thoải Mái",
                            OldPrice = 3255904.7772465319872063862027m,
                            Price = 2301459.272405256650000m,
                            Quantity = 79,
                            Specification = "Kích thước: XL, S, M. Màu sắc: Xám, Đen"
                        },
                        new
                        {
                            Id = 13,
                            BrandId = 10,
                            BuyTurn = 166,
                            CategoryId = 5,
                            CreatedAt = new DateTime(2024, 12, 18, 6, 15, 7, 546, DateTimeKind.Utc).AddTicks(214),
                            Description = "Sản phẩm được làm từ Sợi Bamboo. Thiết kế hiện đại. Phù hợp cho các dịp thể thao",
                            Name = "Nike Quần Short Thời Thượng",
                            OldPrice = 997277.4361703295185702165949m,
                            Price = 768994.28662181450000m,
                            Quantity = 385,
                            Specification = "Kích thước: XS, L, M. Màu sắc: Xám, Đen"
                        },
                        new
                        {
                            Id = 14,
                            BrandId = 6,
                            BuyTurn = 68,
                            CategoryId = 5,
                            CreatedAt = new DateTime(2024, 12, 18, 6, 15, 7, 546, DateTimeKind.Utc).AddTicks(245),
                            Description = "Sản phẩm được làm từ Vải Linen. Thoáng mát. Phù hợp cho các dịp văn phòng",
                            Name = "Uniqlo Đầm Dạ Hội Trẻ Trung",
                            OldPrice = 372747.41027568518212171390925m,
                            Price = 316992.4519645778450000m,
                            Quantity = 429,
                            Specification = "Kích thước: S, XL, XXL. Màu sắc: Đỏ, Xanh Navy"
                        },
                        new
                        {
                            Id = 15,
                            BrandId = 4,
                            BuyTurn = 59,
                            CategoryId = 1,
                            CreatedAt = new DateTime(2024, 12, 18, 6, 15, 7, 546, DateTimeKind.Utc).AddTicks(275),
                            Description = "Sản phẩm được làm từ Sợi Bamboo. Thoáng mát. Phù hợp cho các dịp thể thao",
                            Name = "Gucci Quần Jogger Hiện Đại",
                            OldPrice = 7074228.3290921235583361128774m,
                            Price = 4877517.25075403300000m,
                            Quantity = 56,
                            Specification = "Kích thước: L, M, XXL. Màu sắc: Đen, Xám"
                        },
                        new
                        {
                            Id = 16,
                            BrandId = 10,
                            BuyTurn = 36,
                            CategoryId = 4,
                            CreatedAt = new DateTime(2024, 12, 18, 6, 15, 7, 546, DateTimeKind.Utc).AddTicks(330),
                            Description = "Sản phẩm được làm từ Vải Organic. Phù hợp nhiều dáng người. Phù hợp cho các dịp thể thao",
                            Name = "Adidas Blazer Trẻ Trung",
                            OldPrice = 784532.68372604097330970454073m,
                            Price = 586730.972947517150000m,
                            Quantity = 165,
                            Specification = "Kích thước: S, XS, L. Màu sắc: Đỏ, Hồng"
                        },
                        new
                        {
                            Id = 17,
                            BrandId = 3,
                            BuyTurn = 189,
                            CategoryId = 3,
                            CreatedAt = new DateTime(2024, 12, 18, 6, 15, 7, 546, DateTimeKind.Utc).AddTicks(363),
                            Description = "Sản phẩm được làm từ Cotton cao cấp. Thiết kế hiện đại. Phù hợp cho các dịp dạo phố",
                            Name = "Louis Vuitton Quần Jean Cổ Điển",
                            OldPrice = 1198904.0924325564956349760679m,
                            Price = 1084946.242769626550000m,
                            Quantity = 449,
                            Specification = "Kích thước: L, M, XS. Màu sắc: Trắng, Đen"
                        },
                        new
                        {
                            Id = 18,
                            BrandId = 10,
                            BuyTurn = 66,
                            CategoryId = 3,
                            CreatedAt = new DateTime(2024, 12, 18, 6, 15, 7, 546, DateTimeKind.Utc).AddTicks(392),
                            Description = "Sản phẩm được làm từ Vải Linen. Kiểu dáng thanh lịch. Phù hợp cho các dịp văn phòng",
                            Name = "Zara Áo Khoác Cổ Điển",
                            OldPrice = 6304326.3959406708964663122849m,
                            Price = 4266290.145198302600000m,
                            Quantity = 329,
                            Specification = "Kích thước: M, XXL, L. Màu sắc: Trắng, Đỏ"
                        },
                        new
                        {
                            Id = 19,
                            BrandId = 9,
                            BuyTurn = 25,
                            CategoryId = 1,
                            CreatedAt = new DateTime(2024, 12, 18, 6, 15, 7, 546, DateTimeKind.Utc).AddTicks(423),
                            Description = "Sản phẩm được làm từ Chất liệu Nhật Bản. Thoáng mát. Phù hợp cho các dịp dạo phố",
                            Name = "Chanel Quần Jogger Cổ Điển",
                            OldPrice = 4598506.2255113322019640095810m,
                            Price = 3330611.519677071800000m,
                            Quantity = 370,
                            Specification = "Kích thước: XL, XS, L. Màu sắc: Đỏ, Xám"
                        },
                        new
                        {
                            Id = 20,
                            BrandId = 4,
                            BuyTurn = 152,
                            CategoryId = 1,
                            CreatedAt = new DateTime(2024, 12, 18, 6, 15, 7, 546, DateTimeKind.Utc).AddTicks(480),
                            Description = "Sản phẩm được làm từ Vải Châu Âu. Kiểu dáng thanh lịch. Phù hợp cho các dịp văn phòng",
                            Name = "Louis Vuitton Áo Khoác Trẻ Trung",
                            OldPrice = 978464.3605380117292226398625m,
                            Price = 883845.047708187350000m,
                            Quantity = 42,
                            Specification = "Kích thước: S, XXL, M. Màu sắc: Xám, Đỏ"
                        },
                        new
                        {
                            Id = 21,
                            BrandId = 10,
                            BuyTurn = 162,
                            CategoryId = 5,
                            CreatedAt = new DateTime(2024, 12, 18, 6, 15, 7, 546, DateTimeKind.Utc).AddTicks(510),
                            Description = "Sản phẩm được làm từ Vải Organic. Kiểu dáng thanh lịch. Phù hợp cho các dịp văn phòng",
                            Name = "H&M Quần Jean Thời Thượng",
                            OldPrice = 1069327.4298663932400751630284m,
                            Price = 795166.643102134550000m,
                            Quantity = 246,
                            Specification = "Kích thước: XL, M, XXL. Màu sắc: Xám, Trắng"
                        },
                        new
                        {
                            Id = 22,
                            BrandId = 8,
                            BuyTurn = 33,
                            CategoryId = 1,
                            CreatedAt = new DateTime(2024, 12, 18, 6, 15, 7, 546, DateTimeKind.Utc).AddTicks(541),
                            Description = "Sản phẩm được làm từ Cotton cao cấp. Co giãn tốt. Phù hợp cho các dịp thể thao",
                            Name = "H&M Áo Thun Cổ Điển",
                            OldPrice = 917615.7204802892507552228166m,
                            Price = 720129.311055243050000m,
                            Quantity = 446,
                            Specification = "Kích thước: L, M, XL. Màu sắc: Xanh Navy, Xám"
                        },
                        new
                        {
                            Id = 23,
                            BrandId = 4,
                            BuyTurn = 0,
                            CategoryId = 1,
                            CreatedAt = new DateTime(2024, 12, 18, 6, 15, 7, 546, DateTimeKind.Utc).AddTicks(572),
                            Description = "Sản phẩm được làm từ Cotton cao cấp. Kiểu dáng thanh lịch. Phù hợp cho các dịp văn phòng",
                            Name = "Louis Vuitton Áo Thun Thời Thượng",
                            OldPrice = 301086.67025311246868883627760m,
                            Price = 254970.5112473631800000m,
                            Quantity = 373,
                            Specification = "Kích thước: L, M, S. Màu sắc: Hồng, Đỏ"
                        },
                        new
                        {
                            Id = 24,
                            BrandId = 8,
                            BuyTurn = 80,
                            CategoryId = 3,
                            CreatedAt = new DateTime(2024, 12, 18, 6, 15, 7, 546, DateTimeKind.Utc).AddTicks(619),
                            Description = "Sản phẩm được làm từ Cotton cao cấp. Kiểu dáng thanh lịch. Phù hợp cho các dịp tiệc tùng",
                            Name = "Gucci Váy Liền Năng Động",
                            OldPrice = 2956600.4271001891905546899541m,
                            Price = 2040984.682768751450000m,
                            Quantity = 191,
                            Specification = "Kích thước: L, XS, M. Màu sắc: Đỏ, Hồng"
                        },
                        new
                        {
                            Id = 25,
                            BrandId = 8,
                            BuyTurn = 129,
                            CategoryId = 2,
                            CreatedAt = new DateTime(2024, 12, 18, 6, 15, 7, 546, DateTimeKind.Utc).AddTicks(652),
                            Description = "Sản phẩm được làm từ Vải Organic. Co giãn tốt. Phù hợp cho các dịp văn phòng",
                            Name = "Adidas Áo Thun Thoải Mái",
                            OldPrice = 4928961.6545509136668521144708m,
                            Price = 3316849.179361780100000m,
                            Quantity = 406,
                            Specification = "Kích thước: XXL, XS, S. Màu sắc: Hồng, Đỏ"
                        },
                        new
                        {
                            Id = 26,
                            BrandId = 8,
                            BuyTurn = 55,
                            CategoryId = 2,
                            CreatedAt = new DateTime(2024, 12, 18, 6, 15, 7, 546, DateTimeKind.Utc).AddTicks(684),
                            Description = "Sản phẩm được làm từ Vải Linen. Co giãn tốt. Phù hợp cho các dịp dạo phố",
                            Name = "Uniqlo Áo Thun Sang Trọng",
                            OldPrice = 4600142.7111277739118364815854m,
                            Price = 3724410.820225333100000m,
                            Quantity = 198,
                            Specification = "Kích thước: S, XL, XXL. Màu sắc: Đen, Đỏ"
                        },
                        new
                        {
                            Id = 27,
                            BrandId = 4,
                            BuyTurn = 152,
                            CategoryId = 2,
                            CreatedAt = new DateTime(2024, 12, 18, 6, 15, 7, 546, DateTimeKind.Utc).AddTicks(763),
                            Description = "Sản phẩm được làm từ Vải Châu Âu. Thoáng mát. Phù hợp cho các dịp dạo phố",
                            Name = "H&M Blazer Sang Trọng",
                            OldPrice = 1878532.1653974841833733699272m,
                            Price = 1442721.632135711900000m,
                            Quantity = 315,
                            Specification = "Kích thước: XL, XXL, L. Màu sắc: Xanh Navy, Đỏ"
                        },
                        new
                        {
                            Id = 28,
                            BrandId = 1,
                            BuyTurn = 18,
                            CategoryId = 2,
                            CreatedAt = new DateTime(2024, 12, 18, 6, 15, 7, 546, DateTimeKind.Utc).AddTicks(796),
                            Description = "Sản phẩm được làm từ Sợi Bamboo. Thoáng mát. Phù hợp cho các dịp dạo phố",
                            Name = "Zara Đầm Dạ Hội Cổ Điển",
                            OldPrice = 2431177.1567275791331879541160m,
                            Price = 1918475.927493043550000m,
                            Quantity = 162,
                            Specification = "Kích thước: S, M, L. Màu sắc: Trắng, Xanh Navy"
                        },
                        new
                        {
                            Id = 29,
                            BrandId = 7,
                            BuyTurn = 130,
                            CategoryId = 3,
                            CreatedAt = new DateTime(2024, 12, 18, 6, 15, 7, 546, DateTimeKind.Utc).AddTicks(827),
                            Description = "Sản phẩm được làm từ Chất liệu Nhật Bản. Thoáng mát. Phù hợp cho các dịp thể thao",
                            Name = "Louis Vuitton Quần Short Sang Trọng",
                            OldPrice = 1617023.3271486585529413629040m,
                            Price = 1273249.753574466200000m,
                            Quantity = 183,
                            Specification = "Kích thước: L, XL, XS. Màu sắc: Hồng, Xanh Navy"
                        },
                        new
                        {
                            Id = 30,
                            BrandId = 4,
                            BuyTurn = 59,
                            CategoryId = 2,
                            CreatedAt = new DateTime(2024, 12, 18, 6, 15, 7, 546, DateTimeKind.Utc).AddTicks(857),
                            Description = "Sản phẩm được làm từ Sợi Bamboo. Thiết kế hiện đại. Phù hợp cho các dịp dạo phố",
                            Name = "Chanel Áo Khoác Hiện Đại",
                            OldPrice = 3301565.7043471868468300742194m,
                            Price = 2861971.198974434750000m,
                            Quantity = 358,
                            Specification = "Kích thước: L, XS, XL. Màu sắc: Xám, Hồng"
                        },
                        new
                        {
                            Id = 31,
                            BrandId = 9,
                            BuyTurn = 45,
                            CategoryId = 2,
                            CreatedAt = new DateTime(2024, 12, 18, 6, 15, 7, 546, DateTimeKind.Utc).AddTicks(922),
                            Description = "Sản phẩm được làm từ Vải Linen. Kiểu dáng thanh lịch. Phù hợp cho các dịp văn phòng",
                            Name = "Zara Áo Polo Trẻ Trung",
                            OldPrice = 6672472.8397202778963557720698m,
                            Price = 4452801.841732236800000m,
                            Quantity = 218,
                            Specification = "Kích thước: S, XL, M. Màu sắc: Xanh Navy, Xám"
                        },
                        new
                        {
                            Id = 32,
                            BrandId = 9,
                            BuyTurn = 99,
                            CategoryId = 1,
                            CreatedAt = new DateTime(2024, 12, 18, 6, 15, 7, 546, DateTimeKind.Utc).AddTicks(953),
                            Description = "Sản phẩm được làm từ Chất liệu Nhật Bản. Thiết kế hiện đại. Phù hợp cho các dịp thể thao",
                            Name = "Gucci Áo Thun Hiện Đại",
                            OldPrice = 905303.6765483437787032252735m,
                            Price = 634626.120112405250000m,
                            Quantity = 275,
                            Specification = "Kích thước: XL, S, M. Màu sắc: Xanh Navy, Đỏ"
                        },
                        new
                        {
                            Id = 33,
                            BrandId = 8,
                            BuyTurn = 137,
                            CategoryId = 2,
                            CreatedAt = new DateTime(2024, 12, 18, 6, 15, 7, 546, DateTimeKind.Utc).AddTicks(982),
                            Description = "Sản phẩm được làm từ Vải Châu Âu. Co giãn tốt. Phù hợp cho các dịp tiệc tùng",
                            Name = "H&M Váy Liền Hiện Đại",
                            OldPrice = 4556736.8710029830180338747728m,
                            Price = 3825063.444498872900000m,
                            Quantity = 289,
                            Specification = "Kích thước: XL, XS, XXL. Màu sắc: Hồng, Xám"
                        },
                        new
                        {
                            Id = 34,
                            BrandId = 3,
                            BuyTurn = 76,
                            CategoryId = 1,
                            CreatedAt = new DateTime(2024, 12, 18, 6, 15, 7, 546, DateTimeKind.Utc).AddTicks(1014),
                            Description = "Sản phẩm được làm từ Vải Linen. Kiểu dáng thanh lịch. Phù hợp cho các dịp thể thao",
                            Name = "Louis Vuitton Áo Polo Hiện Đại",
                            OldPrice = 744039.87058539231835067919603m,
                            Price = 628854.566486909900000m,
                            Quantity = 350,
                            Specification = "Kích thước: L, XL, XXL. Màu sắc: Hồng, Đỏ"
                        },
                        new
                        {
                            Id = 35,
                            BrandId = 8,
                            BuyTurn = 150,
                            CategoryId = 4,
                            CreatedAt = new DateTime(2024, 12, 18, 6, 15, 7, 546, DateTimeKind.Utc).AddTicks(1072),
                            Description = "Sản phẩm được làm từ Chất liệu Nhật Bản. Thoáng mát. Phù hợp cho các dịp dạo phố",
                            Name = "Zara Quần Jean Hiện Đại",
                            OldPrice = 4578648.6397906352465644063503m,
                            Price = 3342462.339061484600000m,
                            Quantity = 455,
                            Specification = "Kích thước: L, S, M. Màu sắc: Đen, Hồng"
                        },
                        new
                        {
                            Id = 36,
                            BrandId = 7,
                            BuyTurn = 95,
                            CategoryId = 5,
                            CreatedAt = new DateTime(2024, 12, 18, 6, 15, 7, 546, DateTimeKind.Utc).AddTicks(1101),
                            Description = "Sản phẩm được làm từ Vải Linen. Phù hợp nhiều dáng người. Phù hợp cho các dịp tiệc tùng",
                            Name = "Uniqlo Áo Khoác Sang Trọng",
                            OldPrice = 5158791.5866741921187183724295m,
                            Price = 3748376.301881741150000m,
                            Quantity = 326,
                            Specification = "Kích thước: L, S, M. Màu sắc: Xanh Navy, Hồng"
                        },
                        new
                        {
                            Id = 37,
                            BrandId = 10,
                            BuyTurn = 93,
                            CategoryId = 5,
                            CreatedAt = new DateTime(2024, 12, 18, 6, 15, 7, 546, DateTimeKind.Utc).AddTicks(1131),
                            Description = "Sản phẩm được làm từ Chất liệu Nhật Bản. Thoáng mát. Phù hợp cho các dịp thể thao",
                            Name = "H&M Blazer Cổ Điển",
                            OldPrice = 5038033.4572280875410234757769m,
                            Price = 3547653.012859077050000m,
                            Quantity = 225,
                            Specification = "Kích thước: XL, L, XS. Màu sắc: Đen, Trắng"
                        },
                        new
                        {
                            Id = 38,
                            BrandId = 7,
                            BuyTurn = 150,
                            CategoryId = 5,
                            CreatedAt = new DateTime(2024, 12, 18, 6, 15, 7, 546, DateTimeKind.Utc).AddTicks(1163),
                            Description = "Sản phẩm được làm từ Vải Organic. Thoáng mát. Phù hợp cho các dịp dạo phố",
                            Name = "Gucci Áo Thun Hiện Đại",
                            OldPrice = 362544.46264997751232987696294m,
                            Price = 312872.773399382300000m,
                            Quantity = 123,
                            Specification = "Kích thước: XXL, M, XL. Màu sắc: Đen, Đỏ"
                        },
                        new
                        {
                            Id = 39,
                            BrandId = 7,
                            BuyTurn = 40,
                            CategoryId = 4,
                            CreatedAt = new DateTime(2024, 12, 18, 6, 15, 7, 546, DateTimeKind.Utc).AddTicks(1217),
                            Description = "Sản phẩm được làm từ Chất liệu Nhật Bản. Thiết kế hiện đại. Phù hợp cho các dịp dạo phố",
                            Name = "Uniqlo Đầm Dạ Hội Năng Động",
                            OldPrice = 1196512.4429549296307098470621m,
                            Price = 1038506.211189429350000m,
                            Quantity = 323,
                            Specification = "Kích thước: L, S, M. Màu sắc: Đỏ, Xám"
                        },
                        new
                        {
                            Id = 40,
                            BrandId = 7,
                            BuyTurn = 153,
                            CategoryId = 2,
                            CreatedAt = new DateTime(2024, 12, 18, 6, 15, 7, 546, DateTimeKind.Utc).AddTicks(1247),
                            Description = "Sản phẩm được làm từ Vải Châu Âu. Kiểu dáng thanh lịch. Phù hợp cho các dịp tiệc tùng",
                            Name = "Chanel Đầm Dạ Hội Năng Động",
                            OldPrice = 5336527.3183058546613547607936m,
                            Price = 4828502.911545121550000m,
                            Quantity = 12,
                            Specification = "Kích thước: S, XXL, M. Màu sắc: Đen, Đỏ"
                        });
                });

            modelBuilder.Entity("ManboShopAPI.Domain.Entities.ProductImage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductImages");
                });

            modelBuilder.Entity("ManboShopAPI.Domain.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("LastName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("ProfilePictureUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RefreshToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("RefreshTokenExpiryTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AccessFailedCount = 0,
                            Address = "5364 Alanis Glen, West Lura, Czech Republic",
                            ConcurrencyStamp = "b6633ebe-cfd3-44f3-afa2-df7658b30f95",
                            CreatedAt = new DateTime(2024, 2, 5, 6, 15, 7, 571, DateTimeKind.Utc).AddTicks(6637),
                            Email = "Damian21@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "Damian",
                            LastName = "O'Hara",
                            LockoutEnabled = false,
                            NormalizedEmail = "DAMIAN21@GMAIL.COM",
                            NormalizedUserName = "DAMIAN_OHARA",
                            PasswordHash = "AQAAAAIAAYagAAAAEIGnI+i2xNkte/mFo1u65Wh9KvSxm3lIGJZxSQCQhh0ToxeegbKTazhUyDgh7g9lrQ==",
                            PhoneNumber = "154-020-9240",
                            PhoneNumberConfirmed = true,
                            ProfilePictureUrl = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/338.jpg",
                            TwoFactorEnabled = false,
                            UserName = "Damian_OHara"
                        },
                        new
                        {
                            Id = 2,
                            AccessFailedCount = 0,
                            Address = "22897 Yundt Forest, New Marisol, Uzbekistan",
                            ConcurrencyStamp = "69e77f05-8eee-4266-9fea-7a664afd2d35",
                            CreatedAt = new DateTime(2024, 10, 27, 6, 15, 7, 572, DateTimeKind.Utc).AddTicks(8210),
                            Email = "Yoshiko_Nitzsche@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "Yoshiko",
                            LastName = "Nitzsche",
                            LockoutEnabled = false,
                            NormalizedEmail = "YOSHIKO_NITZSCHE@GMAIL.COM",
                            NormalizedUserName = "YOSHIKO.NITZSCHE81",
                            PasswordHash = "AQAAAAIAAYagAAAAEFY/nVzfKFhveqxiu7vnhMM0ekh8IKmNc6gSH63RBuukdgb/Apky/ptt/JppuHzMQw==",
                            PhoneNumber = "187-409-4924",
                            PhoneNumberConfirmed = true,
                            ProfilePictureUrl = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/1003.jpg",
                            TwoFactorEnabled = false,
                            UserName = "Yoshiko.Nitzsche81"
                        },
                        new
                        {
                            Id = 3,
                            AccessFailedCount = 0,
                            Address = "514 Moore Turnpike, North Shanon, Hungary",
                            ConcurrencyStamp = "c2350f5e-d7d1-4248-a2e4-ac07792c6e94",
                            CreatedAt = new DateTime(2024, 10, 21, 6, 15, 7, 572, DateTimeKind.Utc).AddTicks(8551),
                            Email = "Shanna_Hills@hotmail.com",
                            EmailConfirmed = true,
                            FirstName = "Shanna",
                            LastName = "Hills",
                            LockoutEnabled = false,
                            NormalizedEmail = "SHANNA_HILLS@HOTMAIL.COM",
                            NormalizedUserName = "SHANNA4",
                            PasswordHash = "AQAAAAIAAYagAAAAEHKpC5gU3Jus/6yWAvGTzJ/pSrgXKUgT5w20R3uYi+Si3UNy9C1aUcq+H8qT0hL7aQ==",
                            PhoneNumber = "330-188-8053",
                            PhoneNumberConfirmed = true,
                            ProfilePictureUrl = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/549.jpg",
                            TwoFactorEnabled = false,
                            UserName = "Shanna4"
                        },
                        new
                        {
                            Id = 4,
                            AccessFailedCount = 0,
                            Address = "1966 Koss Club, Greenfelderton, Cuba",
                            ConcurrencyStamp = "a7fee4cc-8c8f-4e7b-9dde-650344a84522",
                            CreatedAt = new DateTime(2024, 10, 1, 6, 15, 7, 572, DateTimeKind.Utc).AddTicks(8801),
                            Email = "Edwin57@yahoo.com",
                            EmailConfirmed = true,
                            FirstName = "Edwin",
                            LastName = "Mitchell",
                            LockoutEnabled = false,
                            NormalizedEmail = "EDWIN57@YAHOO.COM",
                            NormalizedUserName = "EDWIN_MITCHELL2",
                            PasswordHash = "AQAAAAIAAYagAAAAEELqYHz1w67tnDVy4pjODgqYObhBjkOYlj9XwJxEGWWR3eNt+J2+aSd/vQAfDBKmbw==",
                            PhoneNumber = "783-828-6740",
                            PhoneNumberConfirmed = true,
                            ProfilePictureUrl = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/266.jpg",
                            TwoFactorEnabled = false,
                            UserName = "Edwin_Mitchell2"
                        },
                        new
                        {
                            Id = 5,
                            AccessFailedCount = 0,
                            Address = "768 Bednar Locks, Lake Lisetteland, Faroe Islands",
                            ConcurrencyStamp = "57ecf5a3-161d-41a7-ba3c-83edc8010092",
                            CreatedAt = new DateTime(2024, 1, 17, 6, 15, 7, 572, DateTimeKind.Utc).AddTicks(9022),
                            Email = "Mertie.Walter@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "Mertie",
                            LastName = "Walter",
                            LockoutEnabled = false,
                            NormalizedEmail = "MERTIE.WALTER@GMAIL.COM",
                            NormalizedUserName = "MERTIE.WALTER64",
                            PasswordHash = "AQAAAAIAAYagAAAAEOaaqaEIaEjzpA0fc/JxSIUpJ2vr0yqwVCYucskiYZYZS8ZrX5TgKQTuk76ZwchYlg==",
                            PhoneNumber = "371-862-4901",
                            PhoneNumberConfirmed = true,
                            ProfilePictureUrl = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/342.jpg",
                            TwoFactorEnabled = false,
                            UserName = "Mertie.Walter64"
                        },
                        new
                        {
                            Id = 6,
                            AccessFailedCount = 0,
                            Address = "0710 Beverly Coves, Josefaview, Iraq",
                            ConcurrencyStamp = "e2e97ec6-1563-45e5-8171-e5014c1bff6a",
                            CreatedAt = new DateTime(2024, 6, 8, 6, 15, 7, 572, DateTimeKind.Utc).AddTicks(9314),
                            Email = "Gino15@hotmail.com",
                            EmailConfirmed = true,
                            FirstName = "Gino",
                            LastName = "Parisian",
                            LockoutEnabled = false,
                            NormalizedEmail = "GINO15@HOTMAIL.COM",
                            NormalizedUserName = "GINO26",
                            PasswordHash = "AQAAAAIAAYagAAAAEOuOFlqcuzpR0XQ7MT9kaKEwHBDy+P7tUc9wYrjZv0H4kcg2lnWh6wdYwQkJKJ/wPg==",
                            PhoneNumber = "992-374-3549",
                            PhoneNumberConfirmed = true,
                            ProfilePictureUrl = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/225.jpg",
                            TwoFactorEnabled = false,
                            UserName = "Gino26"
                        },
                        new
                        {
                            Id = 7,
                            AccessFailedCount = 0,
                            Address = "88092 Reagan Row, East Camylleberg, Bermuda",
                            ConcurrencyStamp = "cd90dfe5-6480-42aa-9ffb-f2d820208fe7",
                            CreatedAt = new DateTime(2024, 8, 11, 6, 15, 7, 572, DateTimeKind.Utc).AddTicks(9518),
                            Email = "Rahul45@hotmail.com",
                            EmailConfirmed = true,
                            FirstName = "Rahul",
                            LastName = "Kiehn",
                            LockoutEnabled = false,
                            NormalizedEmail = "RAHUL45@HOTMAIL.COM",
                            NormalizedUserName = "RAHUL40",
                            PasswordHash = "AQAAAAIAAYagAAAAENJGBnfaZ7g54zCfVYQAyX3pWyqQWJhlcQumTL7XC8vtU/Dx30kYengMlrdRzFXx/g==",
                            PhoneNumber = "140-516-9405",
                            PhoneNumberConfirmed = true,
                            ProfilePictureUrl = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/824.jpg",
                            TwoFactorEnabled = false,
                            UserName = "Rahul40"
                        },
                        new
                        {
                            Id = 8,
                            AccessFailedCount = 0,
                            Address = "378 Gaston Knolls, Oberbrunnerbury, Cyprus",
                            ConcurrencyStamp = "b77b2613-2fb6-4660-b8d0-71825f3f39c2",
                            CreatedAt = new DateTime(2024, 3, 1, 6, 15, 7, 572, DateTimeKind.Utc).AddTicks(9736),
                            Email = "Soledad74@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "Soledad",
                            LastName = "Stanton",
                            LockoutEnabled = false,
                            NormalizedEmail = "SOLEDAD74@GMAIL.COM",
                            NormalizedUserName = "SOLEDAD.STANTON",
                            PasswordHash = "AQAAAAIAAYagAAAAEHQbR/HeZkTzmh4SGhLDBIdJ2I3yDGAUwPe6iVboUHh18L7ezQfzq9y96qLCcYFVnw==",
                            PhoneNumber = "663-986-5224",
                            PhoneNumberConfirmed = true,
                            ProfilePictureUrl = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/464.jpg",
                            TwoFactorEnabled = false,
                            UserName = "Soledad.Stanton"
                        },
                        new
                        {
                            Id = 9,
                            AccessFailedCount = 0,
                            Address = "0775 Nicole Mall, Lonzoport, Kazakhstan",
                            ConcurrencyStamp = "0a1f6f95-69fb-4ea8-8a9b-abfccb12a434",
                            CreatedAt = new DateTime(2024, 6, 26, 6, 15, 7, 572, DateTimeKind.Utc).AddTicks(9921),
                            Email = "Antonia_Wunsch@hotmail.com",
                            EmailConfirmed = true,
                            FirstName = "Antonia",
                            LastName = "Wunsch",
                            LockoutEnabled = false,
                            NormalizedEmail = "ANTONIA_WUNSCH@HOTMAIL.COM",
                            NormalizedUserName = "ANTONIA.WUNSCH",
                            PasswordHash = "AQAAAAIAAYagAAAAEIKaBNrBZZ7rsQo9rogdcDRzX0P91UlniOtXeu9KZSTfoA/AQ3SOf1qGLuh0K7FubQ==",
                            PhoneNumber = "605-357-5455",
                            PhoneNumberConfirmed = true,
                            ProfilePictureUrl = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/284.jpg",
                            TwoFactorEnabled = false,
                            UserName = "Antonia.Wunsch"
                        },
                        new
                        {
                            Id = 10,
                            AccessFailedCount = 0,
                            Address = "145 Zulauf Lodge, West Regan, Cambodia",
                            ConcurrencyStamp = "c2a80072-ee41-4e66-875a-18f70f0d3483",
                            CreatedAt = new DateTime(2024, 8, 17, 6, 15, 7, 573, DateTimeKind.Utc).AddTicks(158),
                            Email = "Rupert.Wilderman@yahoo.com",
                            EmailConfirmed = true,
                            FirstName = "Rupert",
                            LastName = "Wilderman",
                            LockoutEnabled = false,
                            NormalizedEmail = "RUPERT.WILDERMAN@YAHOO.COM",
                            NormalizedUserName = "RUPERT23",
                            PasswordHash = "AQAAAAIAAYagAAAAEG5A1LKzlI0ID4sJEcx7gqDmT+unMon5mfnbtZrdIJb0tK8MWgcw1C1iFPuW+6jMtw==",
                            PhoneNumber = "895-867-1149",
                            PhoneNumberConfirmed = true,
                            ProfilePictureUrl = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/303.jpg",
                            TwoFactorEnabled = false,
                            UserName = "Rupert23"
                        },
                        new
                        {
                            Id = 11,
                            AccessFailedCount = 0,
                            Address = "30759 Ernser Port, Port Estell, Saint Kitts and Nevis",
                            ConcurrencyStamp = "076c922b-c8a2-475a-a6b3-a356d89c3ad6",
                            CreatedAt = new DateTime(2024, 7, 19, 6, 15, 7, 573, DateTimeKind.Utc).AddTicks(363),
                            Email = "Arne_Dickinson84@hotmail.com",
                            EmailConfirmed = true,
                            FirstName = "Arne",
                            LastName = "Dickinson",
                            LockoutEnabled = false,
                            NormalizedEmail = "ARNE_DICKINSON84@HOTMAIL.COM",
                            NormalizedUserName = "ARNE_DICKINSON42",
                            PasswordHash = "AQAAAAIAAYagAAAAEIpQlw+3sO3FCWMakGJqHHUBb/hHN+LFfVPVd0JNcnSdN6nzP0xnCFG/AA5A6YtOFQ==",
                            PhoneNumber = "092-813-6698",
                            PhoneNumberConfirmed = true,
                            ProfilePictureUrl = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/13.jpg",
                            TwoFactorEnabled = false,
                            UserName = "Arne_Dickinson42"
                        },
                        new
                        {
                            Id = 12,
                            AccessFailedCount = 0,
                            Address = "9860 Madaline Causeway, Coralieberg, Saint Barthelemy",
                            ConcurrencyStamp = "4d5803df-81bc-44a0-9e7b-d9815e0035fa",
                            CreatedAt = new DateTime(2024, 7, 28, 6, 15, 7, 573, DateTimeKind.Utc).AddTicks(640),
                            Email = "Aylin_Jakubowski@hotmail.com",
                            EmailConfirmed = true,
                            FirstName = "Aylin",
                            LastName = "Jakubowski",
                            LockoutEnabled = false,
                            NormalizedEmail = "AYLIN_JAKUBOWSKI@HOTMAIL.COM",
                            NormalizedUserName = "AYLIN84",
                            PasswordHash = "AQAAAAIAAYagAAAAEJfMGhM7bYb29cY0vBjdqUl0vM+dZi2hRbYwjZkqOFWP/R7keBJy6zJtsYI3ks26vg==",
                            PhoneNumber = "064-606-4778",
                            PhoneNumberConfirmed = true,
                            ProfilePictureUrl = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/1013.jpg",
                            TwoFactorEnabled = false,
                            UserName = "Aylin84"
                        },
                        new
                        {
                            Id = 13,
                            AccessFailedCount = 0,
                            Address = "331 Sister Rapid, West Durwardshire, Italy",
                            ConcurrencyStamp = "afa1e77a-5a6a-47e3-bb0d-72ca28fa2e23",
                            CreatedAt = new DateTime(2024, 10, 11, 6, 15, 7, 573, DateTimeKind.Utc).AddTicks(844),
                            Email = "Hilario.Kirlin78@yahoo.com",
                            EmailConfirmed = true,
                            FirstName = "Hilario",
                            LastName = "Kirlin",
                            LockoutEnabled = false,
                            NormalizedEmail = "HILARIO.KIRLIN78@YAHOO.COM",
                            NormalizedUserName = "HILARIO.KIRLIN72",
                            PasswordHash = "AQAAAAIAAYagAAAAEJU0/1Lxxs7+3mUrVx0KfL4A5MIs5bGIz+z0xJPijxTTagL2lOHlHMe8Urxk64qGxQ==",
                            PhoneNumber = "306-006-2034",
                            PhoneNumberConfirmed = true,
                            ProfilePictureUrl = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/1185.jpg",
                            TwoFactorEnabled = false,
                            UserName = "Hilario.Kirlin72"
                        },
                        new
                        {
                            Id = 14,
                            AccessFailedCount = 0,
                            Address = "445 Murazik Radial, Binsview, Switzerland",
                            ConcurrencyStamp = "7cd35d2f-50a9-4f2a-857e-a90fdb50cd67",
                            CreatedAt = new DateTime(2024, 2, 14, 6, 15, 7, 573, DateTimeKind.Utc).AddTicks(1125),
                            Email = "Rosanna99@hotmail.com",
                            EmailConfirmed = true,
                            FirstName = "Rosanna",
                            LastName = "Schamberger",
                            LockoutEnabled = false,
                            NormalizedEmail = "ROSANNA99@HOTMAIL.COM",
                            NormalizedUserName = "ROSANNA_SCHAMBERGER",
                            PasswordHash = "AQAAAAIAAYagAAAAECAz6ngm+SWYc8Q9Wf5vD3qh+qSH2EZd09P/yo8SlUsO+yxnjqSQweTn5NF1Vly6bQ==",
                            PhoneNumber = "425-084-9698",
                            PhoneNumberConfirmed = true,
                            ProfilePictureUrl = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/1243.jpg",
                            TwoFactorEnabled = false,
                            UserName = "Rosanna_Schamberger"
                        },
                        new
                        {
                            Id = 15,
                            AccessFailedCount = 0,
                            Address = "523 Morar Way, South Elouisestad, Antarctica (the territory South of 60 deg S)",
                            ConcurrencyStamp = "1526396e-e509-42aa-b7d1-bc3965db7abd",
                            CreatedAt = new DateTime(2024, 1, 26, 6, 15, 7, 573, DateTimeKind.Utc).AddTicks(1335),
                            Email = "Filiberto21@hotmail.com",
                            EmailConfirmed = true,
                            FirstName = "Filiberto",
                            LastName = "Stark",
                            LockoutEnabled = false,
                            NormalizedEmail = "FILIBERTO21@HOTMAIL.COM",
                            NormalizedUserName = "FILIBERTO_STARK",
                            PasswordHash = "AQAAAAIAAYagAAAAEOTDyHoHAAgxMvXNAyhuafGwYv6fF9Ri/+E8NZL1UlQaTdlTQYh6jONsVx8qfBC54A==",
                            PhoneNumber = "094-922-5989",
                            PhoneNumberConfirmed = true,
                            ProfilePictureUrl = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/78.jpg",
                            TwoFactorEnabled = false,
                            UserName = "Filiberto_Stark"
                        },
                        new
                        {
                            Id = 16,
                            AccessFailedCount = 0,
                            Address = "20110 Anderson Trace, Strosinshire, Ukraine",
                            ConcurrencyStamp = "28e9b758-accf-4d54-a9f3-d91218c28ea8",
                            CreatedAt = new DateTime(2024, 3, 25, 6, 15, 7, 573, DateTimeKind.Utc).AddTicks(1565),
                            Email = "Adella.Hickle@hotmail.com",
                            EmailConfirmed = true,
                            FirstName = "Adella",
                            LastName = "Hickle",
                            LockoutEnabled = false,
                            NormalizedEmail = "ADELLA.HICKLE@HOTMAIL.COM",
                            NormalizedUserName = "ADELLA.HICKLE",
                            PasswordHash = "AQAAAAIAAYagAAAAEDE/BWivI6zmYisrm4wmBJLAdz5QaD+Aiz3zt2q9C5IZbse3xBsXddznpsR4nw/6SA==",
                            PhoneNumber = "306-347-7090",
                            PhoneNumberConfirmed = true,
                            ProfilePictureUrl = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/825.jpg",
                            TwoFactorEnabled = false,
                            UserName = "Adella.Hickle"
                        },
                        new
                        {
                            Id = 17,
                            AccessFailedCount = 0,
                            Address = "709 Bradley Islands, Kennyberg, Guam",
                            ConcurrencyStamp = "9a85aa65-10cd-42b8-95e1-4dd2d0350442",
                            CreatedAt = new DateTime(2024, 6, 12, 6, 15, 7, 573, DateTimeKind.Utc).AddTicks(1786),
                            Email = "Estefania_Konopelski@yahoo.com",
                            EmailConfirmed = true,
                            FirstName = "Estefania",
                            LastName = "Konopelski",
                            LockoutEnabled = false,
                            NormalizedEmail = "ESTEFANIA_KONOPELSKI@YAHOO.COM",
                            NormalizedUserName = "ESTEFANIA.KONOPELSKI14",
                            PasswordHash = "AQAAAAIAAYagAAAAEI/I+6oHJwvLUWgb0q49PHp+g99GV46YaiypHSGD0ba+fAV7MFY2aOUUpBdfmhpZYA==",
                            PhoneNumber = "959-811-2279",
                            PhoneNumberConfirmed = true,
                            ProfilePictureUrl = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/67.jpg",
                            TwoFactorEnabled = false,
                            UserName = "Estefania.Konopelski14"
                        },
                        new
                        {
                            Id = 18,
                            AccessFailedCount = 0,
                            Address = "318 Cortney Squares, Princeview, Angola",
                            ConcurrencyStamp = "201129ec-10f6-48c4-a1c1-d04d37edc480",
                            CreatedAt = new DateTime(2024, 4, 19, 6, 15, 7, 573, DateTimeKind.Utc).AddTicks(1985),
                            Email = "Green.Gerlach@yahoo.com",
                            EmailConfirmed = true,
                            FirstName = "Green",
                            LastName = "Gerlach",
                            LockoutEnabled = false,
                            NormalizedEmail = "GREEN.GERLACH@YAHOO.COM",
                            NormalizedUserName = "GREEN.GERLACH",
                            PasswordHash = "AQAAAAIAAYagAAAAECzgTjVkrNn1L3BRDUwXOJwiAp5VbD/9mJ1Q+A9N9Ezz6BIHB4/os4IjRe8c+RY++Q==",
                            PhoneNumber = "790-340-3384",
                            PhoneNumberConfirmed = true,
                            ProfilePictureUrl = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/1085.jpg",
                            TwoFactorEnabled = false,
                            UserName = "Green.Gerlach"
                        },
                        new
                        {
                            Id = 19,
                            AccessFailedCount = 0,
                            Address = "3450 O'Conner Plaza, Port Garretmouth, Barbados",
                            ConcurrencyStamp = "b6e5ef02-209a-42be-a61e-5170ce78ec97",
                            CreatedAt = new DateTime(2024, 3, 1, 6, 15, 7, 573, DateTimeKind.Utc).AddTicks(2211),
                            Email = "Gail_Muller32@hotmail.com",
                            EmailConfirmed = true,
                            FirstName = "Gail",
                            LastName = "Muller",
                            LockoutEnabled = false,
                            NormalizedEmail = "GAIL_MULLER32@HOTMAIL.COM",
                            NormalizedUserName = "GAIL_MULLER94",
                            PasswordHash = "AQAAAAIAAYagAAAAELTP7Labydu6v9h+xbxt8g/iqCw34ErTCk4NoJB41sX1bzjBGNKgE1aEX/ndkaYo1g==",
                            PhoneNumber = "512-648-6640",
                            PhoneNumberConfirmed = true,
                            ProfilePictureUrl = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/652.jpg",
                            TwoFactorEnabled = false,
                            UserName = "Gail_Muller94"
                        },
                        new
                        {
                            Id = 20,
                            AccessFailedCount = 0,
                            Address = "9328 Cruickshank Island, Lake Drewberg, Thailand",
                            ConcurrencyStamp = "9e161447-8511-4133-a52a-4ac7aa26727c",
                            CreatedAt = new DateTime(2024, 5, 7, 6, 15, 7, 573, DateTimeKind.Utc).AddTicks(2397),
                            Email = "Marlen71@yahoo.com",
                            EmailConfirmed = true,
                            FirstName = "Marlen",
                            LastName = "Klein",
                            LockoutEnabled = false,
                            NormalizedEmail = "MARLEN71@YAHOO.COM",
                            NormalizedUserName = "MARLEN_KLEIN",
                            PasswordHash = "AQAAAAIAAYagAAAAEKU7V8uIoZrrwC2k2hwPVhDNTed1/IgokBxMMUbixCylNp7k4NYpIrnmh1SzFGt0Vg==",
                            PhoneNumber = "532-572-0217",
                            PhoneNumberConfirmed = true,
                            ProfilePictureUrl = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/221.jpg",
                            TwoFactorEnabled = false,
                            UserName = "Marlen_Klein"
                        },
                        new
                        {
                            Id = 21,
                            AccessFailedCount = 0,
                            Address = "714 Schowalter Skyway, New Gregoriahaven, Norfolk Island",
                            ConcurrencyStamp = "02b1cd7f-829a-482c-bfd9-5ebc9be3b8b7",
                            CreatedAt = new DateTime(2023, 12, 19, 6, 15, 7, 573, DateTimeKind.Utc).AddTicks(2623),
                            Email = "Mazie.Cassin84@yahoo.com",
                            EmailConfirmed = true,
                            FirstName = "Mazie",
                            LastName = "Cassin",
                            LockoutEnabled = false,
                            NormalizedEmail = "MAZIE.CASSIN84@YAHOO.COM",
                            NormalizedUserName = "MAZIE1",
                            PasswordHash = "AQAAAAIAAYagAAAAEBAdhflbI2+OzL4zuHZNduP7RoHHWUfVvlyrZuHi0ZAFVkEHlyyyD1xE2tQ5TdjvNA==",
                            PhoneNumber = "966-550-9045",
                            PhoneNumberConfirmed = true,
                            ProfilePictureUrl = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/380.jpg",
                            TwoFactorEnabled = false,
                            UserName = "Mazie1"
                        },
                        new
                        {
                            Id = 22,
                            AccessFailedCount = 0,
                            Address = "704 Fadel Cove, East Brodyland, Togo",
                            ConcurrencyStamp = "7dbbab67-3dcc-44b1-9c28-df1fc9e8473f",
                            CreatedAt = new DateTime(2024, 3, 2, 6, 15, 7, 573, DateTimeKind.Utc).AddTicks(2855),
                            Email = "Kraig.Schroeder@yahoo.com",
                            EmailConfirmed = true,
                            FirstName = "Kraig",
                            LastName = "Schroeder",
                            LockoutEnabled = false,
                            NormalizedEmail = "KRAIG.SCHROEDER@YAHOO.COM",
                            NormalizedUserName = "KRAIG_SCHROEDER8",
                            PasswordHash = "AQAAAAIAAYagAAAAEKhV3y+Pa9lhkcLheMI/LiYDS9MBXAmh8zEswdjH1cm9ls68mnNkb3WpK5inb8VRrQ==",
                            PhoneNumber = "711-789-7564",
                            PhoneNumberConfirmed = true,
                            ProfilePictureUrl = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/674.jpg",
                            TwoFactorEnabled = false,
                            UserName = "Kraig_Schroeder8"
                        },
                        new
                        {
                            Id = 23,
                            AccessFailedCount = 0,
                            Address = "84906 Wisoky Mills, Steuberview, Puerto Rico",
                            ConcurrencyStamp = "2a57848c-175b-4757-a970-eb18af9c2cc1",
                            CreatedAt = new DateTime(2024, 9, 23, 6, 15, 7, 573, DateTimeKind.Utc).AddTicks(3092),
                            Email = "Genevieve.Corkery90@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "Genevieve",
                            LastName = "Corkery",
                            LockoutEnabled = false,
                            NormalizedEmail = "GENEVIEVE.CORKERY90@GMAIL.COM",
                            NormalizedUserName = "GENEVIEVE76",
                            PasswordHash = "AQAAAAIAAYagAAAAEIK+p/oUu+Tp8G/ghP9pBWfaR2nKzfNBBYOsvS9QV8bfZiPp6Jv+ztLKl80i94TxgQ==",
                            PhoneNumber = "490-851-6924",
                            PhoneNumberConfirmed = true,
                            ProfilePictureUrl = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/701.jpg",
                            TwoFactorEnabled = false,
                            UserName = "Genevieve76"
                        },
                        new
                        {
                            Id = 24,
                            AccessFailedCount = 0,
                            Address = "948 Lucio Radial, Nicolasside, Cote d'Ivoire",
                            ConcurrencyStamp = "f5c12c2f-8e05-4169-a2d6-8bac266db36c",
                            CreatedAt = new DateTime(2024, 4, 2, 6, 15, 7, 573, DateTimeKind.Utc).AddTicks(3274),
                            Email = "Dario_Bogan56@yahoo.com",
                            EmailConfirmed = true,
                            FirstName = "Dario",
                            LastName = "Bogan",
                            LockoutEnabled = false,
                            NormalizedEmail = "DARIO_BOGAN56@YAHOO.COM",
                            NormalizedUserName = "DARIO.BOGAN21",
                            PasswordHash = "AQAAAAIAAYagAAAAEG+2hWzh1vIDirrWtaMnvWbC2Eb/dWJIdIOUCkhz3O/lElthb4ZuFZczTfYHtT1yoQ==",
                            PhoneNumber = "116-607-5188",
                            PhoneNumberConfirmed = true,
                            ProfilePictureUrl = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/863.jpg",
                            TwoFactorEnabled = false,
                            UserName = "Dario.Bogan21"
                        },
                        new
                        {
                            Id = 25,
                            AccessFailedCount = 0,
                            Address = "1037 Keebler Ways, Ilatown, Suriname",
                            ConcurrencyStamp = "ec94f4db-6d9b-4047-b584-ba4a901acb6a",
                            CreatedAt = new DateTime(2024, 1, 30, 6, 15, 7, 573, DateTimeKind.Utc).AddTicks(3491),
                            Email = "Tyreek80@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "Tyreek",
                            LastName = "Goyette",
                            LockoutEnabled = false,
                            NormalizedEmail = "TYREEK80@GMAIL.COM",
                            NormalizedUserName = "TYREEK.GOYETTE",
                            PasswordHash = "AQAAAAIAAYagAAAAELS42/xO2Rl5XtRs2mnDadSDmpYBtHBOOpskTEfUIYpSACNIkho2CgUR0bX3VOHsGQ==",
                            PhoneNumber = "640-520-9047",
                            PhoneNumberConfirmed = true,
                            ProfilePictureUrl = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/663.jpg",
                            TwoFactorEnabled = false,
                            UserName = "Tyreek.Goyette"
                        },
                        new
                        {
                            Id = 26,
                            AccessFailedCount = 0,
                            Address = "9488 Witting Locks, Albinaport, Croatia",
                            ConcurrencyStamp = "c92170aa-f5d6-4b3b-b3dd-feebf7558cfc",
                            CreatedAt = new DateTime(2024, 11, 11, 6, 15, 7, 573, DateTimeKind.Utc).AddTicks(3715),
                            Email = "Israel16@yahoo.com",
                            EmailConfirmed = true,
                            FirstName = "Israel",
                            LastName = "Heidenreich",
                            LockoutEnabled = false,
                            NormalizedEmail = "ISRAEL16@YAHOO.COM",
                            NormalizedUserName = "ISRAEL15",
                            PasswordHash = "AQAAAAIAAYagAAAAEEY41Q6T4mKieHzqv6sZSN4PBMia1D837a2i16REGluVDtzVhSCTkyRndJKt7yJWbg==",
                            PhoneNumber = "074-538-4630",
                            PhoneNumberConfirmed = true,
                            ProfilePictureUrl = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/660.jpg",
                            TwoFactorEnabled = false,
                            UserName = "Israel15"
                        },
                        new
                        {
                            Id = 27,
                            AccessFailedCount = 0,
                            Address = "5764 Connelly Hill, Lake Franz, Cook Islands",
                            ConcurrencyStamp = "00585d23-2aee-4d3e-828d-12e5eb2aed67",
                            CreatedAt = new DateTime(2024, 4, 3, 6, 15, 7, 573, DateTimeKind.Utc).AddTicks(3979),
                            Email = "Orval61@yahoo.com",
                            EmailConfirmed = true,
                            FirstName = "Orval",
                            LastName = "Veum",
                            LockoutEnabled = false,
                            NormalizedEmail = "ORVAL61@YAHOO.COM",
                            NormalizedUserName = "ORVAL.VEUM",
                            PasswordHash = "AQAAAAIAAYagAAAAEAtvBp1GBbHmGVxS2WBiECXt4lbPwQtRoajn4rxa0dCZMldagplURfFY0bdNyaXTJA==",
                            PhoneNumber = "005-956-2685",
                            PhoneNumberConfirmed = true,
                            ProfilePictureUrl = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/252.jpg",
                            TwoFactorEnabled = false,
                            UserName = "Orval.Veum"
                        },
                        new
                        {
                            Id = 28,
                            AccessFailedCount = 0,
                            Address = "381 Klocko Forge, Lake Georgianatown, Ireland",
                            ConcurrencyStamp = "56dd58eb-5dae-4298-aeb7-41619a81ff85",
                            CreatedAt = new DateTime(2024, 5, 15, 6, 15, 7, 573, DateTimeKind.Utc).AddTicks(4174),
                            Email = "Victor48@yahoo.com",
                            EmailConfirmed = true,
                            FirstName = "Victor",
                            LastName = "Kautzer",
                            LockoutEnabled = false,
                            NormalizedEmail = "VICTOR48@YAHOO.COM",
                            NormalizedUserName = "VICTOR0",
                            PasswordHash = "AQAAAAIAAYagAAAAEBWkobUSAZkYnv5y5WbaDd7wUVsHLh4dz1D5PylielUZ6XZTLeQuKBowOh05ly3COg==",
                            PhoneNumber = "799-061-0916",
                            PhoneNumberConfirmed = true,
                            ProfilePictureUrl = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/58.jpg",
                            TwoFactorEnabled = false,
                            UserName = "Victor0"
                        },
                        new
                        {
                            Id = 29,
                            AccessFailedCount = 0,
                            Address = "29092 McGlynn Square, New Carmel, Saint Lucia",
                            ConcurrencyStamp = "52f9c988-9277-4dde-a32c-9e7ce9056aa0",
                            CreatedAt = new DateTime(2024, 3, 3, 6, 15, 7, 573, DateTimeKind.Utc).AddTicks(4445),
                            Email = "Hettie_Grant@hotmail.com",
                            EmailConfirmed = true,
                            FirstName = "Hettie",
                            LastName = "Grant",
                            LockoutEnabled = false,
                            NormalizedEmail = "HETTIE_GRANT@HOTMAIL.COM",
                            NormalizedUserName = "HETTIE.GRANT",
                            PasswordHash = "AQAAAAIAAYagAAAAEKvjtpkHlkI11zm61b6jWfl2KfOqFaILIgny0Pvs1UI85weI6ILU7YxVNHhah6y8PQ==",
                            PhoneNumber = "906-569-1874",
                            PhoneNumberConfirmed = true,
                            ProfilePictureUrl = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/1071.jpg",
                            TwoFactorEnabled = false,
                            UserName = "Hettie.Grant"
                        },
                        new
                        {
                            Id = 30,
                            AccessFailedCount = 0,
                            Address = "676 Reina Expressway, Natashachester, Yemen",
                            ConcurrencyStamp = "996bb792-f2dd-4e02-819b-90905ddac0e0",
                            CreatedAt = new DateTime(2024, 4, 28, 6, 15, 7, 573, DateTimeKind.Utc).AddTicks(4649),
                            Email = "Vern_Haley60@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "Vern",
                            LastName = "Haley",
                            LockoutEnabled = false,
                            NormalizedEmail = "VERN_HALEY60@GMAIL.COM",
                            NormalizedUserName = "VERN_HALEY",
                            PasswordHash = "AQAAAAIAAYagAAAAEDm6GPqlDnXoJXiv/6rMS4ABNuRBwss4vP3XDKbFlWtNVMrDxVoxguFBa/eWmSbVgg==",
                            PhoneNumber = "173-872-3396",
                            PhoneNumberConfirmed = true,
                            ProfilePictureUrl = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/312.jpg",
                            TwoFactorEnabled = false,
                            UserName = "Vern_Haley"
                        },
                        new
                        {
                            Id = 31,
                            AccessFailedCount = 0,
                            Address = "227 Goodwin Parkways, Lake Orlochester, Uzbekistan",
                            ConcurrencyStamp = "af0846d7-c4f3-493b-9b80-d1a6ab99d9ca",
                            CreatedAt = new DateTime(2024, 2, 29, 6, 15, 7, 573, DateTimeKind.Utc).AddTicks(4863),
                            Email = "Gideon26@hotmail.com",
                            EmailConfirmed = true,
                            FirstName = "Gideon",
                            LastName = "Smith",
                            LockoutEnabled = false,
                            NormalizedEmail = "GIDEON26@HOTMAIL.COM",
                            NormalizedUserName = "GIDEON90",
                            PasswordHash = "AQAAAAIAAYagAAAAEKVPhsrrj4Xd25hz98UlUgqKX5Soowr9tIVQEpmHtQTGW1d75HNu4Zg2FTsEa38oNg==",
                            PhoneNumber = "365-316-2658",
                            PhoneNumberConfirmed = true,
                            ProfilePictureUrl = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/1095.jpg",
                            TwoFactorEnabled = false,
                            UserName = "Gideon90"
                        },
                        new
                        {
                            Id = 32,
                            AccessFailedCount = 0,
                            Address = "15768 Geovanni Cliff, Lake Alva, Tanzania",
                            ConcurrencyStamp = "4aaddc43-9a58-45bc-b4c4-390054ca5e60",
                            CreatedAt = new DateTime(2024, 6, 14, 6, 15, 7, 573, DateTimeKind.Utc).AddTicks(5034),
                            Email = "Lupe_Renner86@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "Lupe",
                            LastName = "Renner",
                            LockoutEnabled = false,
                            NormalizedEmail = "LUPE_RENNER86@GMAIL.COM",
                            NormalizedUserName = "LUPE41",
                            PasswordHash = "AQAAAAIAAYagAAAAEKlQG6LytLVPXJqF9C2fp5oYaBWB4/Hqd4EIYHzgcBx3LhJfWbA/7WTwB4slPV3xpQ==",
                            PhoneNumber = "107-184-9368",
                            PhoneNumberConfirmed = true,
                            ProfilePictureUrl = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/645.jpg",
                            TwoFactorEnabled = false,
                            UserName = "Lupe41"
                        },
                        new
                        {
                            Id = 33,
                            AccessFailedCount = 0,
                            Address = "3515 Reichel Walks, West Haylie, Samoa",
                            ConcurrencyStamp = "07d913ca-f374-479c-9693-e906470ae8f3",
                            CreatedAt = new DateTime(2024, 2, 8, 6, 15, 7, 573, DateTimeKind.Utc).AddTicks(5295),
                            Email = "Zechariah31@hotmail.com",
                            EmailConfirmed = true,
                            FirstName = "Zechariah",
                            LastName = "Breitenberg",
                            LockoutEnabled = false,
                            NormalizedEmail = "ZECHARIAH31@HOTMAIL.COM",
                            NormalizedUserName = "ZECHARIAH60",
                            PasswordHash = "AQAAAAIAAYagAAAAEGAnpZIzUJtdO2upk3ZeiT98jSK9AVaHVYVehcr+ZneCQ3G3hvvcNSAMyiecREO8iQ==",
                            PhoneNumber = "171-733-7515",
                            PhoneNumberConfirmed = true,
                            ProfilePictureUrl = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/1102.jpg",
                            TwoFactorEnabled = false,
                            UserName = "Zechariah60"
                        },
                        new
                        {
                            Id = 34,
                            AccessFailedCount = 0,
                            Address = "98742 Bergnaum Fork, Langworthshire, Christmas Island",
                            ConcurrencyStamp = "08409b5c-2f2d-4e39-9952-8da6e81a0a41",
                            CreatedAt = new DateTime(2024, 7, 10, 6, 15, 7, 573, DateTimeKind.Utc).AddTicks(5474),
                            Email = "Clara_Jacobs@yahoo.com",
                            EmailConfirmed = true,
                            FirstName = "Clara",
                            LastName = "Jacobs",
                            LockoutEnabled = false,
                            NormalizedEmail = "CLARA_JACOBS@YAHOO.COM",
                            NormalizedUserName = "CLARA62",
                            PasswordHash = "AQAAAAIAAYagAAAAEFH8oNJVSsienCXmLOtv4GW5/p6jIPiq82rZv0QPs0cDFSZAwm0xyA8TnpV+r3dSRA==",
                            PhoneNumber = "987-083-2156",
                            PhoneNumberConfirmed = true,
                            ProfilePictureUrl = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/535.jpg",
                            TwoFactorEnabled = false,
                            UserName = "Clara62"
                        },
                        new
                        {
                            Id = 35,
                            AccessFailedCount = 0,
                            Address = "139 Greenholt Mountain, Port Laceyhaven, Ghana",
                            ConcurrencyStamp = "e703ec1e-eb6f-46ea-82b0-44104c7e0df4",
                            CreatedAt = new DateTime(2024, 4, 12, 6, 15, 7, 573, DateTimeKind.Utc).AddTicks(5689),
                            Email = "Kirsten.Raynor56@hotmail.com",
                            EmailConfirmed = true,
                            FirstName = "Kirsten",
                            LastName = "Raynor",
                            LockoutEnabled = false,
                            NormalizedEmail = "KIRSTEN.RAYNOR56@HOTMAIL.COM",
                            NormalizedUserName = "KIRSTEN_RAYNOR",
                            PasswordHash = "AQAAAAIAAYagAAAAEADdTds3Hzv9Wc0ojOx4vxcnO0XqPIY5xwPw0zRihotom4WiFEQuTerl/VhMbj5Mrg==",
                            PhoneNumber = "082-848-3343",
                            PhoneNumberConfirmed = true,
                            ProfilePictureUrl = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/1167.jpg",
                            TwoFactorEnabled = false,
                            UserName = "Kirsten_Raynor"
                        },
                        new
                        {
                            Id = 36,
                            AccessFailedCount = 0,
                            Address = "5762 Aylin Ranch, Conorton, Tonga",
                            ConcurrencyStamp = "da0c6782-63ec-4ad5-9a92-c5fbc5af3239",
                            CreatedAt = new DateTime(2024, 3, 28, 6, 15, 7, 573, DateTimeKind.Utc).AddTicks(5865),
                            Email = "Palma_Dickens@hotmail.com",
                            EmailConfirmed = true,
                            FirstName = "Palma",
                            LastName = "Dickens",
                            LockoutEnabled = false,
                            NormalizedEmail = "PALMA_DICKENS@HOTMAIL.COM",
                            NormalizedUserName = "PALMA_DICKENS",
                            PasswordHash = "AQAAAAIAAYagAAAAEAYaosBLsnN9fT2B4adQk6iMK5LD244h313lKCD76XNyLqs9O0DDMZE3vrstWm3wzQ==",
                            PhoneNumber = "810-876-1064",
                            PhoneNumberConfirmed = true,
                            ProfilePictureUrl = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/764.jpg",
                            TwoFactorEnabled = false,
                            UserName = "Palma_Dickens"
                        },
                        new
                        {
                            Id = 37,
                            AccessFailedCount = 0,
                            Address = "8888 Herman Parkway, Runolfsdottirtown, Libyan Arab Jamahiriya",
                            ConcurrencyStamp = "92ed5a40-7741-4cfc-b9ac-455b4b03856a",
                            CreatedAt = new DateTime(2024, 2, 15, 6, 15, 7, 573, DateTimeKind.Utc).AddTicks(6062),
                            Email = "William25@hotmail.com",
                            EmailConfirmed = true,
                            FirstName = "William",
                            LastName = "Will",
                            LockoutEnabled = false,
                            NormalizedEmail = "WILLIAM25@HOTMAIL.COM",
                            NormalizedUserName = "WILLIAM_WILL3",
                            PasswordHash = "AQAAAAIAAYagAAAAELsWaK8qAo5oBFbU/qwLVqu+Jmljuze1n781FnfhjBItG/LIfcl27MWsij+qa4NdOQ==",
                            PhoneNumber = "464-340-0276",
                            PhoneNumberConfirmed = true,
                            ProfilePictureUrl = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/30.jpg",
                            TwoFactorEnabled = false,
                            UserName = "William_Will3"
                        },
                        new
                        {
                            Id = 38,
                            AccessFailedCount = 0,
                            Address = "191 Eliseo Rest, Dayanamouth, Saint Barthelemy",
                            ConcurrencyStamp = "52f94adb-a821-4301-922b-1fc833ae37c8",
                            CreatedAt = new DateTime(2024, 1, 1, 6, 15, 7, 573, DateTimeKind.Utc).AddTicks(6253),
                            Email = "Ansel_Keebler@yahoo.com",
                            EmailConfirmed = true,
                            FirstName = "Ansel",
                            LastName = "Keebler",
                            LockoutEnabled = false,
                            NormalizedEmail = "ANSEL_KEEBLER@YAHOO.COM",
                            NormalizedUserName = "ANSEL.KEEBLER",
                            PasswordHash = "AQAAAAIAAYagAAAAEBOr2aFWH1Ldo47WGWrV61DnFn0VsNyfiylLt1d+8glY6Gh35Hfy6nd4xZ89mQLfNw==",
                            PhoneNumber = "479-190-0446",
                            PhoneNumberConfirmed = true,
                            ProfilePictureUrl = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/994.jpg",
                            TwoFactorEnabled = false,
                            UserName = "Ansel.Keebler"
                        },
                        new
                        {
                            Id = 39,
                            AccessFailedCount = 0,
                            Address = "0621 Anjali Fort, Lake Nedfort, Micronesia",
                            ConcurrencyStamp = "a6abb3a6-22ca-4e47-8392-4acee2638c2a",
                            CreatedAt = new DateTime(2024, 3, 8, 6, 15, 7, 573, DateTimeKind.Utc).AddTicks(6494),
                            Email = "May_Johnston4@yahoo.com",
                            EmailConfirmed = true,
                            FirstName = "May",
                            LastName = "Johnston",
                            LockoutEnabled = false,
                            NormalizedEmail = "MAY_JOHNSTON4@YAHOO.COM",
                            NormalizedUserName = "MAY.JOHNSTON",
                            PasswordHash = "AQAAAAIAAYagAAAAEEbZXzyApjbqzk3fF/al3tGGrXiZXhC2+bzttXMJZcstXm8Zi5zVsVqQYE9bI4sWhg==",
                            PhoneNumber = "136-330-3236",
                            PhoneNumberConfirmed = true,
                            ProfilePictureUrl = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/768.jpg",
                            TwoFactorEnabled = false,
                            UserName = "May.Johnston"
                        },
                        new
                        {
                            Id = 40,
                            AccessFailedCount = 0,
                            Address = "235 Barbara Vista, Shaniaborough, Isle of Man",
                            ConcurrencyStamp = "16fd147d-e53d-4f17-8444-66bb486ffbf6",
                            CreatedAt = new DateTime(2024, 10, 13, 6, 15, 7, 573, DateTimeKind.Utc).AddTicks(6673),
                            Email = "Jed_Quitzon@hotmail.com",
                            EmailConfirmed = true,
                            FirstName = "Jed",
                            LastName = "Quitzon",
                            LockoutEnabled = false,
                            NormalizedEmail = "JED_QUITZON@HOTMAIL.COM",
                            NormalizedUserName = "JED_QUITZON2",
                            PasswordHash = "AQAAAAIAAYagAAAAEOlKK+c0IVJkPr1CdytofPWaZbX63uJHvKproKEECsyGC2BPwYlyYaa4yIgjgtmP3g==",
                            PhoneNumber = "419-166-6825",
                            PhoneNumberConfirmed = true,
                            ProfilePictureUrl = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/152.jpg",
                            TwoFactorEnabled = false,
                            UserName = "Jed_Quitzon2"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("IdentityRole");

                    b.HasData(
                        new
                        {
                            Id = "1",
                            Name = "Admin",
                            NormalizedName = "ADMIN"
                        },
                        new
                        {
                            Id = "2",
                            Name = "Customer",
                            NormalizedName = "CUSTOMER"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("ManboShopAPI.Domain.Entities.Address", b =>
                {
                    b.HasOne("ManboShopAPI.Domain.Entities.User", "User")
                        .WithMany("Addresses")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("ManboShopAPI.Domain.Entities.BannerDetail", b =>
                {
                    b.HasOne("ManboShopAPI.Domain.Entities.Banner", "Banner")
                        .WithMany("BannerDetails")
                        .HasForeignKey("BannerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ManboShopAPI.Domain.Entities.Product", "Product")
                        .WithMany("BannerDetails")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Banner");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("ManboShopAPI.Domain.Entities.CouponCondition", b =>
                {
                    b.HasOne("ManboShopAPI.Domain.Entities.Coupon", "Coupon")
                        .WithMany("CouponConditions")
                        .HasForeignKey("CouponId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Coupon");
                });

            modelBuilder.Entity("ManboShopAPI.Domain.Entities.Favorite", b =>
                {
                    b.HasOne("ManboShopAPI.Domain.Entities.Product", "Product")
                        .WithMany("Favorites")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ManboShopAPI.Domain.Entities.User", "User")
                        .WithMany("Favorites")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ManboShopAPI.Domain.Entities.Feedback", b =>
                {
                    b.HasOne("ManboShopAPI.Domain.Entities.Product", "Product")
                        .WithMany("Feedbacks")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ManboShopAPI.Domain.Entities.User", "User")
                        .WithMany("Feedbacks")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ManboShopAPI.Domain.Entities.NewsDetail", b =>
                {
                    b.HasOne("ManboShopAPI.Domain.Entities.News", "News")
                        .WithMany("NewsDetails")
                        .HasForeignKey("NewsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ManboShopAPI.Domain.Entities.Product", "Product")
                        .WithMany("NewsDetails")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("News");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("ManboShopAPI.Domain.Entities.Order", b =>
                {
                    b.HasOne("ManboShopAPI.Domain.Entities.Coupon", "Coupon")
                        .WithMany("Orders")
                        .HasForeignKey("CouponId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("ManboShopAPI.Domain.Entities.User", "User")
                        .WithMany("Orders")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Coupon");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ManboShopAPI.Domain.Entities.OrderDetail", b =>
                {
                    b.HasOne("ManboShopAPI.Domain.Entities.Coupon", "Coupon")
                        .WithMany("OrderDetails")
                        .HasForeignKey("CouponId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("ManboShopAPI.Domain.Entities.Order", "Order")
                        .WithMany("OrderDetails")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ManboShopAPI.Domain.Entities.Product", "Product")
                        .WithMany("OrderDetails")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Coupon");

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("ManboShopAPI.Domain.Entities.Product", b =>
                {
                    b.HasOne("ManboShopAPI.Domain.Entities.Brand", "Brand")
                        .WithMany("Products")
                        .HasForeignKey("BrandId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("ManboShopAPI.Domain.Entities.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Brand");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("ManboShopAPI.Domain.Entities.ProductImage", b =>
                {
                    b.HasOne("ManboShopAPI.Domain.Entities.Product", "Product")
                        .WithMany("ProductImages")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole<int>", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.HasOne("ManboShopAPI.Domain.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.HasOne("ManboShopAPI.Domain.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<int>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole<int>", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ManboShopAPI.Domain.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.HasOne("ManboShopAPI.Domain.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ManboShopAPI.Domain.Entities.Banner", b =>
                {
                    b.Navigation("BannerDetails");
                });

            modelBuilder.Entity("ManboShopAPI.Domain.Entities.Brand", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("ManboShopAPI.Domain.Entities.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("ManboShopAPI.Domain.Entities.Coupon", b =>
                {
                    b.Navigation("CouponConditions");

                    b.Navigation("OrderDetails");

                    b.Navigation("Orders");
                });

            modelBuilder.Entity("ManboShopAPI.Domain.Entities.News", b =>
                {
                    b.Navigation("NewsDetails");
                });

            modelBuilder.Entity("ManboShopAPI.Domain.Entities.Order", b =>
                {
                    b.Navigation("OrderDetails");
                });

            modelBuilder.Entity("ManboShopAPI.Domain.Entities.Product", b =>
                {
                    b.Navigation("BannerDetails");

                    b.Navigation("Favorites");

                    b.Navigation("Feedbacks");

                    b.Navigation("NewsDetails");

                    b.Navigation("OrderDetails");

                    b.Navigation("ProductImages");
                });

            modelBuilder.Entity("ManboShopAPI.Domain.Entities.User", b =>
                {
                    b.Navigation("Addresses");

                    b.Navigation("Favorites");

                    b.Navigation("Feedbacks");

                    b.Navigation("Orders");
                });
#pragma warning restore 612, 618
        }
    }
}
