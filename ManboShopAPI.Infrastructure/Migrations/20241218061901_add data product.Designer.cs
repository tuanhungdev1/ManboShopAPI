// <auto-generated />
using System;
using ManboShopAPI.Infrastructure.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ManboShopAPI.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20241218061901_add data product")]
    partial class adddataproduct
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ManboShopAPI.Domain.Entities.Address", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AreaOrColonyOrStreetOrSectorOrVillage")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("BuildingOrCompanyOrApartment")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("FlatOrHouse")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("PinCode")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Addresses");
                });

            modelBuilder.Entity("ManboShopAPI.Domain.Entities.Banner", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Banners");
                });

            modelBuilder.Entity("ManboShopAPI.Domain.Entities.BannerDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BannerId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("BannerId");

                    b.HasIndex("ProductId");

                    b.ToTable("BannerDetails");
                });

            modelBuilder.Entity("ManboShopAPI.Domain.Entities.Brand", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Brands");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2024, 12, 18, 6, 19, 0, 955, DateTimeKind.Utc).AddTicks(8693),
                            ImageUrl = "https://example.com/images/nike.jpg",
                            Name = "Nike"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2024, 12, 18, 6, 19, 0, 955, DateTimeKind.Utc).AddTicks(9064),
                            ImageUrl = "https://example.com/images/adidas.jpg",
                            Name = "Adidas"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2024, 12, 18, 6, 19, 0, 955, DateTimeKind.Utc).AddTicks(9066),
                            ImageUrl = "https://example.com/images/gucci.jpg",
                            Name = "Gucci"
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2024, 12, 18, 6, 19, 0, 955, DateTimeKind.Utc).AddTicks(9068),
                            ImageUrl = "https://example.com/images/louis-vuitton.jpg",
                            Name = "Louis Vuitton"
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2024, 12, 18, 6, 19, 0, 955, DateTimeKind.Utc).AddTicks(9069),
                            ImageUrl = "https://example.com/images/zara.jpg",
                            Name = "Zara"
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTime(2024, 12, 18, 6, 19, 0, 955, DateTimeKind.Utc).AddTicks(9078),
                            ImageUrl = "https://example.com/images/h&m.jpg",
                            Name = "H&M"
                        },
                        new
                        {
                            Id = 7,
                            CreatedAt = new DateTime(2024, 12, 18, 6, 19, 0, 955, DateTimeKind.Utc).AddTicks(9079),
                            ImageUrl = "https://example.com/images/chanel.jpg",
                            Name = "Chanel"
                        },
                        new
                        {
                            Id = 8,
                            CreatedAt = new DateTime(2024, 12, 18, 6, 19, 0, 955, DateTimeKind.Utc).AddTicks(9080),
                            ImageUrl = "https://example.com/images/prada.jpg",
                            Name = "Prada"
                        },
                        new
                        {
                            Id = 9,
                            CreatedAt = new DateTime(2024, 12, 18, 6, 19, 0, 955, DateTimeKind.Utc).AddTicks(9082),
                            ImageUrl = "https://example.com/images/versace.jpg",
                            Name = "Versace"
                        },
                        new
                        {
                            Id = 10,
                            CreatedAt = new DateTime(2024, 12, 18, 6, 19, 0, 955, DateTimeKind.Utc).AddTicks(9084),
                            ImageUrl = "https://example.com/images/burberry.jpg",
                            Name = "Burberry"
                        },
                        new
                        {
                            Id = 11,
                            CreatedAt = new DateTime(2024, 12, 18, 6, 19, 0, 955, DateTimeKind.Utc).AddTicks(9085),
                            ImageUrl = "https://example.com/images/dior.jpg",
                            Name = "Dior"
                        },
                        new
                        {
                            Id = 12,
                            CreatedAt = new DateTime(2024, 12, 18, 6, 19, 0, 955, DateTimeKind.Utc).AddTicks(9086),
                            ImageUrl = "https://example.com/images/calvin-klein.jpg",
                            Name = "Calvin Klein"
                        },
                        new
                        {
                            Id = 13,
                            CreatedAt = new DateTime(2024, 12, 18, 6, 19, 0, 955, DateTimeKind.Utc).AddTicks(9087),
                            ImageUrl = "https://example.com/images/tommy-hilfiger.jpg",
                            Name = "Tommy Hilfiger"
                        },
                        new
                        {
                            Id = 14,
                            CreatedAt = new DateTime(2024, 12, 18, 6, 19, 0, 955, DateTimeKind.Utc).AddTicks(9088),
                            ImageUrl = "https://example.com/images/levis.jpg",
                            Name = "Levi's"
                        },
                        new
                        {
                            Id = 15,
                            CreatedAt = new DateTime(2024, 12, 18, 6, 19, 0, 955, DateTimeKind.Utc).AddTicks(9089),
                            ImageUrl = "https://example.com/images/uniqlo.jpg",
                            Name = "Uniqlo"
                        },
                        new
                        {
                            Id = 16,
                            CreatedAt = new DateTime(2024, 12, 18, 6, 19, 0, 955, DateTimeKind.Utc).AddTicks(9090),
                            ImageUrl = "https://example.com/images/lacoste.jpg",
                            Name = "Lacoste"
                        },
                        new
                        {
                            Id = 17,
                            CreatedAt = new DateTime(2024, 12, 18, 6, 19, 0, 955, DateTimeKind.Utc).AddTicks(9090),
                            ImageUrl = "https://example.com/images/the-north-face.jpg",
                            Name = "The North Face"
                        },
                        new
                        {
                            Id = 18,
                            CreatedAt = new DateTime(2024, 12, 18, 6, 19, 0, 955, DateTimeKind.Utc).AddTicks(9092),
                            ImageUrl = "https://example.com/images/ralph-lauren.jpg",
                            Name = "Ralph Lauren"
                        },
                        new
                        {
                            Id = 19,
                            CreatedAt = new DateTime(2024, 12, 18, 6, 19, 0, 955, DateTimeKind.Utc).AddTicks(9093),
                            ImageUrl = "https://example.com/images/puma.jpg",
                            Name = "Puma"
                        },
                        new
                        {
                            Id = 20,
                            CreatedAt = new DateTime(2024, 12, 18, 6, 19, 0, 955, DateTimeKind.Utc).AddTicks(9094),
                            ImageUrl = "https://example.com/images/hugo-boss.jpg",
                            Name = "Hugo Boss"
                        },
                        new
                        {
                            Id = 21,
                            CreatedAt = new DateTime(2024, 12, 18, 6, 19, 0, 955, DateTimeKind.Utc).AddTicks(9095),
                            ImageUrl = "https://example.com/images/armani.jpg",
                            Name = "Armani"
                        },
                        new
                        {
                            Id = 22,
                            CreatedAt = new DateTime(2024, 12, 18, 6, 19, 0, 955, DateTimeKind.Utc).AddTicks(9096),
                            ImageUrl = "https://example.com/images/balenciaga.jpg",
                            Name = "Balenciaga"
                        },
                        new
                        {
                            Id = 23,
                            CreatedAt = new DateTime(2024, 12, 18, 6, 19, 0, 955, DateTimeKind.Utc).AddTicks(9097),
                            ImageUrl = "https://example.com/images/fendi.jpg",
                            Name = "Fendi"
                        },
                        new
                        {
                            Id = 24,
                            CreatedAt = new DateTime(2024, 12, 18, 6, 19, 0, 955, DateTimeKind.Utc).AddTicks(9553),
                            ImageUrl = "https://example.com/images/givenchy.jpg",
                            Name = "Givenchy"
                        },
                        new
                        {
                            Id = 25,
                            CreatedAt = new DateTime(2024, 12, 18, 6, 19, 0, 955, DateTimeKind.Utc).AddTicks(9558),
                            ImageUrl = "https://example.com/images/hermes.jpg",
                            Name = "Hermès"
                        },
                        new
                        {
                            Id = 26,
                            CreatedAt = new DateTime(2024, 12, 18, 6, 19, 0, 955, DateTimeKind.Utc).AddTicks(9560),
                            ImageUrl = "https://example.com/images/salvatore-ferragamo.jpg",
                            Name = "Salvatore Ferragamo"
                        },
                        new
                        {
                            Id = 27,
                            CreatedAt = new DateTime(2024, 12, 18, 6, 19, 0, 955, DateTimeKind.Utc).AddTicks(9562),
                            ImageUrl = "https://example.com/images/valentino.jpg",
                            Name = "Valentino"
                        },
                        new
                        {
                            Id = 28,
                            CreatedAt = new DateTime(2024, 12, 18, 6, 19, 0, 955, DateTimeKind.Utc).AddTicks(9580),
                            ImageUrl = "https://example.com/images/dolce-gabbana.jpg",
                            Name = "Dolce & Gabbana"
                        },
                        new
                        {
                            Id = 29,
                            CreatedAt = new DateTime(2024, 12, 18, 6, 19, 0, 955, DateTimeKind.Utc).AddTicks(9582),
                            ImageUrl = "https://example.com/images/gap.jpg",
                            Name = "Gap"
                        },
                        new
                        {
                            Id = 30,
                            CreatedAt = new DateTime(2024, 12, 18, 6, 19, 0, 955, DateTimeKind.Utc).AddTicks(9593),
                            ImageUrl = "https://example.com/images/forever21.jpg",
                            Name = "Forever 21"
                        },
                        new
                        {
                            Id = 31,
                            CreatedAt = new DateTime(2024, 12, 18, 6, 19, 0, 955, DateTimeKind.Utc).AddTicks(9595),
                            ImageUrl = "https://example.com/images/new-balance.jpg",
                            Name = "New Balance"
                        },
                        new
                        {
                            Id = 32,
                            CreatedAt = new DateTime(2024, 12, 18, 6, 19, 0, 955, DateTimeKind.Utc).AddTicks(9597),
                            ImageUrl = "https://example.com/images/vans.jpg",
                            Name = "Vans"
                        },
                        new
                        {
                            Id = 33,
                            CreatedAt = new DateTime(2024, 12, 18, 6, 19, 0, 955, DateTimeKind.Utc).AddTicks(9599),
                            ImageUrl = "https://example.com/images/converse.jpg",
                            Name = "Converse"
                        },
                        new
                        {
                            Id = 34,
                            CreatedAt = new DateTime(2024, 12, 18, 6, 19, 0, 955, DateTimeKind.Utc).AddTicks(9621),
                            ImageUrl = "https://example.com/images/under-armour.jpg",
                            Name = "Under Armour"
                        },
                        new
                        {
                            Id = 35,
                            CreatedAt = new DateTime(2024, 12, 18, 6, 19, 0, 955, DateTimeKind.Utc).AddTicks(9623),
                            ImageUrl = "https://example.com/images/reebok.jpg",
                            Name = "Reebok"
                        },
                        new
                        {
                            Id = 36,
                            CreatedAt = new DateTime(2024, 12, 18, 6, 19, 0, 955, DateTimeKind.Utc).AddTicks(9625),
                            ImageUrl = "https://example.com/images/coach.jpg",
                            Name = "Coach"
                        },
                        new
                        {
                            Id = 37,
                            CreatedAt = new DateTime(2024, 12, 18, 6, 19, 0, 955, DateTimeKind.Utc).AddTicks(9627),
                            ImageUrl = "https://example.com/images/kate-spade.jpg",
                            Name = "Kate Spade"
                        },
                        new
                        {
                            Id = 38,
                            CreatedAt = new DateTime(2024, 12, 18, 6, 19, 0, 955, DateTimeKind.Utc).AddTicks(9629),
                            ImageUrl = "https://example.com/images/michael-kors.jpg",
                            Name = "Michael Kors"
                        },
                        new
                        {
                            Id = 39,
                            CreatedAt = new DateTime(2024, 12, 18, 6, 19, 0, 955, DateTimeKind.Utc).AddTicks(9633),
                            ImageUrl = "https://example.com/images/bally.jpg",
                            Name = "Bally"
                        },
                        new
                        {
                            Id = 40,
                            CreatedAt = new DateTime(2024, 12, 18, 6, 19, 0, 955, DateTimeKind.Utc).AddTicks(9635),
                            ImageUrl = "https://example.com/images/guess.jpg",
                            Name = "Guess"
                        });
                });

            modelBuilder.Entity("ManboShopAPI.Domain.Entities.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2024, 12, 18, 6, 18, 59, 124, DateTimeKind.Utc).AddTicks(1022),
                            ImageUrl = "https://example.com/images/men-clothing.jpg",
                            Name = "Men's Clothing"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2024, 12, 18, 6, 18, 59, 124, DateTimeKind.Utc).AddTicks(1353),
                            ImageUrl = "https://example.com/images/women-clothing.jpg",
                            Name = "Women's Clothing"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2024, 12, 18, 6, 18, 59, 124, DateTimeKind.Utc).AddTicks(1354),
                            ImageUrl = "https://example.com/images/children-clothing.jpg",
                            Name = "Children's Clothing"
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2024, 12, 18, 6, 18, 59, 124, DateTimeKind.Utc).AddTicks(1356),
                            ImageUrl = "https://example.com/images/shoes.jpg",
                            Name = "Shoes"
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2024, 12, 18, 6, 18, 59, 124, DateTimeKind.Utc).AddTicks(1357),
                            ImageUrl = "https://example.com/images/bags.jpg",
                            Name = "Bags"
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTime(2024, 12, 18, 6, 18, 59, 124, DateTimeKind.Utc).AddTicks(1360),
                            ImageUrl = "https://example.com/images/accessories.jpg",
                            Name = "Accessories"
                        },
                        new
                        {
                            Id = 7,
                            CreatedAt = new DateTime(2024, 12, 18, 6, 18, 59, 124, DateTimeKind.Utc).AddTicks(1361),
                            ImageUrl = "https://example.com/images/watches.jpg",
                            Name = "Watches"
                        },
                        new
                        {
                            Id = 8,
                            CreatedAt = new DateTime(2024, 12, 18, 6, 18, 59, 124, DateTimeKind.Utc).AddTicks(1362),
                            ImageUrl = "https://example.com/images/sportswear.jpg",
                            Name = "Sportswear"
                        },
                        new
                        {
                            Id = 9,
                            CreatedAt = new DateTime(2024, 12, 18, 6, 18, 59, 124, DateTimeKind.Utc).AddTicks(1363),
                            ImageUrl = "https://example.com/images/swimwear.jpg",
                            Name = "Swimwear"
                        },
                        new
                        {
                            Id = 10,
                            CreatedAt = new DateTime(2024, 12, 18, 6, 18, 59, 124, DateTimeKind.Utc).AddTicks(1364),
                            ImageUrl = "https://example.com/images/formal-wear.jpg",
                            Name = "Formal Wear"
                        },
                        new
                        {
                            Id = 11,
                            CreatedAt = new DateTime(2024, 12, 18, 6, 18, 59, 124, DateTimeKind.Utc).AddTicks(1365),
                            ImageUrl = "https://example.com/images/casual-wear.jpg",
                            Name = "Casual Wear"
                        },
                        new
                        {
                            Id = 12,
                            CreatedAt = new DateTime(2024, 12, 18, 6, 18, 59, 124, DateTimeKind.Utc).AddTicks(1366),
                            ImageUrl = "https://example.com/images/t-shirts.jpg",
                            Name = "T-Shirts"
                        },
                        new
                        {
                            Id = 13,
                            CreatedAt = new DateTime(2024, 12, 18, 6, 18, 59, 124, DateTimeKind.Utc).AddTicks(1367),
                            ImageUrl = "https://example.com/images/jeans.jpg",
                            Name = "Jeans"
                        },
                        new
                        {
                            Id = 14,
                            CreatedAt = new DateTime(2024, 12, 18, 6, 18, 59, 124, DateTimeKind.Utc).AddTicks(1368),
                            ImageUrl = "https://example.com/images/jackets-coats.jpg",
                            Name = "Jackets & Coats"
                        },
                        new
                        {
                            Id = 15,
                            CreatedAt = new DateTime(2024, 12, 18, 6, 18, 59, 124, DateTimeKind.Utc).AddTicks(1369),
                            ImageUrl = "https://example.com/images/hats-caps.jpg",
                            Name = "Hats & Caps"
                        },
                        new
                        {
                            Id = 16,
                            CreatedAt = new DateTime(2024, 12, 18, 6, 18, 59, 124, DateTimeKind.Utc).AddTicks(1370),
                            ImageUrl = "https://example.com/images/scarves.jpg",
                            Name = "Scarves"
                        },
                        new
                        {
                            Id = 17,
                            CreatedAt = new DateTime(2024, 12, 18, 6, 18, 59, 124, DateTimeKind.Utc).AddTicks(1370),
                            ImageUrl = "https://example.com/images/sunglasses.jpg",
                            Name = "Sunglasses"
                        },
                        new
                        {
                            Id = 18,
                            CreatedAt = new DateTime(2024, 12, 18, 6, 18, 59, 124, DateTimeKind.Utc).AddTicks(1372),
                            ImageUrl = "https://example.com/images/belts.jpg",
                            Name = "Belts"
                        },
                        new
                        {
                            Id = 19,
                            CreatedAt = new DateTime(2024, 12, 18, 6, 18, 59, 124, DateTimeKind.Utc).AddTicks(1373),
                            ImageUrl = "https://example.com/images/undergarments.jpg",
                            Name = "Undergarments"
                        },
                        new
                        {
                            Id = 20,
                            CreatedAt = new DateTime(2024, 12, 18, 6, 18, 59, 124, DateTimeKind.Utc).AddTicks(1374),
                            ImageUrl = "https://example.com/images/sports-shoes.jpg",
                            Name = "Sports Shoes"
                        },
                        new
                        {
                            Id = 21,
                            CreatedAt = new DateTime(2024, 12, 18, 6, 18, 59, 124, DateTimeKind.Utc).AddTicks(1375),
                            ImageUrl = "https://example.com/images/boots.jpg",
                            Name = "Boots"
                        },
                        new
                        {
                            Id = 22,
                            CreatedAt = new DateTime(2024, 12, 18, 6, 18, 59, 124, DateTimeKind.Utc).AddTicks(1376),
                            ImageUrl = "https://example.com/images/high-heels.jpg",
                            Name = "High Heels"
                        },
                        new
                        {
                            Id = 23,
                            CreatedAt = new DateTime(2024, 12, 18, 6, 18, 59, 124, DateTimeKind.Utc).AddTicks(1377),
                            ImageUrl = "https://example.com/images/sneakers.jpg",
                            Name = "Sneakers"
                        },
                        new
                        {
                            Id = 24,
                            CreatedAt = new DateTime(2024, 12, 18, 6, 18, 59, 124, DateTimeKind.Utc).AddTicks(1377),
                            ImageUrl = "https://example.com/images/suits.jpg",
                            Name = "Suits"
                        },
                        new
                        {
                            Id = 25,
                            CreatedAt = new DateTime(2024, 12, 18, 6, 18, 59, 124, DateTimeKind.Utc).AddTicks(1378),
                            ImageUrl = "https://example.com/images/dresses.jpg",
                            Name = "Dresses"
                        },
                        new
                        {
                            Id = 26,
                            CreatedAt = new DateTime(2024, 12, 18, 6, 18, 59, 124, DateTimeKind.Utc).AddTicks(1379),
                            ImageUrl = "https://example.com/images/blouses.jpg",
                            Name = "Blouses"
                        },
                        new
                        {
                            Id = 27,
                            CreatedAt = new DateTime(2024, 12, 18, 6, 18, 59, 124, DateTimeKind.Utc).AddTicks(1380),
                            ImageUrl = "https://example.com/images/skirts.jpg",
                            Name = "Skirts"
                        },
                        new
                        {
                            Id = 28,
                            CreatedAt = new DateTime(2024, 12, 18, 6, 18, 59, 124, DateTimeKind.Utc).AddTicks(1381),
                            ImageUrl = "https://example.com/images/shorts.jpg",
                            Name = "Shorts"
                        },
                        new
                        {
                            Id = 29,
                            CreatedAt = new DateTime(2024, 12, 18, 6, 18, 59, 124, DateTimeKind.Utc).AddTicks(1382),
                            ImageUrl = "https://example.com/images/pajamas.jpg",
                            Name = "Pajamas"
                        },
                        new
                        {
                            Id = 30,
                            CreatedAt = new DateTime(2024, 12, 18, 6, 18, 59, 124, DateTimeKind.Utc).AddTicks(1383),
                            ImageUrl = "https://example.com/images/outerwear.jpg",
                            Name = "Outerwear"
                        },
                        new
                        {
                            Id = 31,
                            CreatedAt = new DateTime(2024, 12, 18, 6, 18, 59, 124, DateTimeKind.Utc).AddTicks(1384),
                            ImageUrl = "https://example.com/images/activewear.jpg",
                            Name = "Activewear"
                        },
                        new
                        {
                            Id = 32,
                            CreatedAt = new DateTime(2024, 12, 18, 6, 18, 59, 124, DateTimeKind.Utc).AddTicks(1384),
                            ImageUrl = "https://example.com/images/raincoats.jpg",
                            Name = "Raincoats"
                        },
                        new
                        {
                            Id = 33,
                            CreatedAt = new DateTime(2024, 12, 18, 6, 18, 59, 124, DateTimeKind.Utc).AddTicks(1385),
                            ImageUrl = "https://example.com/images/cardigans.jpg",
                            Name = "Cardigans"
                        },
                        new
                        {
                            Id = 34,
                            CreatedAt = new DateTime(2024, 12, 18, 6, 18, 59, 124, DateTimeKind.Utc).AddTicks(1387),
                            ImageUrl = "https://example.com/images/sweaters.jpg",
                            Name = "Sweaters"
                        },
                        new
                        {
                            Id = 35,
                            CreatedAt = new DateTime(2024, 12, 18, 6, 18, 59, 124, DateTimeKind.Utc).AddTicks(1388),
                            ImageUrl = "https://example.com/images/leggings.jpg",
                            Name = "Leggings"
                        },
                        new
                        {
                            Id = 36,
                            CreatedAt = new DateTime(2024, 12, 18, 6, 18, 59, 124, DateTimeKind.Utc).AddTicks(1389),
                            ImageUrl = "https://example.com/images/tracksuits.jpg",
                            Name = "Tracksuits"
                        },
                        new
                        {
                            Id = 37,
                            CreatedAt = new DateTime(2024, 12, 18, 6, 18, 59, 124, DateTimeKind.Utc).AddTicks(1389),
                            ImageUrl = "https://example.com/images/gloves.jpg",
                            Name = "Gloves"
                        },
                        new
                        {
                            Id = 38,
                            CreatedAt = new DateTime(2024, 12, 18, 6, 18, 59, 124, DateTimeKind.Utc).AddTicks(1390),
                            ImageUrl = "https://example.com/images/socks.jpg",
                            Name = "Socks"
                        },
                        new
                        {
                            Id = 39,
                            CreatedAt = new DateTime(2024, 12, 18, 6, 18, 59, 124, DateTimeKind.Utc).AddTicks(1391),
                            ImageUrl = "https://example.com/images/loungewear.jpg",
                            Name = "Loungewear"
                        },
                        new
                        {
                            Id = 40,
                            CreatedAt = new DateTime(2024, 12, 18, 6, 18, 59, 124, DateTimeKind.Utc).AddTicks(1392),
                            ImageUrl = "https://example.com/images/winter-wear.jpg",
                            Name = "Winter Wear"
                        });
                });

            modelBuilder.Entity("ManboShopAPI.Domain.Entities.Coupon", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("CurrentUsages")
                        .HasColumnType("int");

                    b.Property<DateTime>("ExpirationDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("MaxUsages")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Coupons");
                });

            modelBuilder.Entity("ManboShopAPI.Domain.Entities.CouponCondition", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Attribute")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("CouponId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("DiscountAmount")
                        .HasColumnType("int");

                    b.Property<string>("Operator")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Value")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("CouponId");

                    b.ToTable("CouponConditions");
                });

            modelBuilder.Entity("ManboShopAPI.Domain.Entities.Favorite", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.HasIndex("UserId");

                    b.ToTable("Favorites");
                });

            modelBuilder.Entity("ManboShopAPI.Domain.Entities.Feedback", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Star")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.HasIndex("UserId");

                    b.ToTable("Feedbacks");
                });

            modelBuilder.Entity("ManboShopAPI.Domain.Entities.News", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("News");
                });

            modelBuilder.Entity("ManboShopAPI.Domain.Entities.NewsDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("NewsId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("NewsId");

                    b.HasIndex("ProductId");

                    b.ToTable("NewsDetails");
                });

            modelBuilder.Entity("ManboShopAPI.Domain.Entities.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CouponId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Note")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CouponId");

                    b.HasIndex("UserId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("ManboShopAPI.Domain.Entities.OrderDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CouponId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CouponId");

                    b.HasIndex("OrderId");

                    b.ToTable("OrderDetails");
                });

            modelBuilder.Entity("ManboShopAPI.Domain.Entities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("BrandId")
                        .HasColumnType("int");

                    b.Property<int>("BuyTurn")
                        .HasColumnType("int");

                    b.Property<int?>("CategoryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("OldPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<string>("Specification")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("BrandId");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BrandId = 1,
                            BuyTurn = 152,
                            CategoryId = 4,
                            CreatedAt = new DateTime(2024, 12, 18, 6, 18, 59, 117, DateTimeKind.Utc).AddTicks(7223),
                            Description = "Sản phẩm được làm từ Vải Linen. Phù hợp nhiều dáng người. Phù hợp cho các dịp văn phòng",
                            Name = "Adidas Áo Polo Thoải Mái",
                            OldPrice = 4518659.6031697677686715288908m,
                            Price = 3504853.013195195150000m,
                            Quantity = 476,
                            Specification = "Kích thước: XS, S, L. Màu sắc: Xám, Đỏ"
                        },
                        new
                        {
                            Id = 2,
                            BrandId = 10,
                            BuyTurn = 172,
                            CategoryId = 1,
                            CreatedAt = new DateTime(2024, 12, 18, 6, 18, 59, 122, DateTimeKind.Utc).AddTicks(9130),
                            Description = "Sản phẩm được làm từ Chất liệu Nhật Bản. Kiểu dáng thanh lịch. Phù hợp cho các dịp dạo phố",
                            Name = "H&M Áo Sơ Mi Năng Động",
                            OldPrice = 3888830.1084312667516427054725m,
                            Price = 3130308.665563731800000m,
                            Quantity = 471,
                            Specification = "Kích thước: M, S, XL. Màu sắc: Trắng, Xanh Navy"
                        },
                        new
                        {
                            Id = 3,
                            BrandId = 2,
                            BuyTurn = 27,
                            CategoryId = 3,
                            CreatedAt = new DateTime(2024, 12, 18, 6, 18, 59, 122, DateTimeKind.Utc).AddTicks(9300),
                            Description = "Sản phẩm được làm từ Cotton cao cấp. Thoáng mát. Phù hợp cho các dịp văn phòng",
                            Name = "Zara Áo Polo Thời Thượng",
                            OldPrice = 2830620.9841512039581346224285m,
                            Price = 2379243.4566699650000m,
                            Quantity = 353,
                            Specification = "Kích thước: S, M, XS. Màu sắc: Hồng, Xanh Navy"
                        },
                        new
                        {
                            Id = 4,
                            BrandId = 6,
                            BuyTurn = 56,
                            CategoryId = 3,
                            CreatedAt = new DateTime(2024, 12, 18, 6, 18, 59, 122, DateTimeKind.Utc).AddTicks(9340),
                            Description = "Sản phẩm được làm từ Cotton cao cấp. Thoáng mát. Phù hợp cho các dịp văn phòng",
                            Name = "Zara Blazer Thời Thượng",
                            OldPrice = 4090807.2925835821305275458633m,
                            Price = 3149128.041772561700000m,
                            Quantity = 73,
                            Specification = "Kích thước: XXL, S, XS. Màu sắc: Xám, Đen"
                        },
                        new
                        {
                            Id = 5,
                            BrandId = 9,
                            BuyTurn = 86,
                            CategoryId = 4,
                            CreatedAt = new DateTime(2024, 12, 18, 6, 18, 59, 122, DateTimeKind.Utc).AddTicks(9375),
                            Description = "Sản phẩm được làm từ Vải Linen. Thiết kế hiện đại. Phù hợp cho các dịp thể thao",
                            Name = "Zara Áo Thun Năng Động",
                            OldPrice = 4530249.5052426890781793329290m,
                            Price = 3466119.950819995100000m,
                            Quantity = 72,
                            Specification = "Kích thước: M, XXL, S. Màu sắc: Xám, Hồng"
                        },
                        new
                        {
                            Id = 6,
                            BrandId = 9,
                            BuyTurn = 187,
                            CategoryId = 3,
                            CreatedAt = new DateTime(2024, 12, 18, 6, 18, 59, 122, DateTimeKind.Utc).AddTicks(9440),
                            Description = "Sản phẩm được làm từ Chất liệu Nhật Bản. Co giãn tốt. Phù hợp cho các dịp dạo phố",
                            Name = "Chanel Áo Sơ Mi Cổ Điển",
                            OldPrice = 1239610.0072943243051424805645m,
                            Price = 934650.981847603850000m,
                            Quantity = 228,
                            Specification = "Kích thước: L, M, S. Màu sắc: Đen, Xám"
                        },
                        new
                        {
                            Id = 7,
                            BrandId = 3,
                            BuyTurn = 96,
                            CategoryId = 2,
                            CreatedAt = new DateTime(2024, 12, 18, 6, 18, 59, 122, DateTimeKind.Utc).AddTicks(9471),
                            Description = "Sản phẩm được làm từ Vải Linen. Phù hợp nhiều dáng người. Phù hợp cho các dịp thể thao",
                            Name = "Zara Quần Tây Thoải Mái",
                            OldPrice = 4802311.9753847430832720526601m,
                            Price = 3604110.074402978750000m,
                            Quantity = 99,
                            Specification = "Kích thước: M, L, XL. Màu sắc: Hồng, Đen"
                        },
                        new
                        {
                            Id = 8,
                            BrandId = 7,
                            BuyTurn = 162,
                            CategoryId = 2,
                            CreatedAt = new DateTime(2024, 12, 18, 6, 18, 59, 122, DateTimeKind.Utc).AddTicks(9502),
                            Description = "Sản phẩm được làm từ Sợi Bamboo. Thiết kế hiện đại. Phù hợp cho các dịp tiệc tùng",
                            Name = "Louis Vuitton Áo Sơ Mi Sang Trọng",
                            OldPrice = 5322800.7185549177046945741059m,
                            Price = 4417470.422451950000m,
                            Quantity = 201,
                            Specification = "Kích thước: M, XL, XXL. Màu sắc: Đỏ, Xám"
                        },
                        new
                        {
                            Id = 9,
                            BrandId = 7,
                            BuyTurn = 161,
                            CategoryId = 4,
                            CreatedAt = new DateTime(2024, 12, 18, 6, 18, 59, 122, DateTimeKind.Utc).AddTicks(9557),
                            Description = "Sản phẩm được làm từ Vải Châu Âu. Thiết kế hiện đại. Phù hợp cho các dịp tiệc tùng",
                            Name = "Gucci Áo Polo Hiện Đại",
                            OldPrice = 3025059.0084991692839034828282m,
                            Price = 2157319.486630113800000m,
                            Quantity = 351,
                            Specification = "Kích thước: XS, L, S. Màu sắc: Xám, Xanh Navy"
                        },
                        new
                        {
                            Id = 10,
                            BrandId = 6,
                            BuyTurn = 87,
                            CategoryId = 1,
                            CreatedAt = new DateTime(2024, 12, 18, 6, 18, 59, 122, DateTimeKind.Utc).AddTicks(9589),
                            Description = "Sản phẩm được làm từ Cotton cao cấp. Thiết kế hiện đại. Phù hợp cho các dịp dạo phố",
                            Name = "Louis Vuitton Quần Jogger Hiện Đại",
                            OldPrice = 1231012.6909186546668233252658m,
                            Price = 1104875.961790407350000m,
                            Quantity = 47,
                            Specification = "Kích thước: M, XS, S. Màu sắc: Đỏ, Đen"
                        },
                        new
                        {
                            Id = 11,
                            BrandId = 7,
                            BuyTurn = 167,
                            CategoryId = 2,
                            CreatedAt = new DateTime(2024, 12, 18, 6, 18, 59, 122, DateTimeKind.Utc).AddTicks(9620),
                            Description = "Sản phẩm được làm từ Vải Organic. Thiết kế hiện đại. Phù hợp cho các dịp thể thao",
                            Name = "Nike Áo Len Năng Động",
                            OldPrice = 3454088.6195230883714178303010m,
                            Price = 2680246.394631462200000m,
                            Quantity = 19,
                            Specification = "Kích thước: XXL, M, XL. Màu sắc: Trắng, Xám"
                        },
                        new
                        {
                            Id = 12,
                            BrandId = 3,
                            BuyTurn = 41,
                            CategoryId = 2,
                            CreatedAt = new DateTime(2024, 12, 18, 6, 18, 59, 122, DateTimeKind.Utc).AddTicks(9650),
                            Description = "Sản phẩm được làm từ Cotton cao cấp. Phù hợp nhiều dáng người. Phù hợp cho các dịp dạo phố",
                            Name = "Adidas Áo Len Năng Động",
                            OldPrice = 3023545.5973903458819354365509m,
                            Price = 2253419.223316762550000m,
                            Quantity = 482,
                            Specification = "Kích thước: L, XS, S. Màu sắc: Đỏ, Hồng"
                        },
                        new
                        {
                            Id = 13,
                            BrandId = 6,
                            BuyTurn = 192,
                            CategoryId = 4,
                            CreatedAt = new DateTime(2024, 12, 18, 6, 18, 59, 122, DateTimeKind.Utc).AddTicks(9701),
                            Description = "Sản phẩm được làm từ Chất liệu Nhật Bản. Thoáng mát. Phù hợp cho các dịp tiệc tùng",
                            Name = "Adidas Váy Liền Thoải Mái",
                            OldPrice = 6873533.1887385621220417182271m,
                            Price = 4898639.89884109550000m,
                            Quantity = 170,
                            Specification = "Kích thước: XS, S, XXL. Màu sắc: Hồng, Xám"
                        },
                        new
                        {
                            Id = 14,
                            BrandId = 1,
                            BuyTurn = 143,
                            CategoryId = 3,
                            CreatedAt = new DateTime(2024, 12, 18, 6, 18, 59, 122, DateTimeKind.Utc).AddTicks(9730),
                            Description = "Sản phẩm được làm từ Chất liệu Nhật Bản. Thiết kế hiện đại. Phù hợp cho các dịp tiệc tùng",
                            Name = "Chanel Quần Jean Trẻ Trung",
                            OldPrice = 6898149.2744153721418762801204m,
                            Price = 4999011.669993335450000m,
                            Quantity = 146,
                            Specification = "Kích thước: XXL, M, L. Màu sắc: Trắng, Hồng"
                        },
                        new
                        {
                            Id = 15,
                            BrandId = 10,
                            BuyTurn = 89,
                            CategoryId = 1,
                            CreatedAt = new DateTime(2024, 12, 18, 6, 18, 59, 122, DateTimeKind.Utc).AddTicks(9760),
                            Description = "Sản phẩm được làm từ Cotton cao cấp. Phù hợp nhiều dáng người. Phù hợp cho các dịp văn phòng",
                            Name = "Louis Vuitton Váy Liền Sang Trọng",
                            OldPrice = 1601155.2716157415145661724642m,
                            Price = 1223757.476982102650000m,
                            Quantity = 258,
                            Specification = "Kích thước: XS, M, XL. Màu sắc: Đen, Đỏ"
                        },
                        new
                        {
                            Id = 16,
                            BrandId = 9,
                            BuyTurn = 73,
                            CategoryId = 4,
                            CreatedAt = new DateTime(2024, 12, 18, 6, 18, 59, 122, DateTimeKind.Utc).AddTicks(9790),
                            Description = "Sản phẩm được làm từ Vải Organic. Kiểu dáng thanh lịch. Phù hợp cho các dịp thể thao",
                            Name = "Zara Áo Thun Trẻ Trung",
                            OldPrice = 2574687.8538150919063164740350m,
                            Price = 2332489.817074512650000m,
                            Quantity = 167,
                            Specification = "Kích thước: XXL, S, XS. Màu sắc: Xám, Đỏ"
                        },
                        new
                        {
                            Id = 17,
                            BrandId = 3,
                            BuyTurn = 123,
                            CategoryId = 5,
                            CreatedAt = new DateTime(2024, 12, 18, 6, 18, 59, 122, DateTimeKind.Utc).AddTicks(9844),
                            Description = "Sản phẩm được làm từ Vải Linen. Thiết kế hiện đại. Phù hợp cho các dịp văn phòng",
                            Name = "Uniqlo Váy Liền Thời Thượng",
                            OldPrice = 2770692.4877723095957077815724m,
                            Price = 1926467.649816326600000m,
                            Quantity = 19,
                            Specification = "Kích thước: L, XS, S. Màu sắc: Xanh Navy, Xám"
                        },
                        new
                        {
                            Id = 18,
                            BrandId = 1,
                            BuyTurn = 12,
                            CategoryId = 5,
                            CreatedAt = new DateTime(2024, 12, 18, 6, 18, 59, 122, DateTimeKind.Utc).AddTicks(9875),
                            Description = "Sản phẩm được làm từ Vải Châu Âu. Kiểu dáng thanh lịch. Phù hợp cho các dịp thể thao",
                            Name = "Adidas Áo Khoác Năng Động",
                            OldPrice = 5523078.5258584814362890052733m,
                            Price = 4497788.628107389400000m,
                            Quantity = 51,
                            Specification = "Kích thước: L, S, XXL. Màu sắc: Đỏ, Đen"
                        },
                        new
                        {
                            Id = 19,
                            BrandId = 2,
                            BuyTurn = 38,
                            CategoryId = 1,
                            CreatedAt = new DateTime(2024, 12, 18, 6, 18, 59, 122, DateTimeKind.Utc).AddTicks(9905),
                            Description = "Sản phẩm được làm từ Vải Châu Âu. Kiểu dáng thanh lịch. Phù hợp cho các dịp tiệc tùng",
                            Name = "Zara Áo Len Hiện Đại",
                            OldPrice = 2716775.7509249419550711797644m,
                            Price = 2113863.958476097250000m,
                            Quantity = 238,
                            Specification = "Kích thước: XXL, XL, M. Màu sắc: Đỏ, Hồng"
                        },
                        new
                        {
                            Id = 20,
                            BrandId = 9,
                            BuyTurn = 83,
                            CategoryId = 2,
                            CreatedAt = new DateTime(2024, 12, 18, 6, 18, 59, 122, DateTimeKind.Utc).AddTicks(9960),
                            Description = "Sản phẩm được làm từ Sợi Bamboo. Kiểu dáng thanh lịch. Phù hợp cho các dịp thể thao",
                            Name = "Adidas Đầm Dạ Hội Trẻ Trung",
                            OldPrice = 6237912.7319126780999657039609m,
                            Price = 4428457.225736638550000m,
                            Quantity = 309,
                            Specification = "Kích thước: XL, M, XS. Màu sắc: Hồng, Xanh Navy"
                        },
                        new
                        {
                            Id = 21,
                            BrandId = 8,
                            BuyTurn = 35,
                            CategoryId = 2,
                            CreatedAt = new DateTime(2024, 12, 18, 6, 18, 59, 122, DateTimeKind.Utc).AddTicks(9989),
                            Description = "Sản phẩm được làm từ Cotton cao cấp. Thoáng mát. Phù hợp cho các dịp dạo phố",
                            Name = "Nike Áo Thun Cổ Điển",
                            OldPrice = 4348690.1990004452303434822283m,
                            Price = 3338987.710363955600000m,
                            Quantity = 24,
                            Specification = "Kích thước: S, XL, XS. Màu sắc: Đỏ, Trắng"
                        },
                        new
                        {
                            Id = 22,
                            BrandId = 9,
                            BuyTurn = 63,
                            CategoryId = 4,
                            CreatedAt = new DateTime(2024, 12, 18, 6, 18, 59, 123, DateTimeKind.Utc).AddTicks(17),
                            Description = "Sản phẩm được làm từ Chất liệu Nhật Bản. Kiểu dáng thanh lịch. Phù hợp cho các dịp tiệc tùng",
                            Name = "Adidas Quần Jogger Năng Động",
                            OldPrice = 4066206.7026008522967131437150m,
                            Price = 2984498.171484939950000m,
                            Quantity = 390,
                            Specification = "Kích thước: XL, L, S. Màu sắc: Đen, Xanh Navy"
                        },
                        new
                        {
                            Id = 23,
                            BrandId = 9,
                            BuyTurn = 16,
                            CategoryId = 4,
                            CreatedAt = new DateTime(2024, 12, 18, 6, 18, 59, 123, DateTimeKind.Utc).AddTicks(45),
                            Description = "Sản phẩm được làm từ Vải Organic. Phù hợp nhiều dáng người. Phù hợp cho các dịp văn phòng",
                            Name = "Gucci Váy Liền Cổ Điển",
                            OldPrice = 3568285.9083988627569148199424m,
                            Price = 2858290.04111597150000m,
                            Quantity = 438,
                            Specification = "Kích thước: XS, XL, S. Màu sắc: Đen, Trắng"
                        },
                        new
                        {
                            Id = 24,
                            BrandId = 10,
                            BuyTurn = 47,
                            CategoryId = 5,
                            CreatedAt = new DateTime(2024, 12, 18, 6, 18, 59, 123, DateTimeKind.Utc).AddTicks(91),
                            Description = "Sản phẩm được làm từ Chất liệu Nhật Bản. Phù hợp nhiều dáng người. Phù hợp cho các dịp tiệc tùng",
                            Name = "Chanel Áo Polo Thời Thượng",
                            OldPrice = 5351904.0767678962057181961664m,
                            Price = 4501812.565094100800000m,
                            Quantity = 332,
                            Specification = "Kích thước: M, XL, L. Màu sắc: Hồng, Xanh Navy"
                        },
                        new
                        {
                            Id = 25,
                            BrandId = 2,
                            BuyTurn = 3,
                            CategoryId = 3,
                            CreatedAt = new DateTime(2024, 12, 18, 6, 18, 59, 123, DateTimeKind.Utc).AddTicks(121),
                            Description = "Sản phẩm được làm từ Sợi Bamboo. Kiểu dáng thanh lịch. Phù hợp cho các dịp dạo phố",
                            Name = "Adidas Áo Thun Trẻ Trung",
                            OldPrice = 3401259.9599301073474339148197m,
                            Price = 2347415.629734706250000m,
                            Quantity = 293,
                            Specification = "Kích thước: M, S, XL. Màu sắc: Hồng, Xanh Navy"
                        },
                        new
                        {
                            Id = 26,
                            BrandId = 4,
                            BuyTurn = 146,
                            CategoryId = 1,
                            CreatedAt = new DateTime(2024, 12, 18, 6, 18, 59, 123, DateTimeKind.Utc).AddTicks(150),
                            Description = "Sản phẩm được làm từ Vải Organic. Co giãn tốt. Phù hợp cho các dịp thể thao",
                            Name = "Gucci Áo Polo Sang Trọng",
                            OldPrice = 6041075.2342182022159132284795m,
                            Price = 4221699.025299149300000m,
                            Quantity = 477,
                            Specification = "Kích thước: XXL, L, XS. Màu sắc: Hồng, Đỏ"
                        },
                        new
                        {
                            Id = 27,
                            BrandId = 6,
                            BuyTurn = 151,
                            CategoryId = 1,
                            CreatedAt = new DateTime(2024, 12, 18, 6, 18, 59, 123, DateTimeKind.Utc).AddTicks(179),
                            Description = "Sản phẩm được làm từ Sợi Bamboo. Thiết kế hiện đại. Phù hợp cho các dịp dạo phố",
                            Name = "Chanel Quần Short Thời Thượng",
                            OldPrice = 3244927.1422592874556608519569m,
                            Price = 2943832.181747450900000m,
                            Quantity = 402,
                            Specification = "Kích thước: XXL, XL, L. Màu sắc: Đỏ, Trắng"
                        },
                        new
                        {
                            Id = 28,
                            BrandId = 2,
                            BuyTurn = 196,
                            CategoryId = 4,
                            CreatedAt = new DateTime(2024, 12, 18, 6, 18, 59, 123, DateTimeKind.Utc).AddTicks(252),
                            Description = "Sản phẩm được làm từ Vải Organic. Thoáng mát. Phù hợp cho các dịp tiệc tùng",
                            Name = "Louis Vuitton Quần Short Năng Động",
                            OldPrice = 3416476.5982736547233672360093m,
                            Price = 3105300.097144521050000m,
                            Quantity = 440,
                            Specification = "Kích thước: XS, L, XL. Màu sắc: Xanh Navy, Hồng"
                        },
                        new
                        {
                            Id = 29,
                            BrandId = 1,
                            BuyTurn = 13,
                            CategoryId = 1,
                            CreatedAt = new DateTime(2024, 12, 18, 6, 18, 59, 123, DateTimeKind.Utc).AddTicks(282),
                            Description = "Sản phẩm được làm từ Sợi Bamboo. Kiểu dáng thanh lịch. Phù hợp cho các dịp dạo phố",
                            Name = "H&M Áo Thun Hiện Đại",
                            OldPrice = 5645716.0579624997247054399774m,
                            Price = 4382200.525786553750000m,
                            Quantity = 147,
                            Specification = "Kích thước: S, XXL, XS. Màu sắc: Hồng, Đen"
                        },
                        new
                        {
                            Id = 30,
                            BrandId = 6,
                            BuyTurn = 188,
                            CategoryId = 1,
                            CreatedAt = new DateTime(2024, 12, 18, 6, 18, 59, 123, DateTimeKind.Utc).AddTicks(311),
                            Description = "Sản phẩm được làm từ Chất liệu Nhật Bản. Phù hợp nhiều dáng người. Phù hợp cho các dịp văn phòng",
                            Name = "H&M Quần Short Cổ Điển",
                            OldPrice = 3320341.9610156629243525514967m,
                            Price = 2280710.011489960550000m,
                            Quantity = 181,
                            Specification = "Kích thước: S, XXL, XS. Màu sắc: Đỏ, Xanh Navy"
                        },
                        new
                        {
                            Id = 31,
                            BrandId = 6,
                            BuyTurn = 79,
                            CategoryId = 4,
                            CreatedAt = new DateTime(2024, 12, 18, 6, 18, 59, 123, DateTimeKind.Utc).AddTicks(372),
                            Description = "Sản phẩm được làm từ Vải Châu Âu. Thoáng mát. Phù hợp cho các dịp thể thao",
                            Name = "Louis Vuitton Áo Thun Năng Động",
                            OldPrice = 2761005.7166375045014315458076m,
                            Price = 2067881.716249737800000m,
                            Quantity = 374,
                            Specification = "Kích thước: S, XXL, L. Màu sắc: Xám, Xanh Navy"
                        },
                        new
                        {
                            Id = 32,
                            BrandId = 2,
                            BuyTurn = 51,
                            CategoryId = 4,
                            CreatedAt = new DateTime(2024, 12, 18, 6, 18, 59, 123, DateTimeKind.Utc).AddTicks(403),
                            Description = "Sản phẩm được làm từ Sợi Bamboo. Phù hợp nhiều dáng người. Phù hợp cho các dịp tiệc tùng",
                            Name = "Adidas Quần Jogger Thời Thượng",
                            OldPrice = 5001658.3646264757177979497924m,
                            Price = 4272892.069422646400000m,
                            Quantity = 470,
                            Specification = "Kích thước: S, M, XXL. Màu sắc: Đỏ, Xám"
                        },
                        new
                        {
                            Id = 33,
                            BrandId = 5,
                            BuyTurn = 128,
                            CategoryId = 4,
                            CreatedAt = new DateTime(2024, 12, 18, 6, 18, 59, 123, DateTimeKind.Utc).AddTicks(432),
                            Description = "Sản phẩm được làm từ Vải Châu Âu. Co giãn tốt. Phù hợp cho các dịp thể thao",
                            Name = "Gucci Váy Liền Hiện Đại",
                            OldPrice = 3094473.7508306800978619199020m,
                            Price = 2248383.262649060300000m,
                            Quantity = 198,
                            Specification = "Kích thước: S, XXL, M. Màu sắc: Xám, Đỏ"
                        },
                        new
                        {
                            Id = 34,
                            BrandId = 2,
                            BuyTurn = 66,
                            CategoryId = 4,
                            CreatedAt = new DateTime(2024, 12, 18, 6, 18, 59, 123, DateTimeKind.Utc).AddTicks(461),
                            Description = "Sản phẩm được làm từ Sợi Bamboo. Co giãn tốt. Phù hợp cho các dịp tiệc tùng",
                            Name = "Gucci Áo Sơ Mi Thoải Mái",
                            OldPrice = 6593427.3613247305258172634199m,
                            Price = 4838323.162389720800000m,
                            Quantity = 235,
                            Specification = "Kích thước: XL, XXL, XS. Màu sắc: Đỏ, Xanh Navy"
                        },
                        new
                        {
                            Id = 35,
                            BrandId = 4,
                            BuyTurn = 20,
                            CategoryId = 5,
                            CreatedAt = new DateTime(2024, 12, 18, 6, 18, 59, 123, DateTimeKind.Utc).AddTicks(513),
                            Description = "Sản phẩm được làm từ Sợi Bamboo. Co giãn tốt. Phù hợp cho các dịp tiệc tùng",
                            Name = "Gucci Quần Short Cổ Điển",
                            OldPrice = 479188.63135302244147951044705m,
                            Price = 337858.3642562855150000m,
                            Quantity = 235,
                            Specification = "Kích thước: M, XL, XS. Màu sắc: Hồng, Xanh Navy"
                        },
                        new
                        {
                            Id = 36,
                            BrandId = 3,
                            BuyTurn = 66,
                            CategoryId = 4,
                            CreatedAt = new DateTime(2024, 12, 18, 6, 18, 59, 123, DateTimeKind.Utc).AddTicks(542),
                            Description = "Sản phẩm được làm từ Chất liệu Nhật Bản. Kiểu dáng thanh lịch. Phù hợp cho các dịp thể thao",
                            Name = "Adidas Quần Short Trẻ Trung",
                            OldPrice = 4587588.8115693994502858138386m,
                            Price = 3445715.877486345050000m,
                            Quantity = 208,
                            Specification = "Kích thước: XS, M, L. Màu sắc: Xanh Navy, Đen"
                        },
                        new
                        {
                            Id = 37,
                            BrandId = 7,
                            BuyTurn = 184,
                            CategoryId = 5,
                            CreatedAt = new DateTime(2024, 12, 18, 6, 18, 59, 123, DateTimeKind.Utc).AddTicks(572),
                            Description = "Sản phẩm được làm từ Chất liệu Nhật Bản. Kiểu dáng thanh lịch. Phù hợp cho các dịp văn phòng",
                            Name = "Zara Quần Tây Cổ Điển",
                            OldPrice = 5831074.8753401248757156974645m,
                            Price = 4475685.105099391100000m,
                            Quantity = 155,
                            Specification = "Kích thước: L, XS, M. Màu sắc: Đen, Trắng"
                        },
                        new
                        {
                            Id = 38,
                            BrandId = 1,
                            BuyTurn = 144,
                            CategoryId = 4,
                            CreatedAt = new DateTime(2024, 12, 18, 6, 18, 59, 123, DateTimeKind.Utc).AddTicks(601),
                            Description = "Sản phẩm được làm từ Cotton cao cấp. Phù hợp nhiều dáng người. Phù hợp cho các dịp tiệc tùng",
                            Name = "Nike Áo Thun Thời Thượng",
                            OldPrice = 1880760.7976634794231791164604m,
                            Price = 1455114.712277972300000m,
                            Quantity = 198,
                            Specification = "Kích thước: XS, XXL, L. Màu sắc: Trắng, Xám"
                        },
                        new
                        {
                            Id = 39,
                            BrandId = 7,
                            BuyTurn = 60,
                            CategoryId = 1,
                            CreatedAt = new DateTime(2024, 12, 18, 6, 18, 59, 123, DateTimeKind.Utc).AddTicks(654),
                            Description = "Sản phẩm được làm từ Vải Organic. Phù hợp nhiều dáng người. Phù hợp cho các dịp dạo phố",
                            Name = "Adidas Quần Jean Hiện Đại",
                            OldPrice = 5733552.1154371912512341731563m,
                            Price = 4138285.34719304150000m,
                            Quantity = 151,
                            Specification = "Kích thước: XS, XL, M. Màu sắc: Đỏ, Xanh Navy"
                        },
                        new
                        {
                            Id = 40,
                            BrandId = 9,
                            BuyTurn = 47,
                            CategoryId = 4,
                            CreatedAt = new DateTime(2024, 12, 18, 6, 18, 59, 123, DateTimeKind.Utc).AddTicks(683),
                            Description = "Sản phẩm được làm từ Chất liệu Nhật Bản. Co giãn tốt. Phù hợp cho các dịp thể thao",
                            Name = "Nike Áo Len Thoải Mái",
                            OldPrice = 2811901.8308174613140978526553m,
                            Price = 2187528.988518844250000m,
                            Quantity = 220,
                            Specification = "Kích thước: M, XXL, L. Màu sắc: Đen, Trắng"
                        },
                        new
                        {
                            Id = 41,
                            BrandId = 5,
                            BuyTurn = 132,
                            CategoryId = 2,
                            CreatedAt = new DateTime(2024, 12, 18, 6, 18, 59, 123, DateTimeKind.Utc).AddTicks(712),
                            Description = "Sản phẩm được làm từ Chất liệu Nhật Bản. Kiểu dáng thanh lịch. Phù hợp cho các dịp tiệc tùng",
                            Name = "Uniqlo Áo Sơ Mi Thời Thượng",
                            OldPrice = 3704623.1714412360962196569835m,
                            Price = 3096616.983910436750000m,
                            Quantity = 233,
                            Specification = "Kích thước: S, XL, XS. Màu sắc: Xanh Navy, Đen"
                        },
                        new
                        {
                            Id = 42,
                            BrandId = 2,
                            BuyTurn = 25,
                            CategoryId = 1,
                            CreatedAt = new DateTime(2024, 12, 18, 6, 18, 59, 123, DateTimeKind.Utc).AddTicks(772),
                            Description = "Sản phẩm được làm từ Cotton cao cấp. Phù hợp nhiều dáng người. Phù hợp cho các dịp tiệc tùng",
                            Name = "Uniqlo Váy Liền Thoải Mái",
                            OldPrice = 5311513.3372223585285070832710m,
                            Price = 4774162.720856780300000m,
                            Quantity = 66,
                            Specification = "Kích thước: S, XS, XXL. Màu sắc: Xanh Navy, Trắng"
                        },
                        new
                        {
                            Id = 43,
                            BrandId = 9,
                            BuyTurn = 151,
                            CategoryId = 3,
                            CreatedAt = new DateTime(2024, 12, 18, 6, 18, 59, 123, DateTimeKind.Utc).AddTicks(804),
                            Description = "Sản phẩm được làm từ Chất liệu Nhật Bản. Phù hợp nhiều dáng người. Phù hợp cho các dịp văn phòng",
                            Name = "Zara Quần Jean Hiện Đại",
                            OldPrice = 3824734.5362640776000675190474m,
                            Price = 3015785.093957321900000m,
                            Quantity = 28,
                            Specification = "Kích thước: S, XL, L. Màu sắc: Đỏ, Xám"
                        },
                        new
                        {
                            Id = 44,
                            BrandId = 3,
                            BuyTurn = 31,
                            CategoryId = 1,
                            CreatedAt = new DateTime(2024, 12, 18, 6, 18, 59, 123, DateTimeKind.Utc).AddTicks(836),
                            Description = "Sản phẩm được làm từ Cotton cao cấp. Kiểu dáng thanh lịch. Phù hợp cho các dịp thể thao",
                            Name = "H&M Quần Short Trẻ Trung",
                            OldPrice = 1077387.0379273424771202689783m,
                            Price = 839666.647263480800000m,
                            Quantity = 79,
                            Specification = "Kích thước: XS, XXL, XL. Màu sắc: Xám, Hồng"
                        },
                        new
                        {
                            Id = 45,
                            BrandId = 7,
                            BuyTurn = 169,
                            CategoryId = 5,
                            CreatedAt = new DateTime(2024, 12, 18, 6, 18, 59, 123, DateTimeKind.Utc).AddTicks(865),
                            Description = "Sản phẩm được làm từ Vải Châu Âu. Thiết kế hiện đại. Phù hợp cho các dịp thể thao",
                            Name = "Gucci Blazer Thời Thượng",
                            OldPrice = 1536902.1324118470614669463923m,
                            Price = 1378547.014200503900000m,
                            Quantity = 370,
                            Specification = "Kích thước: XL, S, XS. Màu sắc: Trắng, Đỏ"
                        },
                        new
                        {
                            Id = 46,
                            BrandId = 10,
                            BuyTurn = 64,
                            CategoryId = 5,
                            CreatedAt = new DateTime(2024, 12, 18, 6, 18, 59, 123, DateTimeKind.Utc).AddTicks(918),
                            Description = "Sản phẩm được làm từ Vải Linen. Kiểu dáng thanh lịch. Phù hợp cho các dịp dạo phố",
                            Name = "Uniqlo Đầm Dạ Hội Năng Động",
                            OldPrice = 3148012.2321441220556057572616m,
                            Price = 2481545.549781080150000m,
                            Quantity = 233,
                            Specification = "Kích thước: XS, XXL, XL. Màu sắc: Trắng, Đen"
                        },
                        new
                        {
                            Id = 47,
                            BrandId = 3,
                            BuyTurn = 21,
                            CategoryId = 3,
                            CreatedAt = new DateTime(2024, 12, 18, 6, 18, 59, 123, DateTimeKind.Utc).AddTicks(948),
                            Description = "Sản phẩm được làm từ Cotton cao cấp. Kiểu dáng thanh lịch. Phù hợp cho các dịp văn phòng",
                            Name = "Uniqlo Áo Sơ Mi Hiện Đại",
                            OldPrice = 2588675.7757006647349764147446m,
                            Price = 1925088.036156113900000m,
                            Quantity = 305,
                            Specification = "Kích thước: L, M, XL. Màu sắc: Trắng, Xanh Navy"
                        },
                        new
                        {
                            Id = 48,
                            BrandId = 3,
                            BuyTurn = 142,
                            CategoryId = 3,
                            CreatedAt = new DateTime(2024, 12, 18, 6, 18, 59, 123, DateTimeKind.Utc).AddTicks(978),
                            Description = "Sản phẩm được làm từ Cotton cao cấp. Phù hợp nhiều dáng người. Phù hợp cho các dịp tiệc tùng",
                            Name = "Adidas Áo Thun Cổ Điển",
                            OldPrice = 4642878.8392645063781058147605m,
                            Price = 3521773.211724860900000m,
                            Quantity = 413,
                            Specification = "Kích thước: XS, L, XL. Màu sắc: Trắng, Xám"
                        },
                        new
                        {
                            Id = 49,
                            BrandId = 8,
                            BuyTurn = 40,
                            CategoryId = 1,
                            CreatedAt = new DateTime(2024, 12, 18, 6, 18, 59, 123, DateTimeKind.Utc).AddTicks(1007),
                            Description = "Sản phẩm được làm từ Vải Châu Âu. Co giãn tốt. Phù hợp cho các dịp tiệc tùng",
                            Name = "Adidas Quần Tây Cổ Điển",
                            OldPrice = 1448896.5166414356808985422260m,
                            Price = 1183675.021063668050000m,
                            Quantity = 313,
                            Specification = "Kích thước: M, L, S. Màu sắc: Trắng, Xanh Navy"
                        },
                        new
                        {
                            Id = 50,
                            BrandId = 1,
                            BuyTurn = 155,
                            CategoryId = 3,
                            CreatedAt = new DateTime(2024, 12, 18, 6, 18, 59, 123, DateTimeKind.Utc).AddTicks(1062),
                            Description = "Sản phẩm được làm từ Sợi Bamboo. Thiết kế hiện đại. Phù hợp cho các dịp tiệc tùng",
                            Name = "Louis Vuitton Quần Jogger Trẻ Trung",
                            OldPrice = 3671957.3516779766743074623233m,
                            Price = 3255333.272355572600000m,
                            Quantity = 483,
                            Specification = "Kích thước: XXL, S, L. Màu sắc: Trắng, Đỏ"
                        },
                        new
                        {
                            Id = 51,
                            BrandId = 6,
                            BuyTurn = 146,
                            CategoryId = 2,
                            CreatedAt = new DateTime(2024, 12, 18, 6, 18, 59, 123, DateTimeKind.Utc).AddTicks(1091),
                            Description = "Sản phẩm được làm từ Cotton cao cấp. Kiểu dáng thanh lịch. Phù hợp cho các dịp dạo phố",
                            Name = "Zara Quần Jean Thời Thượng",
                            OldPrice = 4759915.4513204863685960665212m,
                            Price = 3292051.332302924900000m,
                            Quantity = 488,
                            Specification = "Kích thước: L, S, XS. Màu sắc: Xanh Navy, Đen"
                        },
                        new
                        {
                            Id = 52,
                            BrandId = 5,
                            BuyTurn = 79,
                            CategoryId = 3,
                            CreatedAt = new DateTime(2024, 12, 18, 6, 18, 59, 123, DateTimeKind.Utc).AddTicks(1171),
                            Description = "Sản phẩm được làm từ Vải Organic. Thiết kế hiện đại. Phù hợp cho các dịp thể thao",
                            Name = "Uniqlo Quần Tây Thời Thượng",
                            OldPrice = 2600901.6094155629084901701942m,
                            Price = 2025406.442620816700000m,
                            Quantity = 248,
                            Specification = "Kích thước: S, L, XS. Màu sắc: Xanh Navy, Xám"
                        },
                        new
                        {
                            Id = 53,
                            BrandId = 3,
                            BuyTurn = 8,
                            CategoryId = 4,
                            CreatedAt = new DateTime(2024, 12, 18, 6, 18, 59, 123, DateTimeKind.Utc).AddTicks(1199),
                            Description = "Sản phẩm được làm từ Cotton cao cấp. Phù hợp nhiều dáng người. Phù hợp cho các dịp tiệc tùng",
                            Name = "H&M Áo Sơ Mi Trẻ Trung",
                            OldPrice = 3198291.7117276149030584644355m,
                            Price = 2629919.736451206050000m,
                            Quantity = 393,
                            Specification = "Kích thước: S, XXL, M. Màu sắc: Trắng, Hồng"
                        },
                        new
                        {
                            Id = 54,
                            BrandId = 2,
                            BuyTurn = 55,
                            CategoryId = 5,
                            CreatedAt = new DateTime(2024, 12, 18, 6, 18, 59, 123, DateTimeKind.Utc).AddTicks(1245),
                            Description = "Sản phẩm được làm từ Vải Linen. Thoáng mát. Phù hợp cho các dịp tiệc tùng",
                            Name = "Adidas Áo Thun Hiện Đại",
                            OldPrice = 3934552.5860997062321466157975m,
                            Price = 3080362.98848845100000m,
                            Quantity = 330,
                            Specification = "Kích thước: XXL, L, XS. Màu sắc: Xám, Trắng"
                        },
                        new
                        {
                            Id = 55,
                            BrandId = 1,
                            BuyTurn = 50,
                            CategoryId = 2,
                            CreatedAt = new DateTime(2024, 12, 18, 6, 18, 59, 123, DateTimeKind.Utc).AddTicks(1276),
                            Description = "Sản phẩm được làm từ Cotton cao cấp. Thoáng mát. Phù hợp cho các dịp thể thao",
                            Name = "Zara Áo Khoác Trẻ Trung",
                            OldPrice = 5553249.8555653112541840140910m,
                            Price = 4161773.655258986750000m,
                            Quantity = 217,
                            Specification = "Kích thước: XL, S, M. Màu sắc: Hồng, Trắng"
                        },
                        new
                        {
                            Id = 56,
                            BrandId = 5,
                            BuyTurn = 199,
                            CategoryId = 3,
                            CreatedAt = new DateTime(2024, 12, 18, 6, 18, 59, 123, DateTimeKind.Utc).AddTicks(1305),
                            Description = "Sản phẩm được làm từ Cotton cao cấp. Phù hợp nhiều dáng người. Phù hợp cho các dịp thể thao",
                            Name = "H&M Quần Jean Năng Động",
                            OldPrice = 173246.14636318761732611018566m,
                            Price = 147068.9313021606200000m,
                            Quantity = 298,
                            Specification = "Kích thước: XS, S, XL. Màu sắc: Hồng, Đỏ"
                        },
                        new
                        {
                            Id = 57,
                            BrandId = 8,
                            BuyTurn = 68,
                            CategoryId = 5,
                            CreatedAt = new DateTime(2024, 12, 18, 6, 18, 59, 123, DateTimeKind.Utc).AddTicks(1391),
                            Description = "Sản phẩm được làm từ Sợi Bamboo. Thiết kế hiện đại. Phù hợp cho các dịp thể thao",
                            Name = "H&M Áo Len Cổ Điển",
                            OldPrice = 3587928.7428717356548322205503m,
                            Price = 2708217.337063526150000m,
                            Quantity = 218,
                            Specification = "Kích thước: M, L, XXL. Màu sắc: Đen, Xanh Navy"
                        },
                        new
                        {
                            Id = 58,
                            BrandId = 6,
                            BuyTurn = 10,
                            CategoryId = 4,
                            CreatedAt = new DateTime(2024, 12, 18, 6, 18, 59, 123, DateTimeKind.Utc).AddTicks(1422),
                            Description = "Sản phẩm được làm từ Sợi Bamboo. Kiểu dáng thanh lịch. Phù hợp cho các dịp văn phòng",
                            Name = "Gucci Quần Jean Thời Thượng",
                            OldPrice = 217702.91789260275751665192835m,
                            Price = 189377.1443602704650000m,
                            Quantity = 264,
                            Specification = "Kích thước: XL, XS, S. Màu sắc: Trắng, Xám"
                        },
                        new
                        {
                            Id = 59,
                            BrandId = 8,
                            BuyTurn = 198,
                            CategoryId = 1,
                            CreatedAt = new DateTime(2024, 12, 18, 6, 18, 59, 123, DateTimeKind.Utc).AddTicks(1451),
                            Description = "Sản phẩm được làm từ Vải Châu Âu. Thiết kế hiện đại. Phù hợp cho các dịp dạo phố",
                            Name = "Chanel Quần Tây Thoải Mái",
                            OldPrice = 2402268.4771637240060981866781m,
                            Price = 1775075.152045907750000m,
                            Quantity = 268,
                            Specification = "Kích thước: L, XXL, S. Màu sắc: Xanh Navy, Đỏ"
                        },
                        new
                        {
                            Id = 60,
                            BrandId = 4,
                            BuyTurn = 197,
                            CategoryId = 2,
                            CreatedAt = new DateTime(2024, 12, 18, 6, 18, 59, 123, DateTimeKind.Utc).AddTicks(1479),
                            Description = "Sản phẩm được làm từ Vải Organic. Phù hợp nhiều dáng người. Phù hợp cho các dịp tiệc tùng",
                            Name = "Uniqlo Đầm Dạ Hội Cổ Điển",
                            OldPrice = 2971249.4310336003567427896970m,
                            Price = 2494205.30270092550000m,
                            Quantity = 311,
                            Specification = "Kích thước: XS, S, XL. Màu sắc: Đỏ, Trắng"
                        },
                        new
                        {
                            Id = 61,
                            BrandId = 2,
                            BuyTurn = 53,
                            CategoryId = 4,
                            CreatedAt = new DateTime(2024, 12, 18, 6, 18, 59, 123, DateTimeKind.Utc).AddTicks(1539),
                            Description = "Sản phẩm được làm từ Cotton cao cấp. Thiết kế hiện đại. Phù hợp cho các dịp tiệc tùng",
                            Name = "Louis Vuitton Quần Jean Năng Động",
                            OldPrice = 4019844.4766499036199937274612m,
                            Price = 2849383.236160925150000m,
                            Quantity = 422,
                            Specification = "Kích thước: M, XXL, XS. Màu sắc: Đỏ, Trắng"
                        },
                        new
                        {
                            Id = 62,
                            BrandId = 6,
                            BuyTurn = 68,
                            CategoryId = 4,
                            CreatedAt = new DateTime(2024, 12, 18, 6, 18, 59, 123, DateTimeKind.Utc).AddTicks(1568),
                            Description = "Sản phẩm được làm từ Vải Châu Âu. Kiểu dáng thanh lịch. Phù hợp cho các dịp văn phòng",
                            Name = "Gucci Áo Khoác Thời Thượng",
                            OldPrice = 1632393.5171736435020289069812m,
                            Price = 1297998.325797792800000m,
                            Quantity = 423,
                            Specification = "Kích thước: XS, M, XL. Màu sắc: Xanh Navy, Trắng"
                        },
                        new
                        {
                            Id = 63,
                            BrandId = 6,
                            BuyTurn = 150,
                            CategoryId = 5,
                            CreatedAt = new DateTime(2024, 12, 18, 6, 18, 59, 123, DateTimeKind.Utc).AddTicks(1597),
                            Description = "Sản phẩm được làm từ Cotton cao cấp. Thoáng mát. Phù hợp cho các dịp thể thao",
                            Name = "Adidas Quần Short Thời Thượng",
                            OldPrice = 2613111.2758828505823729066211m,
                            Price = 2332681.760659576100000m,
                            Quantity = 19,
                            Specification = "Kích thước: S, XS, XXL. Màu sắc: Xám, Đỏ"
                        },
                        new
                        {
                            Id = 64,
                            BrandId = 3,
                            BuyTurn = 141,
                            CategoryId = 1,
                            CreatedAt = new DateTime(2024, 12, 18, 6, 18, 59, 123, DateTimeKind.Utc).AddTicks(1627),
                            Description = "Sản phẩm được làm từ Vải Organic. Thoáng mát. Phù hợp cho các dịp văn phòng",
                            Name = "Uniqlo Áo Len Cổ Điển",
                            OldPrice = 4391232.6437120129752716805639m,
                            Price = 3252451.994970760400000m,
                            Quantity = 42,
                            Specification = "Kích thước: S, L, XL. Màu sắc: Đen, Xanh Navy"
                        },
                        new
                        {
                            Id = 65,
                            BrandId = 1,
                            BuyTurn = 169,
                            CategoryId = 1,
                            CreatedAt = new DateTime(2024, 12, 18, 6, 18, 59, 123, DateTimeKind.Utc).AddTicks(1681),
                            Description = "Sản phẩm được làm từ Chất liệu Nhật Bản. Co giãn tốt. Phù hợp cho các dịp văn phòng",
                            Name = "Adidas Áo Khoác Sang Trọng",
                            OldPrice = 5106403.6637934843960462441473m,
                            Price = 3903492.425615635550000m,
                            Quantity = 114,
                            Specification = "Kích thước: M, XS, XXL. Màu sắc: Xám, Đỏ"
                        },
                        new
                        {
                            Id = 66,
                            BrandId = 3,
                            BuyTurn = 133,
                            CategoryId = 1,
                            CreatedAt = new DateTime(2024, 12, 18, 6, 18, 59, 123, DateTimeKind.Utc).AddTicks(1711),
                            Description = "Sản phẩm được làm từ Vải Linen. Thiết kế hiện đại. Phù hợp cho các dịp tiệc tùng",
                            Name = "Adidas Đầm Dạ Hội Thời Thượng",
                            OldPrice = 247760.59366344006579102353015m,
                            Price = 172282.4284389035900000m,
                            Quantity = 164,
                            Specification = "Kích thước: L, XL, XXL. Màu sắc: Xám, Xanh Navy"
                        },
                        new
                        {
                            Id = 67,
                            BrandId = 2,
                            BuyTurn = 137,
                            CategoryId = 3,
                            CreatedAt = new DateTime(2024, 12, 18, 6, 18, 59, 123, DateTimeKind.Utc).AddTicks(1739),
                            Description = "Sản phẩm được làm từ Cotton cao cấp. Co giãn tốt. Phù hợp cho các dịp dạo phố",
                            Name = "Chanel Váy Liền Trẻ Trung",
                            OldPrice = 5350557.4662984913807139027055m,
                            Price = 4483128.23583218600000m,
                            Quantity = 119,
                            Specification = "Kích thước: L, XS, S. Màu sắc: Hồng, Xám"
                        },
                        new
                        {
                            Id = 68,
                            BrandId = 6,
                            BuyTurn = 200,
                            CategoryId = 2,
                            CreatedAt = new DateTime(2024, 12, 18, 6, 18, 59, 123, DateTimeKind.Utc).AddTicks(1788),
                            Description = "Sản phẩm được làm từ Vải Châu Âu. Phù hợp nhiều dáng người. Phù hợp cho các dịp thể thao",
                            Name = "Nike Áo Khoác Thoải Mái",
                            OldPrice = 4956118.6032803160666810110511m,
                            Price = 4363821.541504884200000m,
                            Quantity = 17,
                            Specification = "Kích thước: XL, XS, XXL. Màu sắc: Xanh Navy, Đỏ"
                        },
                        new
                        {
                            Id = 69,
                            BrandId = 10,
                            BuyTurn = 75,
                            CategoryId = 4,
                            CreatedAt = new DateTime(2024, 12, 18, 6, 18, 59, 123, DateTimeKind.Utc).AddTicks(1820),
                            Description = "Sản phẩm được làm từ Sợi Bamboo. Thoáng mát. Phù hợp cho các dịp thể thao",
                            Name = "Zara Áo Polo Hiện Đại",
                            OldPrice = 1348439.1549621707967711163925m,
                            Price = 1126662.8613035900000m,
                            Quantity = 433,
                            Specification = "Kích thước: XL, XXL, XS. Màu sắc: Đỏ, Hồng"
                        },
                        new
                        {
                            Id = 70,
                            BrandId = 9,
                            BuyTurn = 158,
                            CategoryId = 1,
                            CreatedAt = new DateTime(2024, 12, 18, 6, 18, 59, 123, DateTimeKind.Utc).AddTicks(1848),
                            Description = "Sản phẩm được làm từ Sợi Bamboo. Phù hợp nhiều dáng người. Phù hợp cho các dịp thể thao",
                            Name = "H&M Quần Tây Trẻ Trung",
                            OldPrice = 4513385.4387392284010109613636m,
                            Price = 3274359.329158518650000m,
                            Quantity = 384,
                            Specification = "Kích thước: L, XL, XS. Màu sắc: Hồng, Xanh Navy"
                        },
                        new
                        {
                            Id = 71,
                            BrandId = 8,
                            BuyTurn = 128,
                            CategoryId = 3,
                            CreatedAt = new DateTime(2024, 12, 18, 6, 18, 59, 123, DateTimeKind.Utc).AddTicks(1877),
                            Description = "Sản phẩm được làm từ Chất liệu Nhật Bản. Kiểu dáng thanh lịch. Phù hợp cho các dịp văn phòng",
                            Name = "Adidas Váy Liền Thoải Mái",
                            OldPrice = 5532306.7331466490402839502961m,
                            Price = 4520799.005405636750000m,
                            Quantity = 243,
                            Specification = "Kích thước: XL, S, L. Màu sắc: Xám, Xanh Navy"
                        },
                        new
                        {
                            Id = 72,
                            BrandId = 9,
                            BuyTurn = 94,
                            CategoryId = 4,
                            CreatedAt = new DateTime(2024, 12, 18, 6, 18, 59, 123, DateTimeKind.Utc).AddTicks(1946),
                            Description = "Sản phẩm được làm từ Vải Linen. Thiết kế hiện đại. Phù hợp cho các dịp thể thao",
                            Name = "Nike Áo Len Thời Thượng",
                            OldPrice = 4506426.6499392910842413709150m,
                            Price = 3221212.12725846650000m,
                            Quantity = 48,
                            Specification = "Kích thước: S, XL, L. Màu sắc: Xám, Hồng"
                        },
                        new
                        {
                            Id = 73,
                            BrandId = 9,
                            BuyTurn = 148,
                            CategoryId = 5,
                            CreatedAt = new DateTime(2024, 12, 18, 6, 18, 59, 123, DateTimeKind.Utc).AddTicks(1974),
                            Description = "Sản phẩm được làm từ Sợi Bamboo. Thoáng mát. Phù hợp cho các dịp tiệc tùng",
                            Name = "Gucci Quần Jogger Thoải Mái",
                            OldPrice = 3466758.7449241053956435747513m,
                            Price = 2971570.50339217250000m,
                            Quantity = 199,
                            Specification = "Kích thước: XL, XXL, M. Màu sắc: Trắng, Xám"
                        },
                        new
                        {
                            Id = 74,
                            BrandId = 9,
                            BuyTurn = 99,
                            CategoryId = 3,
                            CreatedAt = new DateTime(2024, 12, 18, 6, 18, 59, 123, DateTimeKind.Utc).AddTicks(2002),
                            Description = "Sản phẩm được làm từ Chất liệu Nhật Bản. Co giãn tốt. Phù hợp cho các dịp tiệc tùng",
                            Name = "H&M Quần Short Thời Thượng",
                            OldPrice = 2616247.5213720099336483274765m,
                            Price = 2222247.440739264350000m,
                            Quantity = 464,
                            Specification = "Kích thước: XL, S, L. Màu sắc: Hồng, Đen"
                        },
                        new
                        {
                            Id = 75,
                            BrandId = 2,
                            BuyTurn = 143,
                            CategoryId = 4,
                            CreatedAt = new DateTime(2024, 12, 18, 6, 18, 59, 123, DateTimeKind.Utc).AddTicks(2030),
                            Description = "Sản phẩm được làm từ Vải Organic. Thiết kế hiện đại. Phù hợp cho các dịp thể thao",
                            Name = "Zara Váy Liền Thời Thượng",
                            OldPrice = 744811.80540022378024760266936m,
                            Price = 548007.351855104300000m,
                            Quantity = 128,
                            Specification = "Kích thước: XL, XS, S. Màu sắc: Xám, Xanh Navy"
                        },
                        new
                        {
                            Id = 76,
                            BrandId = 1,
                            BuyTurn = 174,
                            CategoryId = 4,
                            CreatedAt = new DateTime(2024, 12, 18, 6, 18, 59, 123, DateTimeKind.Utc).AddTicks(2084),
                            Description = "Sản phẩm được làm từ Vải Linen. Phù hợp nhiều dáng người. Phù hợp cho các dịp tiệc tùng",
                            Name = "H&M Áo Sơ Mi Cổ Điển",
                            OldPrice = 1793058.7309136291558929799063m,
                            Price = 1331399.273951147450000m,
                            Quantity = 452,
                            Specification = "Kích thước: XL, L, S. Màu sắc: Trắng, Xanh Navy"
                        },
                        new
                        {
                            Id = 77,
                            BrandId = 9,
                            BuyTurn = 148,
                            CategoryId = 5,
                            CreatedAt = new DateTime(2024, 12, 18, 6, 18, 59, 123, DateTimeKind.Utc).AddTicks(2111),
                            Description = "Sản phẩm được làm từ Cotton cao cấp. Phù hợp nhiều dáng người. Phù hợp cho các dịp dạo phố",
                            Name = "Nike Váy Liền Trẻ Trung",
                            OldPrice = 5560728.7996360893911073312608m,
                            Price = 4323556.192602384050000m,
                            Quantity = 62,
                            Specification = "Kích thước: M, XL, S. Màu sắc: Xám, Đen"
                        },
                        new
                        {
                            Id = 78,
                            BrandId = 3,
                            BuyTurn = 144,
                            CategoryId = 4,
                            CreatedAt = new DateTime(2024, 12, 18, 6, 18, 59, 123, DateTimeKind.Utc).AddTicks(2139),
                            Description = "Sản phẩm được làm từ Vải Organic. Co giãn tốt. Phù hợp cho các dịp tiệc tùng",
                            Name = "Nike Áo Len Sang Trọng",
                            OldPrice = 3199112.2808103106858678906750m,
                            Price = 2634273.604377741650000m,
                            Quantity = 251,
                            Specification = "Kích thước: M, XS, S. Màu sắc: Đỏ, Hồng"
                        },
                        new
                        {
                            Id = 79,
                            BrandId = 5,
                            BuyTurn = 119,
                            CategoryId = 5,
                            CreatedAt = new DateTime(2024, 12, 18, 6, 18, 59, 123, DateTimeKind.Utc).AddTicks(2189),
                            Description = "Sản phẩm được làm từ Chất liệu Nhật Bản. Co giãn tốt. Phù hợp cho các dịp tiệc tùng",
                            Name = "Zara Áo Len Thời Thượng",
                            OldPrice = 3274404.3416525308374016700396m,
                            Price = 2475271.076312796800000m,
                            Quantity = 200,
                            Specification = "Kích thước: S, M, L. Màu sắc: Xanh Navy, Trắng"
                        },
                        new
                        {
                            Id = 80,
                            BrandId = 9,
                            BuyTurn = 189,
                            CategoryId = 1,
                            CreatedAt = new DateTime(2024, 12, 18, 6, 18, 59, 123, DateTimeKind.Utc).AddTicks(2218),
                            Description = "Sản phẩm được làm từ Chất liệu Nhật Bản. Co giãn tốt. Phù hợp cho các dịp dạo phố",
                            Name = "Uniqlo Áo Sơ Mi Thời Thượng",
                            OldPrice = 1136460.5126458010058635299772m,
                            Price = 854341.534816333250000m,
                            Quantity = 225,
                            Specification = "Kích thước: XXL, XL, S. Màu sắc: Đen, Xám"
                        },
                        new
                        {
                            Id = 81,
                            BrandId = 1,
                            BuyTurn = 13,
                            CategoryId = 4,
                            CreatedAt = new DateTime(2024, 12, 18, 6, 18, 59, 123, DateTimeKind.Utc).AddTicks(2248),
                            Description = "Sản phẩm được làm từ Vải Linen. Kiểu dáng thanh lịch. Phù hợp cho các dịp dạo phố",
                            Name = "Nike Quần Jogger Thời Thượng",
                            OldPrice = 6508908.9314873154309964810387m,
                            Price = 4367418.647179233200000m,
                            Quantity = 305,
                            Specification = "Kích thước: XL, S, XS. Màu sắc: Xanh Navy, Hồng"
                        },
                        new
                        {
                            Id = 82,
                            BrandId = 5,
                            BuyTurn = 16,
                            CategoryId = 2,
                            CreatedAt = new DateTime(2024, 12, 18, 6, 18, 59, 123, DateTimeKind.Utc).AddTicks(2276),
                            Description = "Sản phẩm được làm từ Vải Linen. Thoáng mát. Phù hợp cho các dịp dạo phố",
                            Name = "Louis Vuitton Áo Len Cổ Điển",
                            OldPrice = 3223087.3474514588214679438988m,
                            Price = 2468902.735520570750000m,
                            Quantity = 334,
                            Specification = "Kích thước: L, XL, M. Màu sắc: Xanh Navy, Đỏ"
                        },
                        new
                        {
                            Id = 83,
                            BrandId = 3,
                            BuyTurn = 129,
                            CategoryId = 5,
                            CreatedAt = new DateTime(2024, 12, 18, 6, 18, 59, 123, DateTimeKind.Utc).AddTicks(2320),
                            Description = "Sản phẩm được làm từ Vải Organic. Kiểu dáng thanh lịch. Phù hợp cho các dịp tiệc tùng",
                            Name = "H&M Quần Jean Trẻ Trung",
                            OldPrice = 6585912.5306576255303480886159m,
                            Price = 4884632.685717454400000m,
                            Quantity = 337,
                            Specification = "Kích thước: XXL, XL, XS. Màu sắc: Hồng, Xanh Navy"
                        },
                        new
                        {
                            Id = 84,
                            BrandId = 5,
                            BuyTurn = 192,
                            CategoryId = 4,
                            CreatedAt = new DateTime(2024, 12, 18, 6, 18, 59, 123, DateTimeKind.Utc).AddTicks(2349),
                            Description = "Sản phẩm được làm từ Sợi Bamboo. Phù hợp nhiều dáng người. Phù hợp cho các dịp văn phòng",
                            Name = "Uniqlo Đầm Dạ Hội Thoải Mái",
                            OldPrice = 397935.75600127247589046311973m,
                            Price = 299363.198713445300000m,
                            Quantity = 259,
                            Specification = "Kích thước: XS, S, XL. Màu sắc: Đỏ, Đen"
                        },
                        new
                        {
                            Id = 85,
                            BrandId = 7,
                            BuyTurn = 50,
                            CategoryId = 4,
                            CreatedAt = new DateTime(2024, 12, 18, 6, 18, 59, 123, DateTimeKind.Utc).AddTicks(2378),
                            Description = "Sản phẩm được làm từ Vải Organic. Thoáng mát. Phù hợp cho các dịp tiệc tùng",
                            Name = "H&M Váy Liền Thoải Mái",
                            OldPrice = 2380086.1610820003807785305138m,
                            Price = 1682456.979099164900000m,
                            Quantity = 290,
                            Specification = "Kích thước: XXL, XS, S. Màu sắc: Trắng, Hồng"
                        },
                        new
                        {
                            Id = 86,
                            BrandId = 3,
                            BuyTurn = 113,
                            CategoryId = 2,
                            CreatedAt = new DateTime(2024, 12, 18, 6, 18, 59, 123, DateTimeKind.Utc).AddTicks(2407),
                            Description = "Sản phẩm được làm từ Vải Châu Âu. Thoáng mát. Phù hợp cho các dịp văn phòng",
                            Name = "Uniqlo Váy Liền Thoải Mái",
                            OldPrice = 514584.58232977783135409972443m,
                            Price = 344911.6758176827700000m,
                            Quantity = 318,
                            Specification = "Kích thước: M, XS, L. Màu sắc: Xám, Xanh Navy"
                        },
                        new
                        {
                            Id = 87,
                            BrandId = 4,
                            BuyTurn = 52,
                            CategoryId = 5,
                            CreatedAt = new DateTime(2024, 12, 18, 6, 18, 59, 123, DateTimeKind.Utc).AddTicks(2469),
                            Description = "Sản phẩm được làm từ Sợi Bamboo. Kiểu dáng thanh lịch. Phù hợp cho các dịp thể thao",
                            Name = "Adidas Áo Sơ Mi Sang Trọng",
                            OldPrice = 1418246.6050759583578779005682m,
                            Price = 1003201.877020622900000m,
                            Quantity = 490,
                            Specification = "Kích thước: S, XXL, L. Màu sắc: Xám, Đỏ"
                        },
                        new
                        {
                            Id = 88,
                            BrandId = 1,
                            BuyTurn = 161,
                            CategoryId = 1,
                            CreatedAt = new DateTime(2024, 12, 18, 6, 18, 59, 123, DateTimeKind.Utc).AddTicks(2497),
                            Description = "Sản phẩm được làm từ Chất liệu Nhật Bản. Thoáng mát. Phù hợp cho các dịp thể thao",
                            Name = "Zara Áo Thun Hiện Đại",
                            OldPrice = 4246444.1780949009835198223772m,
                            Price = 3077702.862308276900000m,
                            Quantity = 466,
                            Specification = "Kích thước: XXL, M, S. Màu sắc: Xanh Navy, Trắng"
                        },
                        new
                        {
                            Id = 89,
                            BrandId = 2,
                            BuyTurn = 106,
                            CategoryId = 5,
                            CreatedAt = new DateTime(2024, 12, 18, 6, 18, 59, 123, DateTimeKind.Utc).AddTicks(2528),
                            Description = "Sản phẩm được làm từ Vải Châu Âu. Thoáng mát. Phù hợp cho các dịp dạo phố",
                            Name = "Nike Áo Thun Cổ Điển",
                            OldPrice = 1176923.3033969270565118819541m,
                            Price = 914561.604836263400000m,
                            Quantity = 339,
                            Specification = "Kích thước: L, XXL, S. Màu sắc: Xám, Trắng"
                        },
                        new
                        {
                            Id = 90,
                            BrandId = 6,
                            BuyTurn = 180,
                            CategoryId = 1,
                            CreatedAt = new DateTime(2024, 12, 18, 6, 18, 59, 123, DateTimeKind.Utc).AddTicks(2555),
                            Description = "Sản phẩm được làm từ Cotton cao cấp. Thiết kế hiện đại. Phù hợp cho các dịp thể thao",
                            Name = "Gucci Quần Tây Cổ Điển",
                            OldPrice = 3034451.2059806465690311138518m,
                            Price = 2507770.91215470650000m,
                            Quantity = 270,
                            Specification = "Kích thước: XXL, S, XS. Màu sắc: Đỏ, Hồng"
                        },
                        new
                        {
                            Id = 91,
                            BrandId = 8,
                            BuyTurn = 120,
                            CategoryId = 3,
                            CreatedAt = new DateTime(2024, 12, 18, 6, 18, 59, 123, DateTimeKind.Utc).AddTicks(2616),
                            Description = "Sản phẩm được làm từ Vải Châu Âu. Phù hợp nhiều dáng người. Phù hợp cho các dịp dạo phố",
                            Name = "Chanel Quần Tây Hiện Đại",
                            OldPrice = 2929173.5818644111852539209801m,
                            Price = 2615375.914559046050000m,
                            Quantity = 433,
                            Specification = "Kích thước: M, S, XL. Màu sắc: Xanh Navy, Đỏ"
                        },
                        new
                        {
                            Id = 92,
                            BrandId = 8,
                            BuyTurn = 55,
                            CategoryId = 2,
                            CreatedAt = new DateTime(2024, 12, 18, 6, 18, 59, 123, DateTimeKind.Utc).AddTicks(2645),
                            Description = "Sản phẩm được làm từ Cotton cao cấp. Phù hợp nhiều dáng người. Phù hợp cho các dịp văn phòng",
                            Name = "Uniqlo Áo Sơ Mi Sang Trọng",
                            OldPrice = 3821743.2949301632659270101612m,
                            Price = 3166230.169395013550000m,
                            Quantity = 433,
                            Specification = "Kích thước: XL, S, L. Màu sắc: Đỏ, Hồng"
                        },
                        new
                        {
                            Id = 93,
                            BrandId = 7,
                            BuyTurn = 16,
                            CategoryId = 3,
                            CreatedAt = new DateTime(2024, 12, 18, 6, 18, 59, 123, DateTimeKind.Utc).AddTicks(2674),
                            Description = "Sản phẩm được làm từ Vải Châu Âu. Phù hợp nhiều dáng người. Phù hợp cho các dịp thể thao",
                            Name = "Zara Quần Jean Cổ Điển",
                            OldPrice = 469732.45065358448496394601267m,
                            Price = 321948.6674264917700000m,
                            Quantity = 46,
                            Specification = "Kích thước: XL, M, S. Màu sắc: Hồng, Đỏ"
                        },
                        new
                        {
                            Id = 94,
                            BrandId = 2,
                            BuyTurn = 139,
                            CategoryId = 5,
                            CreatedAt = new DateTime(2024, 12, 18, 6, 18, 59, 123, DateTimeKind.Utc).AddTicks(2738),
                            Description = "Sản phẩm được làm từ Vải Châu Âu. Thoáng mát. Phù hợp cho các dịp tiệc tùng",
                            Name = "Louis Vuitton Đầm Dạ Hội Cổ Điển",
                            OldPrice = 4935408.2459099103244608434724m,
                            Price = 4448841.464216086250000m,
                            Quantity = 251,
                            Specification = "Kích thước: XL, XXL, XS. Màu sắc: Xám, Xanh Navy"
                        },
                        new
                        {
                            Id = 95,
                            BrandId = 6,
                            BuyTurn = 60,
                            CategoryId = 1,
                            CreatedAt = new DateTime(2024, 12, 18, 6, 18, 59, 123, DateTimeKind.Utc).AddTicks(2769),
                            Description = "Sản phẩm được làm từ Vải Linen. Thiết kế hiện đại. Phù hợp cho các dịp thể thao",
                            Name = "H&M Quần Short Thoải Mái",
                            OldPrice = 1585697.2146472674091679687285m,
                            Price = 1207869.515645849600000m,
                            Quantity = 465,
                            Specification = "Kích thước: M, L, XXL. Màu sắc: Xanh Navy, Đỏ"
                        },
                        new
                        {
                            Id = 96,
                            BrandId = 3,
                            BuyTurn = 172,
                            CategoryId = 2,
                            CreatedAt = new DateTime(2024, 12, 18, 6, 18, 59, 123, DateTimeKind.Utc).AddTicks(2799),
                            Description = "Sản phẩm được làm từ Chất liệu Nhật Bản. Co giãn tốt. Phù hợp cho các dịp dạo phố",
                            Name = "Gucci Đầm Dạ Hội Hiện Đại",
                            OldPrice = 579027.59638569603217848694171m,
                            Price = 404619.6300112979150000m,
                            Quantity = 195,
                            Specification = "Kích thước: XS, M, XXL. Màu sắc: Hồng, Đỏ"
                        },
                        new
                        {
                            Id = 97,
                            BrandId = 7,
                            BuyTurn = 10,
                            CategoryId = 2,
                            CreatedAt = new DateTime(2024, 12, 18, 6, 18, 59, 123, DateTimeKind.Utc).AddTicks(2827),
                            Description = "Sản phẩm được làm từ Vải Linen. Thiết kế hiện đại. Phù hợp cho các dịp dạo phố",
                            Name = "Chanel Quần Jean Hiện Đại",
                            OldPrice = 4307049.9263870509418823225505m,
                            Price = 3063885.014538478850000m,
                            Quantity = 143,
                            Specification = "Kích thước: XL, XXL, S. Màu sắc: Đỏ, Xanh Navy"
                        },
                        new
                        {
                            Id = 98,
                            BrandId = 5,
                            BuyTurn = 110,
                            CategoryId = 5,
                            CreatedAt = new DateTime(2024, 12, 18, 6, 18, 59, 123, DateTimeKind.Utc).AddTicks(2882),
                            Description = "Sản phẩm được làm từ Sợi Bamboo. Phù hợp nhiều dáng người. Phù hợp cho các dịp thể thao",
                            Name = "Chanel Blazer Thời Thượng",
                            OldPrice = 2365458.7725158041768120320492m,
                            Price = 1920154.007363645300000m,
                            Quantity = 421,
                            Specification = "Kích thước: M, XXL, XL. Màu sắc: Đen, Xanh Navy"
                        },
                        new
                        {
                            Id = 99,
                            BrandId = 5,
                            BuyTurn = 128,
                            CategoryId = 2,
                            CreatedAt = new DateTime(2024, 12, 18, 6, 18, 59, 123, DateTimeKind.Utc).AddTicks(2912),
                            Description = "Sản phẩm được làm từ Vải Linen. Kiểu dáng thanh lịch. Phù hợp cho các dịp văn phòng",
                            Name = "Zara Quần Tây Năng Động",
                            OldPrice = 3865388.2842552170077260497478m,
                            Price = 3021384.428027148650000m,
                            Quantity = 384,
                            Specification = "Kích thước: L, XXL, M. Màu sắc: Đỏ, Xanh Navy"
                        },
                        new
                        {
                            Id = 100,
                            BrandId = 2,
                            BuyTurn = 175,
                            CategoryId = 2,
                            CreatedAt = new DateTime(2024, 12, 18, 6, 18, 59, 123, DateTimeKind.Utc).AddTicks(2941),
                            Description = "Sản phẩm được làm từ Cotton cao cấp. Co giãn tốt. Phù hợp cho các dịp thể thao",
                            Name = "Chanel Áo Khoác Thoải Mái",
                            OldPrice = 2102819.9211532238074312885449m,
                            Price = 1526987.986685251700000m,
                            Quantity = 14,
                            Specification = "Kích thước: S, M, XS. Màu sắc: Trắng, Đỏ"
                        });
                });

            modelBuilder.Entity("ManboShopAPI.Domain.Entities.ProductImage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductImages");
                });

            modelBuilder.Entity("ManboShopAPI.Domain.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .HasMaxLength(300)
                        .HasColumnType("nvarchar(300)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("LastName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("ProfilePictureUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RefreshToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("RefreshTokenExpiryTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AccessFailedCount = 0,
                            Address = "3998 Cummings Parkways, Cassinstad, Singapore",
                            ConcurrencyStamp = "d321a8af-ecbd-4200-986d-79f2a3ab5bbb",
                            CreatedAt = new DateTime(2024, 6, 22, 6, 18, 59, 147, DateTimeKind.Utc).AddTicks(4185),
                            Email = "Miles.Schmeler26@yahoo.com",
                            EmailConfirmed = true,
                            FirstName = "Miles",
                            LastName = "Schmeler",
                            LockoutEnabled = false,
                            NormalizedEmail = "MILES.SCHMELER26@YAHOO.COM",
                            NormalizedUserName = "MILES.SCHMELER",
                            PasswordHash = "AQAAAAIAAYagAAAAEPXYAIQyXtZG92u/P3xl8xoUoTt0RQ7eFk2Rg1SidQG1WLjzrmpRXjYsPCUK3Ag6sw==",
                            PhoneNumber = "761-878-9654",
                            PhoneNumberConfirmed = true,
                            ProfilePictureUrl = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/580.jpg",
                            TwoFactorEnabled = false,
                            UserName = "Miles.Schmeler"
                        },
                        new
                        {
                            Id = 2,
                            AccessFailedCount = 0,
                            Address = "47930 Morissette Forks, Trantowhaven, Andorra",
                            ConcurrencyStamp = "8873e9de-3716-4c5c-99c1-43775cfd0308",
                            CreatedAt = new DateTime(2024, 5, 2, 6, 18, 59, 148, DateTimeKind.Utc).AddTicks(5079),
                            Email = "Mckenzie0@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "Mckenzie",
                            LastName = "Senger",
                            LockoutEnabled = false,
                            NormalizedEmail = "MCKENZIE0@GMAIL.COM",
                            NormalizedUserName = "MCKENZIE40",
                            PasswordHash = "AQAAAAIAAYagAAAAELBQAzXacGn/qDpykixkCT53ALTOcEl7sBCu+RW5xGGNK01b29kjoBi0xWC4SDPzGw==",
                            PhoneNumber = "747-855-9028",
                            PhoneNumberConfirmed = true,
                            ProfilePictureUrl = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/497.jpg",
                            TwoFactorEnabled = false,
                            UserName = "Mckenzie40"
                        },
                        new
                        {
                            Id = 3,
                            AccessFailedCount = 0,
                            Address = "830 Carleton Row, North Nina, Australia",
                            ConcurrencyStamp = "932ac614-cda9-4927-aefb-cae77cd16228",
                            CreatedAt = new DateTime(2024, 2, 23, 6, 18, 59, 148, DateTimeKind.Utc).AddTicks(5590),
                            Email = "Ernesto_Sanford@hotmail.com",
                            EmailConfirmed = true,
                            FirstName = "Ernesto",
                            LastName = "Sanford",
                            LockoutEnabled = false,
                            NormalizedEmail = "ERNESTO_SANFORD@HOTMAIL.COM",
                            NormalizedUserName = "ERNESTO.SANFORD",
                            PasswordHash = "AQAAAAIAAYagAAAAEBrRRymdMVO+G3zHhxAblxttRdjVYQDS6BFgnFhSdBG5Kv0HbQxAM8Pm10i+oKWCxQ==",
                            PhoneNumber = "941-093-9695",
                            PhoneNumberConfirmed = true,
                            ProfilePictureUrl = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/1181.jpg",
                            TwoFactorEnabled = false,
                            UserName = "Ernesto.Sanford"
                        },
                        new
                        {
                            Id = 4,
                            AccessFailedCount = 0,
                            Address = "49722 Paul Plaza, Emmerichbury, New Zealand",
                            ConcurrencyStamp = "9172ba19-6040-4158-a5d6-c9a7b6dfc68f",
                            CreatedAt = new DateTime(2024, 6, 2, 6, 18, 59, 148, DateTimeKind.Utc).AddTicks(5827),
                            Email = "Shanny_Wisoky31@hotmail.com",
                            EmailConfirmed = true,
                            FirstName = "Shanny",
                            LastName = "Wisoky",
                            LockoutEnabled = false,
                            NormalizedEmail = "SHANNY_WISOKY31@HOTMAIL.COM",
                            NormalizedUserName = "SHANNY.WISOKY5",
                            PasswordHash = "AQAAAAIAAYagAAAAEDQ9KK8nhW+j7rWQ9C1YhpSRMzwfE6LC85/1g8QXv2Iof+8uu5kuEO/Ou88nN+vuKw==",
                            PhoneNumber = "060-309-8220",
                            PhoneNumberConfirmed = true,
                            ProfilePictureUrl = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/371.jpg",
                            TwoFactorEnabled = false,
                            UserName = "Shanny.Wisoky5"
                        },
                        new
                        {
                            Id = 5,
                            AccessFailedCount = 0,
                            Address = "8436 Pouros Well, Port Domenickside, Australia",
                            ConcurrencyStamp = "8fa115b2-895e-4e66-a7ae-b1417c22d3db",
                            CreatedAt = new DateTime(2024, 8, 11, 6, 18, 59, 149, DateTimeKind.Utc).AddTicks(1372),
                            Email = "Brandyn_OConner@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "Brandyn",
                            LastName = "O'Conner",
                            LockoutEnabled = false,
                            NormalizedEmail = "BRANDYN_OCONNER@GMAIL.COM",
                            NormalizedUserName = "BRANDYN.OCONNER",
                            PasswordHash = "AQAAAAIAAYagAAAAEOOJfkcgQ8WhzSAK4DVQ9nGCi4c3KgMXyFS/b9GvTkZPTVOc0Q8fV6qhPwnfAwnJpA==",
                            PhoneNumber = "443-016-3549",
                            PhoneNumberConfirmed = true,
                            ProfilePictureUrl = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/771.jpg",
                            TwoFactorEnabled = false,
                            UserName = "Brandyn.OConner"
                        },
                        new
                        {
                            Id = 6,
                            AccessFailedCount = 0,
                            Address = "9241 Allen Roads, South Ernestinaberg, France",
                            ConcurrencyStamp = "2ec814a2-908e-4028-b415-fa42dce672d5",
                            CreatedAt = new DateTime(2024, 9, 14, 6, 18, 59, 149, DateTimeKind.Utc).AddTicks(1659),
                            Email = "Claire_Bergstrom@hotmail.com",
                            EmailConfirmed = true,
                            FirstName = "Claire",
                            LastName = "Bergstrom",
                            LockoutEnabled = false,
                            NormalizedEmail = "CLAIRE_BERGSTROM@HOTMAIL.COM",
                            NormalizedUserName = "CLAIRE_BERGSTROM",
                            PasswordHash = "AQAAAAIAAYagAAAAEO/9/D/mLEBl5KK0hL6fUb/XQt3c0GwpxK8+rUKi0fuEoi2S6syyS3qEe4V4601iGg==",
                            PhoneNumber = "350-538-5968",
                            PhoneNumberConfirmed = true,
                            ProfilePictureUrl = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/485.jpg",
                            TwoFactorEnabled = false,
                            UserName = "Claire_Bergstrom"
                        },
                        new
                        {
                            Id = 7,
                            AccessFailedCount = 0,
                            Address = "92763 Heller Plain, Ladariusberg, Sweden",
                            ConcurrencyStamp = "a94e4dd6-42d8-4ff4-8a60-a85ae404b2a7",
                            CreatedAt = new DateTime(2024, 6, 23, 6, 18, 59, 149, DateTimeKind.Utc).AddTicks(1906),
                            Email = "Colin.Cormier@yahoo.com",
                            EmailConfirmed = true,
                            FirstName = "Colin",
                            LastName = "Cormier",
                            LockoutEnabled = false,
                            NormalizedEmail = "COLIN.CORMIER@YAHOO.COM",
                            NormalizedUserName = "COLIN66",
                            PasswordHash = "AQAAAAIAAYagAAAAEB2fF8NqQiBEooq3fZAUvlfZv+ZyllVqBE4JZmHQJcbxac6zjJjbQ+N97qAhAn9pMA==",
                            PhoneNumber = "553-361-2423",
                            PhoneNumberConfirmed = true,
                            ProfilePictureUrl = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/1019.jpg",
                            TwoFactorEnabled = false,
                            UserName = "Colin66"
                        },
                        new
                        {
                            Id = 8,
                            AccessFailedCount = 0,
                            Address = "52634 Bernadine Brook, Towneshire, Jordan",
                            ConcurrencyStamp = "53558af4-e10c-4e63-8c76-680744b225f3",
                            CreatedAt = new DateTime(2024, 11, 5, 6, 18, 59, 149, DateTimeKind.Utc).AddTicks(3156),
                            Email = "Vivienne_Hirthe93@hotmail.com",
                            EmailConfirmed = true,
                            FirstName = "Vivienne",
                            LastName = "Hirthe",
                            LockoutEnabled = false,
                            NormalizedEmail = "VIVIENNE_HIRTHE93@HOTMAIL.COM",
                            NormalizedUserName = "VIVIENNE_HIRTHE",
                            PasswordHash = "AQAAAAIAAYagAAAAEOrRqWj7w8VvjLfNlWvdoOgt2dNY0RlbmracA4HoUPHfcvmUloWlrD7knK5LEjLTtw==",
                            PhoneNumber = "472-104-9726",
                            PhoneNumberConfirmed = true,
                            ProfilePictureUrl = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/340.jpg",
                            TwoFactorEnabled = false,
                            UserName = "Vivienne_Hirthe"
                        },
                        new
                        {
                            Id = 9,
                            AccessFailedCount = 0,
                            Address = "6585 Darrel Terrace, Lake Mauricefurt, Bosnia and Herzegovina",
                            ConcurrencyStamp = "b8a655e0-a1c4-48c9-b472-50f91b5d585d",
                            CreatedAt = new DateTime(2024, 8, 5, 6, 18, 59, 149, DateTimeKind.Utc).AddTicks(3482),
                            Email = "Winston23@yahoo.com",
                            EmailConfirmed = true,
                            FirstName = "Winston",
                            LastName = "Powlowski",
                            LockoutEnabled = false,
                            NormalizedEmail = "WINSTON23@YAHOO.COM",
                            NormalizedUserName = "WINSTON.POWLOWSKI",
                            PasswordHash = "AQAAAAIAAYagAAAAEKg5lSkEKqEZocdXNwkiV3NVcQQ40bdvWv3biyYgrEnp+gq5BDOMPVGM1vx/QCUjMg==",
                            PhoneNumber = "402-589-1727",
                            PhoneNumberConfirmed = true,
                            ProfilePictureUrl = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/533.jpg",
                            TwoFactorEnabled = false,
                            UserName = "Winston.Powlowski"
                        },
                        new
                        {
                            Id = 10,
                            AccessFailedCount = 0,
                            Address = "0524 Dean Brook, Lake Mohammedshire, Thailand",
                            ConcurrencyStamp = "27ac242d-fc65-426e-99cf-e22d51e05b42",
                            CreatedAt = new DateTime(2024, 4, 17, 6, 18, 59, 149, DateTimeKind.Utc).AddTicks(3683),
                            Email = "Roel_Weber20@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "Roel",
                            LastName = "Weber",
                            LockoutEnabled = false,
                            NormalizedEmail = "ROEL_WEBER20@GMAIL.COM",
                            NormalizedUserName = "ROEL.WEBER",
                            PasswordHash = "AQAAAAIAAYagAAAAELHlwVVlbphIoRfyOz9NhvlbPKknTkGKFdemFJzgfqHqrnism3W1sJNz9befkjQrIQ==",
                            PhoneNumber = "205-895-1210",
                            PhoneNumberConfirmed = true,
                            ProfilePictureUrl = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/418.jpg",
                            TwoFactorEnabled = false,
                            UserName = "Roel.Weber"
                        },
                        new
                        {
                            Id = 11,
                            AccessFailedCount = 0,
                            Address = "23262 Auer Estates, Lake Emiltown, Russian Federation",
                            ConcurrencyStamp = "0da9b554-cc0d-4ec6-99d9-6893f1ad71d7",
                            CreatedAt = new DateTime(2024, 10, 7, 6, 18, 59, 149, DateTimeKind.Utc).AddTicks(3914),
                            Email = "Asia.Larkin@hotmail.com",
                            EmailConfirmed = true,
                            FirstName = "Asia",
                            LastName = "Larkin",
                            LockoutEnabled = false,
                            NormalizedEmail = "ASIA.LARKIN@HOTMAIL.COM",
                            NormalizedUserName = "ASIA78",
                            PasswordHash = "AQAAAAIAAYagAAAAECCF6/BnlZaxZOTSpcEshVD8sD+IhefjOTQRgTT4ig78sryAB4Q2JQdi0noq6sFsuQ==",
                            PhoneNumber = "873-123-9700",
                            PhoneNumberConfirmed = true,
                            ProfilePictureUrl = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/554.jpg",
                            TwoFactorEnabled = false,
                            UserName = "Asia78"
                        },
                        new
                        {
                            Id = 12,
                            AccessFailedCount = 0,
                            Address = "0612 Lucienne Plain, Port Antoniastad, Iceland",
                            ConcurrencyStamp = "2982a9a8-a461-4e92-a86d-af8532ae1714",
                            CreatedAt = new DateTime(2024, 10, 6, 6, 18, 59, 149, DateTimeKind.Utc).AddTicks(4104),
                            Email = "Eloise_Borer93@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "Eloise",
                            LastName = "Borer",
                            LockoutEnabled = false,
                            NormalizedEmail = "ELOISE_BORER93@GMAIL.COM",
                            NormalizedUserName = "ELOISE.BORER",
                            PasswordHash = "AQAAAAIAAYagAAAAEHTsAxCKfyvMdq3UlX8wGI0WTrdauJUGrXEHbdXBaGDyFBSNF32J44ZPxTcG8N/qHA==",
                            PhoneNumber = "549-044-0157",
                            PhoneNumberConfirmed = true,
                            ProfilePictureUrl = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/286.jpg",
                            TwoFactorEnabled = false,
                            UserName = "Eloise.Borer"
                        },
                        new
                        {
                            Id = 13,
                            AccessFailedCount = 0,
                            Address = "69785 Alaina Rapids, Lake Rickeybury, Botswana",
                            ConcurrencyStamp = "fc97cab1-50a2-45f6-b32c-7a7fd90d1024",
                            CreatedAt = new DateTime(2024, 11, 21, 6, 18, 59, 149, DateTimeKind.Utc).AddTicks(4340),
                            Email = "Kody.Walter22@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "Kody",
                            LastName = "Walter",
                            LockoutEnabled = false,
                            NormalizedEmail = "KODY.WALTER22@GMAIL.COM",
                            NormalizedUserName = "KODY.WALTER52",
                            PasswordHash = "AQAAAAIAAYagAAAAEHNS52ZSapmJo1g90ZAcRsskB+lyBNVnp+pwEUqxlDgHznwcSFGgjglB/kbH03nsPg==",
                            PhoneNumber = "951-549-7955",
                            PhoneNumberConfirmed = true,
                            ProfilePictureUrl = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/757.jpg",
                            TwoFactorEnabled = false,
                            UserName = "Kody.Walter52"
                        },
                        new
                        {
                            Id = 14,
                            AccessFailedCount = 0,
                            Address = "34134 Deckow Drives, West Calebberg, Holy See (Vatican City State)",
                            ConcurrencyStamp = "b3f43a2a-d159-4b01-98d2-f641129f5a62",
                            CreatedAt = new DateTime(2024, 3, 1, 6, 18, 59, 149, DateTimeKind.Utc).AddTicks(4521),
                            Email = "Alvah_Mills@yahoo.com",
                            EmailConfirmed = true,
                            FirstName = "Alvah",
                            LastName = "Mills",
                            LockoutEnabled = false,
                            NormalizedEmail = "ALVAH_MILLS@YAHOO.COM",
                            NormalizedUserName = "ALVAH.MILLS22",
                            PasswordHash = "AQAAAAIAAYagAAAAEP6nu+Q57jMxc1OEE1f09GdFS1BS/QBrntVGdRK560py7BRHEvTjpVZIKn7F0oZMRw==",
                            PhoneNumber = "996-676-3314",
                            PhoneNumberConfirmed = true,
                            ProfilePictureUrl = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/766.jpg",
                            TwoFactorEnabled = false,
                            UserName = "Alvah.Mills22"
                        },
                        new
                        {
                            Id = 15,
                            AccessFailedCount = 0,
                            Address = "234 Gerhard Motorway, North Reymundoview, Saudi Arabia",
                            ConcurrencyStamp = "9637d8e2-b0bb-4249-935d-8bc9a2ac5114",
                            CreatedAt = new DateTime(2024, 8, 6, 6, 18, 59, 149, DateTimeKind.Utc).AddTicks(4725),
                            Email = "Barbara_Ward52@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "Barbara",
                            LastName = "Ward",
                            LockoutEnabled = false,
                            NormalizedEmail = "BARBARA_WARD52@GMAIL.COM",
                            NormalizedUserName = "BARBARA.WARD53",
                            PasswordHash = "AQAAAAIAAYagAAAAEHy6X4sL4AM3CZQkOtqYkS6WRc5KT0uMNBi02Vd7h8ose4NuGB2LQubwnhlWgTy89w==",
                            PhoneNumber = "683-861-9627",
                            PhoneNumberConfirmed = true,
                            ProfilePictureUrl = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/49.jpg",
                            TwoFactorEnabled = false,
                            UserName = "Barbara.Ward53"
                        },
                        new
                        {
                            Id = 16,
                            AccessFailedCount = 0,
                            Address = "405 Fahey Mountain, Lake Damien, Tanzania",
                            ConcurrencyStamp = "1dfd3e45-e3fc-4e78-a34e-52c9d4539007",
                            CreatedAt = new DateTime(2024, 11, 29, 6, 18, 59, 149, DateTimeKind.Utc).AddTicks(4887),
                            Email = "Deon_Fay4@yahoo.com",
                            EmailConfirmed = true,
                            FirstName = "Deon",
                            LastName = "Fay",
                            LockoutEnabled = false,
                            NormalizedEmail = "DEON_FAY4@YAHOO.COM",
                            NormalizedUserName = "DEON28",
                            PasswordHash = "AQAAAAIAAYagAAAAENHiy9pzwIYcC2Xy4+uYpwn6X/U8JB0sRzmul5o+XIcgpHb1a56z9b/Mv2w8+D+IdA==",
                            PhoneNumber = "670-090-9136",
                            PhoneNumberConfirmed = true,
                            ProfilePictureUrl = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/578.jpg",
                            TwoFactorEnabled = false,
                            UserName = "Deon28"
                        },
                        new
                        {
                            Id = 17,
                            AccessFailedCount = 0,
                            Address = "17720 Paris Causeway, Clarabelleberg, Guernsey",
                            ConcurrencyStamp = "f09ebaee-68bc-4cb1-b974-37740d15ef15",
                            CreatedAt = new DateTime(2024, 9, 4, 6, 18, 59, 149, DateTimeKind.Utc).AddTicks(5120),
                            Email = "Katharina_Gutmann@yahoo.com",
                            EmailConfirmed = true,
                            FirstName = "Katharina",
                            LastName = "Gutmann",
                            LockoutEnabled = false,
                            NormalizedEmail = "KATHARINA_GUTMANN@YAHOO.COM",
                            NormalizedUserName = "KATHARINA.GUTMANN32",
                            PasswordHash = "AQAAAAIAAYagAAAAEIw20gnsuSY6OuitG3+l6wg0V52h4FC7ruSCUtjD7Po03YKPTOOMLclM+43y281cDA==",
                            PhoneNumber = "505-153-7765",
                            PhoneNumberConfirmed = true,
                            ProfilePictureUrl = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/948.jpg",
                            TwoFactorEnabled = false,
                            UserName = "Katharina.Gutmann32"
                        },
                        new
                        {
                            Id = 18,
                            AccessFailedCount = 0,
                            Address = "1991 Sean Wells, Kertzmanntown, Moldova",
                            ConcurrencyStamp = "abe06661-6167-43c1-91da-6f19f2cba0e9",
                            CreatedAt = new DateTime(2024, 4, 23, 6, 18, 59, 149, DateTimeKind.Utc).AddTicks(5296),
                            Email = "Lance_Purdy45@hotmail.com",
                            EmailConfirmed = true,
                            FirstName = "Lance",
                            LastName = "Purdy",
                            LockoutEnabled = false,
                            NormalizedEmail = "LANCE_PURDY45@HOTMAIL.COM",
                            NormalizedUserName = "LANCE.PURDY89",
                            PasswordHash = "AQAAAAIAAYagAAAAEBUXDxg3YasvKmQmEbESzGjgWQk6rw58Gf0JKmhC4p+y944RndwUifOSuqZrNblg1g==",
                            PhoneNumber = "239-666-1496",
                            PhoneNumberConfirmed = true,
                            ProfilePictureUrl = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/641.jpg",
                            TwoFactorEnabled = false,
                            UserName = "Lance.Purdy89"
                        },
                        new
                        {
                            Id = 19,
                            AccessFailedCount = 0,
                            Address = "5636 Marquardt Route, Ferryburgh, Kenya",
                            ConcurrencyStamp = "1a8f0a6c-4659-47ad-860e-3d31472f75de",
                            CreatedAt = new DateTime(2024, 10, 28, 6, 18, 59, 149, DateTimeKind.Utc).AddTicks(5494),
                            Email = "Hannah.Hauck38@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "Hannah",
                            LastName = "Hauck",
                            LockoutEnabled = false,
                            NormalizedEmail = "HANNAH.HAUCK38@GMAIL.COM",
                            NormalizedUserName = "HANNAH15",
                            PasswordHash = "AQAAAAIAAYagAAAAELlwOMM0H3FybcJUfeGxg4fPx03nfAf99J3s3OFVqPeDN238P8Orl7DwMpII8ZG/5w==",
                            PhoneNumber = "156-743-5443",
                            PhoneNumberConfirmed = true,
                            ProfilePictureUrl = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/778.jpg",
                            TwoFactorEnabled = false,
                            UserName = "Hannah15"
                        },
                        new
                        {
                            Id = 20,
                            AccessFailedCount = 0,
                            Address = "6874 Purdy Corners, Aaronmouth, Bahamas",
                            ConcurrencyStamp = "3a5f4727-8307-4abe-ad51-441ecbc6e059",
                            CreatedAt = new DateTime(2024, 11, 9, 6, 18, 59, 149, DateTimeKind.Utc).AddTicks(5667),
                            Email = "Stuart58@yahoo.com",
                            EmailConfirmed = true,
                            FirstName = "Stuart",
                            LastName = "Stroman",
                            LockoutEnabled = false,
                            NormalizedEmail = "STUART58@YAHOO.COM",
                            NormalizedUserName = "STUART48",
                            PasswordHash = "AQAAAAIAAYagAAAAEFssbKaC2Q4bNx/jw3mRt7Kq8gLIoEyJxorbgQp+BBw8otgdjKsK3+MKr1ZCpkrIFg==",
                            PhoneNumber = "418-327-5031",
                            PhoneNumberConfirmed = true,
                            ProfilePictureUrl = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/472.jpg",
                            TwoFactorEnabled = false,
                            UserName = "Stuart48"
                        },
                        new
                        {
                            Id = 21,
                            AccessFailedCount = 0,
                            Address = "29415 Legros Street, Boyleland, New Caledonia",
                            ConcurrencyStamp = "d41eb555-3d58-4c53-a698-653f2fbd3f52",
                            CreatedAt = new DateTime(2024, 8, 30, 6, 18, 59, 149, DateTimeKind.Utc).AddTicks(5875),
                            Email = "Delia.Rodriguez30@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "Delia",
                            LastName = "Rodriguez",
                            LockoutEnabled = false,
                            NormalizedEmail = "DELIA.RODRIGUEZ30@GMAIL.COM",
                            NormalizedUserName = "DELIA.RODRIGUEZ66",
                            PasswordHash = "AQAAAAIAAYagAAAAEAVkK3ZrLD6NSFhq7m5++9yuYRII1+duuGpfASxfxqQBrh817vLe/AbBCr2vR5RJ5A==",
                            PhoneNumber = "307-910-9628",
                            PhoneNumberConfirmed = true,
                            ProfilePictureUrl = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/865.jpg",
                            TwoFactorEnabled = false,
                            UserName = "Delia.Rodriguez66"
                        },
                        new
                        {
                            Id = 22,
                            AccessFailedCount = 0,
                            Address = "873 Eliezer Common, Oleland, Croatia",
                            ConcurrencyStamp = "ef21a2cc-7586-437c-9358-e97bc4a09015",
                            CreatedAt = new DateTime(2024, 11, 19, 6, 18, 59, 149, DateTimeKind.Utc).AddTicks(6059),
                            Email = "Mohammed_Lesch@hotmail.com",
                            EmailConfirmed = true,
                            FirstName = "Mohammed",
                            LastName = "Lesch",
                            LockoutEnabled = false,
                            NormalizedEmail = "MOHAMMED_LESCH@HOTMAIL.COM",
                            NormalizedUserName = "MOHAMMED.LESCH19",
                            PasswordHash = "AQAAAAIAAYagAAAAENgtg0NZRYEOlGBbMZ1OAc/eHZuitLh7RQWQRdR/wKlMI0gZJGeSwflZ9rZ5A3spXA==",
                            PhoneNumber = "009-563-2914",
                            PhoneNumberConfirmed = true,
                            ProfilePictureUrl = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/778.jpg",
                            TwoFactorEnabled = false,
                            UserName = "Mohammed.Lesch19"
                        },
                        new
                        {
                            Id = 23,
                            AccessFailedCount = 0,
                            Address = "1520 Heidi Extensions, Gillianburgh, Virgin Islands, British",
                            ConcurrencyStamp = "ff733cf5-bb3d-4a06-8ba5-942f54213020",
                            CreatedAt = new DateTime(2024, 3, 26, 6, 18, 59, 149, DateTimeKind.Utc).AddTicks(6283),
                            Email = "Theron42@yahoo.com",
                            EmailConfirmed = true,
                            FirstName = "Theron",
                            LastName = "Steuber",
                            LockoutEnabled = false,
                            NormalizedEmail = "THERON42@YAHOO.COM",
                            NormalizedUserName = "THERON50",
                            PasswordHash = "AQAAAAIAAYagAAAAEOYyQVLxUYUjUHAxjCn/3SF1GIjRQp1V1JwEms2X9Rj/SCZzgEqQ5A95zP++6y3zrQ==",
                            PhoneNumber = "052-409-7641",
                            PhoneNumberConfirmed = true,
                            ProfilePictureUrl = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/954.jpg",
                            TwoFactorEnabled = false,
                            UserName = "Theron50"
                        },
                        new
                        {
                            Id = 24,
                            AccessFailedCount = 0,
                            Address = "6362 Bernita Curve, Macitown, Cocos (Keeling) Islands",
                            ConcurrencyStamp = "5c962957-5b03-4100-b93b-fefc23126145",
                            CreatedAt = new DateTime(2023, 12, 31, 6, 18, 59, 149, DateTimeKind.Utc).AddTicks(6452),
                            Email = "Chaz.Weber@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "Chaz",
                            LastName = "Weber",
                            LockoutEnabled = false,
                            NormalizedEmail = "CHAZ.WEBER@GMAIL.COM",
                            NormalizedUserName = "CHAZ23",
                            PasswordHash = "AQAAAAIAAYagAAAAEBdJHB6IY7EcJLvNtiFzxqv8UIgicu9Yfz2c0py1jEH5Rjhm3Yk5E7UkGyKfCrdRMg==",
                            PhoneNumber = "763-424-8418",
                            PhoneNumberConfirmed = true,
                            ProfilePictureUrl = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/933.jpg",
                            TwoFactorEnabled = false,
                            UserName = "Chaz23"
                        },
                        new
                        {
                            Id = 25,
                            AccessFailedCount = 0,
                            Address = "89723 Prosacco Dam, South Merlinbury, Samoa",
                            ConcurrencyStamp = "d359eb2e-7783-4497-883c-c709cf28bd39",
                            CreatedAt = new DateTime(2024, 3, 17, 6, 18, 59, 149, DateTimeKind.Utc).AddTicks(6657),
                            Email = "Sterling.Sporer@hotmail.com",
                            EmailConfirmed = true,
                            FirstName = "Sterling",
                            LastName = "Sporer",
                            LockoutEnabled = false,
                            NormalizedEmail = "STERLING.SPORER@HOTMAIL.COM",
                            NormalizedUserName = "STERLING.SPORER",
                            PasswordHash = "AQAAAAIAAYagAAAAEJarYZ6bePks7lYy/1R9WHL78d15qHEatNhmIGwLdhUGqIUES4wypPUW3ZWUpJkedw==",
                            PhoneNumber = "016-003-8229",
                            PhoneNumberConfirmed = true,
                            ProfilePictureUrl = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/140.jpg",
                            TwoFactorEnabled = false,
                            UserName = "Sterling.Sporer"
                        },
                        new
                        {
                            Id = 26,
                            AccessFailedCount = 0,
                            Address = "155 Robel Flat, Steuberland, United Arab Emirates",
                            ConcurrencyStamp = "a01ab9dc-fdb8-4ddc-844a-d989c9592e5e",
                            CreatedAt = new DateTime(2024, 7, 14, 6, 18, 59, 149, DateTimeKind.Utc).AddTicks(6865),
                            Email = "Ora24@yahoo.com",
                            EmailConfirmed = true,
                            FirstName = "Ora",
                            LastName = "Doyle",
                            LockoutEnabled = false,
                            NormalizedEmail = "ORA24@YAHOO.COM",
                            NormalizedUserName = "ORA38",
                            PasswordHash = "AQAAAAIAAYagAAAAEG9oYttEMuja+0ZJlMfBR5UPOSI3xOIkBETyruUkA6iNIq6FCZJcQyzzNhaKR/1b8w==",
                            PhoneNumber = "019-807-5312",
                            PhoneNumberConfirmed = true,
                            ProfilePictureUrl = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/667.jpg",
                            TwoFactorEnabled = false,
                            UserName = "Ora38"
                        },
                        new
                        {
                            Id = 27,
                            AccessFailedCount = 0,
                            Address = "54184 Arianna Pine, North Emileberg, Saint Kitts and Nevis",
                            ConcurrencyStamp = "3b8a3054-058f-4b77-8601-35bbd6eec0c9",
                            CreatedAt = new DateTime(2024, 6, 26, 6, 18, 59, 149, DateTimeKind.Utc).AddTicks(7099),
                            Email = "Agustina_Olson70@yahoo.com",
                            EmailConfirmed = true,
                            FirstName = "Agustina",
                            LastName = "Olson",
                            LockoutEnabled = false,
                            NormalizedEmail = "AGUSTINA_OLSON70@YAHOO.COM",
                            NormalizedUserName = "AGUSTINA61",
                            PasswordHash = "AQAAAAIAAYagAAAAEI709fCayHRlX9X1Bh95K17gxmCFdlYReBFxxjvYWs0ZinpCJBAVXsVYt+8EU+hbeA==",
                            PhoneNumber = "505-286-7045",
                            PhoneNumberConfirmed = true,
                            ProfilePictureUrl = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/438.jpg",
                            TwoFactorEnabled = false,
                            UserName = "Agustina61"
                        },
                        new
                        {
                            Id = 28,
                            AccessFailedCount = 0,
                            Address = "3820 Armstrong Expressway, Carlieport, Bangladesh",
                            ConcurrencyStamp = "5ce5c1a4-0db5-437b-9720-3153942c5cf7",
                            CreatedAt = new DateTime(2024, 8, 28, 6, 18, 59, 149, DateTimeKind.Utc).AddTicks(7272),
                            Email = "William_Beer@hotmail.com",
                            EmailConfirmed = true,
                            FirstName = "William",
                            LastName = "Beer",
                            LockoutEnabled = false,
                            NormalizedEmail = "WILLIAM_BEER@HOTMAIL.COM",
                            NormalizedUserName = "WILLIAM_BEER",
                            PasswordHash = "AQAAAAIAAYagAAAAEC0uWk3e7bD2IJsCF8y5I+ikIq+k2gWNNcPr7Osu3GWBIRLd+wwjZV6k8k3pHWQynA==",
                            PhoneNumber = "962-357-9812",
                            PhoneNumberConfirmed = true,
                            ProfilePictureUrl = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/924.jpg",
                            TwoFactorEnabled = false,
                            UserName = "William_Beer"
                        },
                        new
                        {
                            Id = 29,
                            AccessFailedCount = 0,
                            Address = "574 Sanford Pass, Lake Finn, Falkland Islands (Malvinas)",
                            ConcurrencyStamp = "fcdd9797-bf5a-4c5a-a12d-8f287e109e1d",
                            CreatedAt = new DateTime(2024, 3, 8, 6, 18, 59, 149, DateTimeKind.Utc).AddTicks(7472),
                            Email = "Sherman_Kris74@hotmail.com",
                            EmailConfirmed = true,
                            FirstName = "Sherman",
                            LastName = "Kris",
                            LockoutEnabled = false,
                            NormalizedEmail = "SHERMAN_KRIS74@HOTMAIL.COM",
                            NormalizedUserName = "SHERMAN.KRIS66",
                            PasswordHash = "AQAAAAIAAYagAAAAEOpUMMt9LxAWT57lcAB9FZ4Ccq0dYLGjQPI89o5H7wrh74JYQClA5kKkei5unVnu/A==",
                            PhoneNumber = "267-378-7795",
                            PhoneNumberConfirmed = true,
                            ProfilePictureUrl = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/1061.jpg",
                            TwoFactorEnabled = false,
                            UserName = "Sherman.Kris66"
                        },
                        new
                        {
                            Id = 30,
                            AccessFailedCount = 0,
                            Address = "54888 Rosella Terrace, East Katelynfort, Myanmar",
                            ConcurrencyStamp = "7db288f9-949b-4dfa-9d9c-9cea9673be1d",
                            CreatedAt = new DateTime(2024, 8, 13, 6, 18, 59, 149, DateTimeKind.Utc).AddTicks(7664),
                            Email = "Rachel57@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "Rachel",
                            LastName = "Konopelski",
                            LockoutEnabled = false,
                            NormalizedEmail = "RACHEL57@GMAIL.COM",
                            NormalizedUserName = "RACHEL.KONOPELSKI75",
                            PasswordHash = "AQAAAAIAAYagAAAAEIIiclH/gL9Mh/Ps023/DYSMHVeYhNO7bVvk0noKJ9UVh1rMW+wbT4KGzRUNc+s2Vw==",
                            PhoneNumber = "489-065-0722",
                            PhoneNumberConfirmed = true,
                            ProfilePictureUrl = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/1174.jpg",
                            TwoFactorEnabled = false,
                            UserName = "Rachel.Konopelski75"
                        },
                        new
                        {
                            Id = 31,
                            AccessFailedCount = 0,
                            Address = "37078 Dandre Crest, New Keithchester, Saint Pierre and Miquelon",
                            ConcurrencyStamp = "b55004be-110e-4774-8aba-beeff2c84ff6",
                            CreatedAt = new DateTime(2024, 5, 15, 6, 18, 59, 149, DateTimeKind.Utc).AddTicks(7863),
                            Email = "Tremayne33@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "Tremayne",
                            LastName = "Rolfson",
                            LockoutEnabled = false,
                            NormalizedEmail = "TREMAYNE33@GMAIL.COM",
                            NormalizedUserName = "TREMAYNE.ROLFSON2",
                            PasswordHash = "AQAAAAIAAYagAAAAECz4otxCz+uQKwn8Ro8waReu85q7xVd8FdBmqLd/pELmURTIKXepiIe4c+MQzotl/g==",
                            PhoneNumber = "398-490-1621",
                            PhoneNumberConfirmed = true,
                            ProfilePictureUrl = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/566.jpg",
                            TwoFactorEnabled = false,
                            UserName = "Tremayne.Rolfson2"
                        },
                        new
                        {
                            Id = 32,
                            AccessFailedCount = 0,
                            Address = "332 Randi River, Chelsiebury, Togo",
                            ConcurrencyStamp = "3e7cb79b-7a4a-4c7a-a88b-c47d8e38a8f7",
                            CreatedAt = new DateTime(2024, 5, 12, 6, 18, 59, 149, DateTimeKind.Utc).AddTicks(8075),
                            Email = "Jeanne84@hotmail.com",
                            EmailConfirmed = true,
                            FirstName = "Jeanne",
                            LastName = "Jacobs",
                            LockoutEnabled = false,
                            NormalizedEmail = "JEANNE84@HOTMAIL.COM",
                            NormalizedUserName = "JEANNE.JACOBS",
                            PasswordHash = "AQAAAAIAAYagAAAAEHsy48VXaKLlAGe4oxcGWfRdwLnhbqJRp6y1pCMzbO/Tja9P7wPXWZ7Hd5YwbhDNfw==",
                            PhoneNumber = "476-464-5988",
                            PhoneNumberConfirmed = true,
                            ProfilePictureUrl = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/497.jpg",
                            TwoFactorEnabled = false,
                            UserName = "Jeanne.Jacobs"
                        },
                        new
                        {
                            Id = 33,
                            AccessFailedCount = 0,
                            Address = "979 Kendrick Stream, Padbergfort, Benin",
                            ConcurrencyStamp = "2aa7f376-fed1-4833-b656-0477147ee028",
                            CreatedAt = new DateTime(2024, 10, 31, 6, 18, 59, 149, DateTimeKind.Utc).AddTicks(8249),
                            Email = "Joseph78@hotmail.com",
                            EmailConfirmed = true,
                            FirstName = "Joseph",
                            LastName = "Muller",
                            LockoutEnabled = false,
                            NormalizedEmail = "JOSEPH78@HOTMAIL.COM",
                            NormalizedUserName = "JOSEPH24",
                            PasswordHash = "AQAAAAIAAYagAAAAEDpxs/t4vTzKr3Ms8+F8VzQOtAWIwREM3etTYH5I1D4IFy6Rdq5vUNNjpOli1PzbkA==",
                            PhoneNumber = "002-922-0081",
                            PhoneNumberConfirmed = true,
                            ProfilePictureUrl = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/1171.jpg",
                            TwoFactorEnabled = false,
                            UserName = "Joseph24"
                        },
                        new
                        {
                            Id = 34,
                            AccessFailedCount = 0,
                            Address = "41548 Pagac Skyway, Lindgrenborough, Cuba",
                            ConcurrencyStamp = "87f42e8b-ec2a-41f3-b74d-b6c2b5b39ac6",
                            CreatedAt = new DateTime(2024, 5, 18, 6, 18, 59, 149, DateTimeKind.Utc).AddTicks(8446),
                            Email = "Eliezer_Medhurst@hotmail.com",
                            EmailConfirmed = true,
                            FirstName = "Eliezer",
                            LastName = "Medhurst",
                            LockoutEnabled = false,
                            NormalizedEmail = "ELIEZER_MEDHURST@HOTMAIL.COM",
                            NormalizedUserName = "ELIEZER.MEDHURST",
                            PasswordHash = "AQAAAAIAAYagAAAAELwjJ/NVEaL1IvMbWvVu95vDVV73Nv6EKFBcY5uArMs50GAy9S4KYFE930Sw1i67Mg==",
                            PhoneNumber = "076-328-0382",
                            PhoneNumberConfirmed = true,
                            ProfilePictureUrl = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/146.jpg",
                            TwoFactorEnabled = false,
                            UserName = "Eliezer.Medhurst"
                        },
                        new
                        {
                            Id = 35,
                            AccessFailedCount = 0,
                            Address = "04356 Alf Hills, Lake Ladariusshire, United States Minor Outlying Islands",
                            ConcurrencyStamp = "1704e3c4-9112-47e7-94d2-5e3a207a049f",
                            CreatedAt = new DateTime(2024, 11, 28, 6, 18, 59, 149, DateTimeKind.Utc).AddTicks(8628),
                            Email = "Tabitha_Daniel@hotmail.com",
                            EmailConfirmed = true,
                            FirstName = "Tabitha",
                            LastName = "Daniel",
                            LockoutEnabled = false,
                            NormalizedEmail = "TABITHA_DANIEL@HOTMAIL.COM",
                            NormalizedUserName = "TABITHA.DANIEL30",
                            PasswordHash = "AQAAAAIAAYagAAAAEB4IWUeDcFfrE9bXfY0oJJ8sqYMWA8ASfVgMn2MzX5xE+trPiNTDdgEblMc9gpdnkw==",
                            PhoneNumber = "968-450-7190",
                            PhoneNumberConfirmed = true,
                            ProfilePictureUrl = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/823.jpg",
                            TwoFactorEnabled = false,
                            UserName = "Tabitha.Daniel30"
                        },
                        new
                        {
                            Id = 36,
                            AccessFailedCount = 0,
                            Address = "2047 Vita Parkway, North Cleve, Samoa",
                            ConcurrencyStamp = "a98da4a9-7a41-406c-9dbc-060cba2172fa",
                            CreatedAt = new DateTime(2024, 2, 4, 6, 18, 59, 149, DateTimeKind.Utc).AddTicks(8813),
                            Email = "Hyman72@yahoo.com",
                            EmailConfirmed = true,
                            FirstName = "Hyman",
                            LastName = "Lindgren",
                            LockoutEnabled = false,
                            NormalizedEmail = "HYMAN72@YAHOO.COM",
                            NormalizedUserName = "HYMAN_LINDGREN65",
                            PasswordHash = "AQAAAAIAAYagAAAAEFDiPFsUU61OtXF2yQ02axi0r+i2TVeBsU4CiCEt9QvJZylrAFgmnsiNqZie0miPWA==",
                            PhoneNumber = "447-205-5668",
                            PhoneNumberConfirmed = true,
                            ProfilePictureUrl = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/99.jpg",
                            TwoFactorEnabled = false,
                            UserName = "Hyman_Lindgren65"
                        },
                        new
                        {
                            Id = 37,
                            AccessFailedCount = 0,
                            Address = "921 Nannie Ridge, Harrisfort, Cocos (Keeling) Islands",
                            ConcurrencyStamp = "e65c5b62-b8ac-4004-b2cf-681498b77c29",
                            CreatedAt = new DateTime(2024, 1, 5, 6, 18, 59, 149, DateTimeKind.Utc).AddTicks(8993),
                            Email = "Joyce.Schuster78@yahoo.com",
                            EmailConfirmed = true,
                            FirstName = "Joyce",
                            LastName = "Schuster",
                            LockoutEnabled = false,
                            NormalizedEmail = "JOYCE.SCHUSTER78@YAHOO.COM",
                            NormalizedUserName = "JOYCE6",
                            PasswordHash = "AQAAAAIAAYagAAAAEHOJmTUVs5wbsO/2S6wX/1bVkjxwZ/eL/POORaiGTcmR7lY6gK27TOYGjng7iyBZqA==",
                            PhoneNumber = "140-266-4884",
                            PhoneNumberConfirmed = true,
                            ProfilePictureUrl = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/319.jpg",
                            TwoFactorEnabled = false,
                            UserName = "Joyce6"
                        },
                        new
                        {
                            Id = 38,
                            AccessFailedCount = 0,
                            Address = "5088 Onie Row, New Kellyberg, Republic of Korea",
                            ConcurrencyStamp = "005087e5-28e5-48dc-b9d6-4e9ea6363dac",
                            CreatedAt = new DateTime(2024, 9, 20, 6, 18, 59, 149, DateTimeKind.Utc).AddTicks(9213),
                            Email = "Jaron.Lesch88@gmail.com",
                            EmailConfirmed = true,
                            FirstName = "Jaron",
                            LastName = "Lesch",
                            LockoutEnabled = false,
                            NormalizedEmail = "JARON.LESCH88@GMAIL.COM",
                            NormalizedUserName = "JARON_LESCH24",
                            PasswordHash = "AQAAAAIAAYagAAAAEAtTzRfT5zy+ogTbfjhRHhRgoOPeDFX3cPVXs/pa9a9c9EsMMMDj95k3MDZt3M0iqw==",
                            PhoneNumber = "132-456-1630",
                            PhoneNumberConfirmed = true,
                            ProfilePictureUrl = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/992.jpg",
                            TwoFactorEnabled = false,
                            UserName = "Jaron_Lesch24"
                        },
                        new
                        {
                            Id = 39,
                            AccessFailedCount = 0,
                            Address = "329 Gislason Plains, Stantonfort, Saint Kitts and Nevis",
                            ConcurrencyStamp = "e48f8298-6eab-4274-b11a-91e423f1259b",
                            CreatedAt = new DateTime(2024, 4, 29, 6, 18, 59, 149, DateTimeKind.Utc).AddTicks(9385),
                            Email = "Enoch_Goldner@hotmail.com",
                            EmailConfirmed = true,
                            FirstName = "Enoch",
                            LastName = "Goldner",
                            LockoutEnabled = false,
                            NormalizedEmail = "ENOCH_GOLDNER@HOTMAIL.COM",
                            NormalizedUserName = "ENOCH28",
                            PasswordHash = "AQAAAAIAAYagAAAAEH4w9ytqlS1ymIC21SQZxdI+Mszm3Saq8/AT5UD1zu0gHqVVAXGCX/V8EmcnypvqIQ==",
                            PhoneNumber = "273-786-8268",
                            PhoneNumberConfirmed = true,
                            ProfilePictureUrl = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/854.jpg",
                            TwoFactorEnabled = false,
                            UserName = "Enoch28"
                        },
                        new
                        {
                            Id = 40,
                            AccessFailedCount = 0,
                            Address = "87052 Johns Fields, Peterbury, Oman",
                            ConcurrencyStamp = "c90e43d6-8874-49bb-9503-7acd79029940",
                            CreatedAt = new DateTime(2024, 1, 19, 6, 18, 59, 149, DateTimeKind.Utc).AddTicks(9558),
                            Email = "Chloe19@hotmail.com",
                            EmailConfirmed = true,
                            FirstName = "Chloe",
                            LastName = "Halvorson",
                            LockoutEnabled = false,
                            NormalizedEmail = "CHLOE19@HOTMAIL.COM",
                            NormalizedUserName = "CHLOE.HALVORSON3",
                            PasswordHash = "AQAAAAIAAYagAAAAEHVw65WSOFDlJQlSyQICEo48ookLpb6C9txFohfLmegOtLGXlbcQzr1uveZ70hREZQ==",
                            PhoneNumber = "470-282-9333",
                            PhoneNumberConfirmed = true,
                            ProfilePictureUrl = "https://cloudflare-ipfs.com/ipfs/Qmd3W5DuhgHirLHGVixi6V76LhCkZUz6pnFt5AJBiyvHye/avatar/1083.jpg",
                            TwoFactorEnabled = false,
                            UserName = "Chloe.Halvorson3"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("IdentityRole");

                    b.HasData(
                        new
                        {
                            Id = "1",
                            Name = "Admin",
                            NormalizedName = "ADMIN"
                        },
                        new
                        {
                            Id = "2",
                            Name = "Customer",
                            NormalizedName = "CUSTOMER"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("ManboShopAPI.Domain.Entities.Address", b =>
                {
                    b.HasOne("ManboShopAPI.Domain.Entities.User", "User")
                        .WithMany("Addresses")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("ManboShopAPI.Domain.Entities.BannerDetail", b =>
                {
                    b.HasOne("ManboShopAPI.Domain.Entities.Banner", "Banner")
                        .WithMany("BannerDetails")
                        .HasForeignKey("BannerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ManboShopAPI.Domain.Entities.Product", "Product")
                        .WithMany("BannerDetails")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Banner");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("ManboShopAPI.Domain.Entities.CouponCondition", b =>
                {
                    b.HasOne("ManboShopAPI.Domain.Entities.Coupon", "Coupon")
                        .WithMany("CouponConditions")
                        .HasForeignKey("CouponId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Coupon");
                });

            modelBuilder.Entity("ManboShopAPI.Domain.Entities.Favorite", b =>
                {
                    b.HasOne("ManboShopAPI.Domain.Entities.Product", "Product")
                        .WithMany("Favorites")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ManboShopAPI.Domain.Entities.User", "User")
                        .WithMany("Favorites")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ManboShopAPI.Domain.Entities.Feedback", b =>
                {
                    b.HasOne("ManboShopAPI.Domain.Entities.Product", "Product")
                        .WithMany("Feedbacks")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ManboShopAPI.Domain.Entities.User", "User")
                        .WithMany("Feedbacks")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ManboShopAPI.Domain.Entities.NewsDetail", b =>
                {
                    b.HasOne("ManboShopAPI.Domain.Entities.News", "News")
                        .WithMany("NewsDetails")
                        .HasForeignKey("NewsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ManboShopAPI.Domain.Entities.Product", "Product")
                        .WithMany("NewsDetails")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("News");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("ManboShopAPI.Domain.Entities.Order", b =>
                {
                    b.HasOne("ManboShopAPI.Domain.Entities.Coupon", "Coupon")
                        .WithMany("Orders")
                        .HasForeignKey("CouponId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("ManboShopAPI.Domain.Entities.User", "User")
                        .WithMany("Orders")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Coupon");

                    b.Navigation("User");
                });

            modelBuilder.Entity("ManboShopAPI.Domain.Entities.OrderDetail", b =>
                {
                    b.HasOne("ManboShopAPI.Domain.Entities.Coupon", "Coupon")
                        .WithMany("OrderDetails")
                        .HasForeignKey("CouponId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("ManboShopAPI.Domain.Entities.Order", "Order")
                        .WithMany("OrderDetails")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ManboShopAPI.Domain.Entities.Product", "Product")
                        .WithMany("OrderDetails")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Coupon");

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("ManboShopAPI.Domain.Entities.Product", b =>
                {
                    b.HasOne("ManboShopAPI.Domain.Entities.Brand", "Brand")
                        .WithMany("Products")
                        .HasForeignKey("BrandId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("ManboShopAPI.Domain.Entities.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Brand");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("ManboShopAPI.Domain.Entities.ProductImage", b =>
                {
                    b.HasOne("ManboShopAPI.Domain.Entities.Product", "Product")
                        .WithMany("ProductImages")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<int>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole<int>", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<int>", b =>
                {
                    b.HasOne("ManboShopAPI.Domain.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<int>", b =>
                {
                    b.HasOne("ManboShopAPI.Domain.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<int>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole<int>", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ManboShopAPI.Domain.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<int>", b =>
                {
                    b.HasOne("ManboShopAPI.Domain.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ManboShopAPI.Domain.Entities.Banner", b =>
                {
                    b.Navigation("BannerDetails");
                });

            modelBuilder.Entity("ManboShopAPI.Domain.Entities.Brand", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("ManboShopAPI.Domain.Entities.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("ManboShopAPI.Domain.Entities.Coupon", b =>
                {
                    b.Navigation("CouponConditions");

                    b.Navigation("OrderDetails");

                    b.Navigation("Orders");
                });

            modelBuilder.Entity("ManboShopAPI.Domain.Entities.News", b =>
                {
                    b.Navigation("NewsDetails");
                });

            modelBuilder.Entity("ManboShopAPI.Domain.Entities.Order", b =>
                {
                    b.Navigation("OrderDetails");
                });

            modelBuilder.Entity("ManboShopAPI.Domain.Entities.Product", b =>
                {
                    b.Navigation("BannerDetails");

                    b.Navigation("Favorites");

                    b.Navigation("Feedbacks");

                    b.Navigation("NewsDetails");

                    b.Navigation("OrderDetails");

                    b.Navigation("ProductImages");
                });

            modelBuilder.Entity("ManboShopAPI.Domain.Entities.User", b =>
                {
                    b.Navigation("Addresses");

                    b.Navigation("Favorites");

                    b.Navigation("Feedbacks");

                    b.Navigation("Orders");
                });
#pragma warning restore 612, 618
        }
    }
}
